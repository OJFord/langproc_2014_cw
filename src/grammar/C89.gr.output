[[C89.gr (info)] Line 716: 
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: constant ->  floating_constant
2: constant ->  integer_constant
3: constant ->  enumeration_constant
4: constant ->  character_constant
5: floating_constant (FLOATCONSTANT) ->  FLOATCONSTANT
6: integer_constant (DECCONSTANT) ->  DECCONSTANT
7: integer_constant (OCTCONSTANT) ->  OCTCONSTANT
8: integer_constant (HEXCONSTANT) ->  HEXCONSTANT
9: enumeration_constant (IDENTIFIER) ->  IDENTIFIER
10: character_constant (CHARCONSTANT) ->  CHARCONSTANT
11: character_constant (WCHARCONSTANT) ->  WCHARCONSTANT
12: string_literal (STRINGLITERAL) ->  STRINGLITERAL
13: string_literal (WSTRINGLITERAL) ->  WSTRINGLITERAL
14: primary_expr (IDENTIFIER) ->  IDENTIFIER
15: primary_expr ->  constant
16: primary_expr ->  string_literal
17: primary_expr (LBRACKET) ->  LBRACKET expr RBRACKET
18: postfix_expr ->  primary_expr
19: postfix_expr (LSQUBRACKET) ->  postfix_expr LSQUBRACKET expr RSQUBRACKET
20: postfix_expr (LBRACKET) ->  postfix_expr LBRACKET RBRACKET
21: postfix_expr (LBRACKET) ->  postfix_expr LBRACKET arg_expr_list RBRACKET
22: postfix_expr (OPERATOR_DOT) ->  postfix_expr OPERATOR_DOT IDENTIFIER
23: postfix_expr (OPERATOR_PTR) ->  postfix_expr OPERATOR_PTR IDENTIFIER
24: postfix_expr (OPERATOR_INCR) ->  postfix_expr OPERATOR_INCR
25: postfix_expr (OPERATOR_DECR) ->  postfix_expr OPERATOR_DECR
26: arg_expr_list ->  assignment_expr
27: arg_expr_list (COMMA) ->  arg_expr_list COMMA assignment_expr
28: unary_expr ->  postfix_expr
29: unary_expr (PREINCR) ->  OPERATOR_INCR unary_expr
30: unary_expr (PREDECR) ->  OPERATOR_DECR unary_expr
31: unary_expr ->  unary_operation cast_expr
32: unary_expr (KW_SIZEOF) ->  KW_SIZEOF unary_expr
33: unary_expr (KW_SIZEOF) ->  KW_SIZEOF LBRACKET type_name RBRACKET
34: unary_operation (ADDR) ->  OPERATOR_BITAND
35: unary_operation (DEREF) ->  OPERATOR_MULT
36: unary_operation (UPLUS) ->  OPERATOR_PLUS
37: unary_operation (UMINUS) ->  OPERATOR_MINUS
38: unary_operation (OPERATOR_BITNEG) ->  OPERATOR_BITNEG
39: unary_operation (OPERATOR_BOOLNEG) ->  OPERATOR_BOOLNEG
40: cast_expr ->  unary_expr
41: cast_expr (CAST) ->  LBRACKET type_name RBRACKET cast_expr
42: multiplicative_expr ->  cast_expr
43: multiplicative_expr (OPERATOR_MULT) ->  multiplicative_expr OPERATOR_MULT cast_expr
44: multiplicative_expr (OPERATOR_DIV) ->  multiplicative_expr OPERATOR_DIV cast_expr
45: multiplicative_expr (OPERATOR_MOD) ->  multiplicative_expr OPERATOR_MOD cast_expr
46: additive_expr ->  multiplicative_expr
47: additive_expr (OPERATOR_PLUS) ->  additive_expr OPERATOR_PLUS multiplicative_expr
48: additive_expr (OPERATOR_MINUS) ->  additive_expr OPERATOR_MINUS multiplicative_expr
49: shift_expr ->  additive_expr
50: shift_expr (OPERATOR_BSL) ->  shift_expr OPERATOR_BSL additive_expr
51: shift_expr (OPERATOR_BSR) ->  shift_expr OPERATOR_BSR additive_expr
52: relational_expr ->  shift_expr
53: relational_expr (OPERATOR_LT) ->  relational_expr OPERATOR_LT shift_expr
54: relational_expr (OPERATOR_GT) ->  relational_expr OPERATOR_GT shift_expr
55: relational_expr (OPERATOR_LTEQU) ->  relational_expr OPERATOR_LTEQU shift_expr
56: relational_expr (OPERATOR_GTEQU) ->  relational_expr OPERATOR_GTEQU shift_expr
57: equality_expr ->  relational_expr
58: equality_expr (OPERATOR_EQUALITY) ->  equality_expr OPERATOR_EQUALITY relational_expr
59: equality_expr (OPERATOR_NEQU) ->  equality_expr OPERATOR_NEQU relational_expr
60: and_expr ->  equality_expr
61: and_expr (OPERATOR_BITAND) ->  and_expr OPERATOR_BITAND equality_expr
62: xor_expr ->  and_expr
63: xor_expr (OPERATOR_BITXOR) ->  xor_expr OPERATOR_BITXOR and_expr
64: or_expr ->  xor_expr
65: or_expr (OPERATOR_BITOR) ->  or_expr OPERATOR_BITOR xor_expr
66: logical_and_expr ->  or_expr
67: logical_and_expr (OPERATOR_BOOLAND) ->  logical_and_expr OPERATOR_BOOLAND or_expr
68: logical_or_expr ->  logical_and_expr
69: logical_or_expr (OPERATOR_BOOLOR) ->  logical_or_expr OPERATOR_BOOLOR logical_and_expr
70: conditional_expr ->  logical_or_expr
71: conditional_expr (OPERATOR_TERNARY) ->  logical_or_expr OPERATOR_TERNARY expr COLON conditional_expr
72: assignment_expr ->  conditional_expr
73: assignment_expr ->  unary_expr assignment_operator assignment_expr
74: assignment_operator (EQUALS) ->  EQUALS
75: assignment_operator (OPERATOR_MULTEQU) ->  OPERATOR_MULTEQU
76: assignment_operator (OPERATOR_DIVEQU) ->  OPERATOR_DIVEQU
77: assignment_operator (OPERATOR_MODEQU) ->  OPERATOR_MODEQU
78: assignment_operator (OPERATOR_PLUSEQU) ->  OPERATOR_PLUSEQU
79: assignment_operator (OPERATOR_MINUSEQU) ->  OPERATOR_MINUSEQU
80: assignment_operator (OPERATOR_BSLEQU) ->  OPERATOR_BSLEQU
81: assignment_operator (OPERATOR_BSREQU) ->  OPERATOR_BSREQU
82: assignment_operator (OPERATOR_ANDEQU) ->  OPERATOR_ANDEQU
83: assignment_operator (OPERATOR_XOREQU) ->  OPERATOR_XOREQU
84: assignment_operator (OPERATOR_OREQU) ->  OPERATOR_OREQU
85: expr ->  assignment_expr
86: expr (COMMA) ->  expr COMMA assignment_expr
87: constant_expr ->  conditional_expr
88: declaration (SCOLON) ->  declaration_specifiers SCOLON
89: declaration (SCOLON) ->  declaration_specifiers initialiser_declarator_list SCOLON
90: declaration_specifiers ->  storage_class_specifier declaration_specifiers
91: declaration_specifiers ->  storage_class_specifier
92: declaration_specifiers ->  type_specifier declaration_specifiers
93: declaration_specifiers ->  type_specifier
94: declaration_specifiers ->  type_qualifier declaration_specifiers
95: declaration_specifiers ->  type_qualifier
96: initialiser_declarator_list ->  initialiser_declarator
97: initialiser_declarator_list (COMMA) ->  initialiser_declarator_list COMMA initialiser_declarator
98: initialiser_declarator ->  declaration
99: initialiser_declarator (EQUALS) ->  declaration EQUALS initialiser
100: storage_class_specifier (KW_TYPEDEF) ->  KW_TYPEDEF
101: storage_class_specifier (KW_EXTERN) ->  KW_EXTERN
102: storage_class_specifier (KW_STATIC) ->  KW_STATIC
103: storage_class_specifier (KW_AUTO) ->  KW_AUTO
104: storage_class_specifier (KW_REGISTER) ->  KW_REGISTER
105: type_specifier (KW_VOID) ->  KW_VOID
106: type_specifier (KW_CHAR) ->  KW_CHAR
107: type_specifier (KW_SHORT) ->  KW_SHORT
108: type_specifier (KW_INT) ->  KW_INT
109: type_specifier (KW_LONG) ->  KW_LONG
110: type_specifier (KW_FLOAT) ->  KW_FLOAT
111: type_specifier (KW_DOUBLE) ->  KW_DOUBLE
112: type_specifier (KW_SIGNED) ->  KW_SIGNED
113: type_specifier (KW_UNSIGNED) ->  KW_UNSIGNED
114: type_specifier ->  struct_union_specifier
115: type_specifier ->  enum_specifier
116: type_specifier (TYPEDEF_IDENT) ->  typedef_name
117: struct_union_specifier (LBRACE) ->  struct_union LBRACE struct_declaration_list RBRACE
118: struct_union_specifier (IDENTIFIER) ->  struct_union IDENTIFIER LBRACE struct_declaration_list RBRACE
119: struct_union_specifier (IDENTIFIER) ->  struct_union IDENTIFIER
120: struct_union (KW_STRUCT) ->  KW_STRUCT
121: struct_union (KW_UNION) ->  KW_UNION
122: struct_declaration_list ->  struct_declaration
123: struct_declaration_list ->  struct_declaration_list struct_declaration
124: struct_declaration (SCOLON) ->  spec_qualifier_list struct_declarator_list SCOLON
125: spec_qualifier_list ->  type_specifier
126: spec_qualifier_list ->  type_specifier spec_qualifier_list
127: spec_qualifier_list ->  type_qualifier
128: spec_qualifier_list ->  type_qualifier spec_qualifier_list
129: struct_declarator_list ->  struct_declarator
130: struct_declarator_list (COMMA) ->  struct_declarator_list COMMA struct_declarator
131: struct_declarator ->  declarator
132: struct_declarator (COLON) ->  COLON constant_expr
133: struct_declarator (COLON) ->  declarator COLON constant_expr
134: enum_specifier (KW_ENUM) ->  KW_ENUM LBRACE enumerator_list RBRACE
135: enum_specifier (KW_ENUM) ->  KW_ENUM IDENTIFIER LBRACE enumerator_list RBRACE
136: enum_specifier (KW_ENUM) ->  KW_ENUM IDENTIFIER
137: enumerator_list ->  enumerator
138: enumerator_list (COMMA) ->  enumerator_list COMMA enumerator
139: enumerator ->  enumeration_constant
140: enumerator (EQUALS) ->  enumeration_constant EQUALS constant_expr
141: type_qualifier (KW_CONST) ->  KW_CONST
142: type_qualifier (KW_VOLATILE) ->  KW_VOLATILE
143: declarator ->  direct_declarator
144: declarator ->  pointer direct_declarator
145: direct_declarator (DECL_IDENT) ->  IDENTIFIER
146: direct_declarator (LBRACKET) ->  LBRACKET declarator RBRACKET
147: direct_declarator (LSQUBRACKET) ->  direct_declarator LSQUBRACKET RSQUBRACKET
148: direct_declarator (LSQUBRACKET) ->  direct_declarator LSQUBRACKET constant_expr RSQUBRACKET
149: direct_declarator (LBRACKET) ->  direct_declarator LBRACKET param_type_list RBRACKET
150: direct_declarator (LBRACKET) ->  direct_declarator LBRACKET RBRACKET
151: direct_declarator (LBRACKET) ->  direct_declarator LBRACKET identifier_list RBRACKET
152: pointer (OPERATOR_MULT) ->  OPERATOR_MULT
153: pointer (OPERATOR_MULT) ->  OPERATOR_MULT type_qualifier_list
154: pointer (OPERATOR_MULT) ->  OPERATOR_MULT pointer
155: pointer (OPERATOR_MULT) ->  OPERATOR_MULT type_qualifier_list pointer
156: type_qualifier_list ->  type_qualifier
157: type_qualifier_list ->  type_qualifier_list type_qualifier
158: param_type_list ->  param_list
159: param_type_list (COMMA) ->  param_list COMMA PUNCTUATOR_TRIPLEDOT
160: param_list ->  param_declaration
161: param_list (COMMA) ->  param_list COMMA param_declaration
162: param_declaration ->  declaration_specifiers declarator
163: param_declaration ->  declaration_specifiers
164: param_declaration ->  declaration_specifiers abstract_declarator
165: identifier_list (IDENTIFIER) ->  IDENTIFIER
166: identifier_list (COMMA) ->  identifier_list COMMA IDENTIFIER
167: type_name ->  spec_qualifier_list
168: type_name ->  spec_qualifier_list abstract_declarator
169: abstract_declarator ->  pointer
170: abstract_declarator ->  direct_abstract_declarator
171: abstract_declarator ->  pointer direct_abstract_declarator
172: direct_abstract_declarator (LBRACKET) ->  LBRACKET abstract_declarator RBRACKET
173: direct_abstract_declarator (LSQUBRACKET) ->  LSQUBRACKET RSQUBRACKET
174: direct_abstract_declarator (LSQUBRACKET) ->  direct_abstract_declarator LSQUBRACKET RSQUBRACKET
175: direct_abstract_declarator (LSQUBRACKET) ->  LSQUBRACKET constant_expr RSQUBRACKET
176: direct_abstract_declarator (LSQUBRACKET) ->  direct_abstract_declarator LSQUBRACKET constant_expr RSQUBRACKET
177: direct_abstract_declarator (LBRACKET) ->  LBRACKET RBRACKET
178: direct_abstract_declarator (LBRACKET) ->  direct_abstract_declarator LBRACKET RBRACKET
179: direct_abstract_declarator (LBRACKET) ->  LBRACKET param_type_list RBRACKET
180: direct_abstract_declarator (LBRACKET) ->  direct_abstract_declarator LBRACKET param_type_list RBRACKET
181: typedef_name (IDENTIFIER) ->  IDENTIFIER
182: initialiser ->  assignment_expr
183: initialiser (LBRACE) ->  LBRACE initialiser_list RBRACE
184: initialiser (LBRACE) ->  LBRACE initialiser_list COMMA RBRACE
185: initialiser_list ->  initialiser
186: initialiser_list (COMMA) ->  initialiser_list COMMA initialiser
187: stmt ->  labeled_stmt
188: stmt ->  compound_stmt
189: stmt ->  expr_stmt
190: stmt ->  select_stmt
191: stmt ->  iter_stmt
192: stmt ->  jump_stmt
193: labeled_stmt (IDENTIFIER) ->  IDENTIFIER COLON stmt
194: labeled_stmt (KW_CASE) ->  KW_CASE constant_expr COLON stmt
195: labeled_stmt (KW_DEFAULT) ->  KW_DEFAULT COLON stmt
196: compound_stmt (LBRACE) ->  LBRACE RBRACE
197: compound_stmt (LBRACE) ->  LBRACE declaration_list RBRACE
198: compound_stmt (LBRACE) ->  LBRACE stmt_list RBRACE
199: compound_stmt (LBRACE) ->  LBRACE declaration_list stmt_list RBRACE
200: declaration_list ->  declaration
201: declaration_list ->  declaration_list declaration
202: stmt_list ->  stmt
203: stmt_list ->  stmt_list stmt
204: expr_stmt (SCOLON) ->  SCOLON
205: expr_stmt (SCOLON) ->  expr SCOLON
206: select_stmt (KW_IF) ->  KW_IF LBRACKET expr RBRACKET stmt
207: select_stmt (KW_IF) ->  KW_IF LBRACKET expr RBRACKET stmt KW_ELSE stmt
208: select_stmt (KW_SWITCH) ->  KW_SWITCH LBRACKET expr RBRACKET stmt
209: iter_stmt (KW_WHILE) ->  KW_WHILE LBRACKET expr RBRACKET stmt
210: iter_stmt (KW_DO) ->  KW_DO stmt KW_WHILE LBRACKET expr RBRACKET SCOLON
211: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET SCOLON SCOLON RBRACKET stmt
212: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET expr SCOLON SCOLON RBRACKET stmt
213: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET SCOLON expr SCOLON RBRACKET stmt
214: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET SCOLON SCOLON expr RBRACKET stmt
215: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET expr SCOLON expr SCOLON RBRACKET stmt
216: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET expr SCOLON SCOLON expr RBRACKET stmt
217: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET SCOLON expr SCOLON expr RBRACKET stmt
218: iter_stmt (KW_FOR) ->  KW_FOR LBRACKET expr SCOLON expr SCOLON expr RBRACKET stmt
219: jump_stmt (KW_GOTO) ->  KW_GOTO IDENTIFIER SCOLON
220: jump_stmt (KW_CONTINUE) ->  KW_CONTINUE SCOLON
221: jump_stmt (KW_BREAK) ->  KW_BREAK SCOLON
222: jump_stmt (KW_RETURN) ->  KW_RETURN SCOLON
223: jump_stmt (KW_RETURN) ->  KW_RETURN expr SCOLON
224: translation_unit ->  external_declaration
225: translation_unit ->  translation_unit external_declaration
226: external_declaration ->  function_definition
227: external_declaration ->  declaration
228: function_definition ->  declaration_specifiers declarator compound_stmt
229: function_definition ->  declaration_specifiers declarator declaration_list compound_stmt
230: function_definition ->  declarator compound_stmt
231: function_definition ->  declarator declaration_list compound_stmt
232: translation_unit_$ ->  translation_unit

[[C89.gr (info)] 
Symbolic Terminal tokens:
       error
       EOF
   257: UNUM
   258: TYPEDEF_IDENT
   259: DECL_IDENT
   260: KW_AUTO
   261: KW_DOUBLE
   262: KW_INT
   263: KW_STRUCT
   264: KW_BREAK
   265: KW_ELSE
   266: KW_LONG
   267: KW_SWITCH
   268: KW_CASE
   269: KW_ENUM
   270: KW_REGISTER
   271: KW_TYPEDEF
   272: KW_CHAR
   273: KW_EXTERN
   274: KW_RETURN
   275: KW_UNION
   276: KW_CONST
   277: KW_FLOAT
   278: KW_SHORT
   279: KW_UNSIGNED
   280: KW_CONTINUE
   281: KW_FOR
   282: KW_SIGNED
   283: KW_VOID
   284: KW_DEFAULT
   285: KW_GOTO
   286: KW_VOLATILE
   287: KW_DO
   288: KW_IF
   289: KW_STATIC
   290: KW_WHILE
   291: IDENTIFIER
   292: FLOATCONSTANT
   293: DECCONSTANT
   294: OCTCONSTANT
   295: HEXCONSTANT
   296: CHARCONSTANT
   297: WCHARCONSTANT
   298: STRINGLITERAL
   299: WSTRINGLITERAL
   300: SCOLON
   301: PUNCTUATOR_TRIPLEDOT
   302: LBRACE
   303: RBRACE
   304: COMMA
   305: EQUALS
   306: OPERATOR_PLUSEQU
   307: OPERATOR_MINUSEQU
   308: OPERATOR_MULTEQU
   309: OPERATOR_DIVEQU
   310: OPERATOR_MODEQU
   311: OPERATOR_ANDEQU
   312: OPERATOR_XOREQU
   313: OPERATOR_OREQU
   314: OPERATOR_BSLEQU
   315: OPERATOR_BSREQU
   316: OPERATOR_TERNARY
   317: COLON
   318: OPERATOR_BITAND
   319: OPERATOR_BITXOR
   320: OPERATOR_BITOR
   321: OPERATOR_BOOLAND
   322: OPERATOR_BOOLOR
   323: OPERATOR_LT
   324: OPERATOR_LTEQU
   325: OPERATOR_GT
   326: OPERATOR_GTEQU
   327: OPERATOR_EQUALITY
   328: OPERATOR_NEQU
   329: OPERATOR_MULT
   330: OPERATOR_DIV
   331: OPERATOR_MOD
   332: OPERATOR_PLUS
   333: OPERATOR_MINUS
   334: OPERATOR_BSL
   335: OPERATOR_BSR
   336: PREINCR
   337: PREDECR
   338: UPLUS
   339: UMINUS
   340: OPERATOR_BOOLNEG
   341: OPERATOR_BITNEG
   342: CAST
   343: DEREF
   344: ADDR
   345: KW_SIZEOF
   346: LBRACKET
   347: RBRACKET
   348: LSQUBRACKET
   349: RSQUBRACKET
   350: OPERATOR_DOT
   351: OPERATOR_PTR
   352: OPERATOR_INCR
   353: OPERATOR_DECR

[[C89.gr (info)] 
Grammar States: 
[[C89.gr (info)] State 0:
232: translation_unit_$ ->  . translation_unit 
  0:   On translation_unit to state 1
  1:   On external_declaration to state 2
  2:   On function_definition to state 3
  3:   On declaration to state 4
  4:   On declaration_specifiers to state 5
  5:   On declarator to state 6
  6:   On storage_class_specifier to state 7
  7:   On type_specifier to state 8
  8:   On type_qualifier to state 9
  9:   On direct_declarator to state 10
  10:   On pointer to state 11
  11:   On KW_TYPEDEF to state 12
  12:   On KW_EXTERN to state 13
  13:   On KW_STATIC to state 14
  14:   On KW_AUTO to state 15
  15:   On KW_REGISTER to state 16
  16:   On KW_VOID to state 17
  17:   On KW_CHAR to state 18
  18:   On KW_SHORT to state 19
  19:   On KW_INT to state 20
  20:   On KW_LONG to state 21
  21:   On KW_FLOAT to state 22
  22:   On KW_DOUBLE to state 23
  23:   On KW_SIGNED to state 24
  24:   On KW_UNSIGNED to state 25
  25:   On struct_union_specifier to state 26
  26:   On enum_specifier to state 27
  27:   On typedef_name to state 28
  28:   On KW_CONST to state 29
  29:   On KW_VOLATILE to state 30
  30:   On IDENTIFIER to state 31
  31:   On LBRACKET to state 32
  32:   On OPERATOR_MULT to state 33
  33:   On struct_union to state 34
  34:   On KW_ENUM to state 35
  35:   On KW_STRUCT to state 36
  36:   On KW_UNION to state 37


State 1:
232: translation_unit_$ -> translation_unit  . 
225: translation_unit -> translation_unit  . external_declaration 
  0:   On external_declaration to state 38
  1:   On function_definition to state 3
  2:   On declaration to state 4
  3:   On declaration_specifiers to state 5
  4:   On declarator to state 6
  5:   On storage_class_specifier to state 7
  6:   On type_specifier to state 8
  7:   On type_qualifier to state 9
  8:   On direct_declarator to state 10
  9:   On pointer to state 11
  10:   On KW_TYPEDEF to state 12
  11:   On KW_EXTERN to state 13
  12:   On KW_STATIC to state 14
  13:   On KW_AUTO to state 15
  14:   On KW_REGISTER to state 16
  15:   On KW_VOID to state 17
  16:   On KW_CHAR to state 18
  17:   On KW_SHORT to state 19
  18:   On KW_INT to state 20
  19:   On KW_LONG to state 21
  20:   On KW_FLOAT to state 22
  21:   On KW_DOUBLE to state 23
  22:   On KW_SIGNED to state 24
  23:   On KW_UNSIGNED to state 25
  24:   On struct_union_specifier to state 26
  25:   On enum_specifier to state 27
  26:   On typedef_name to state 28
  27:   On KW_CONST to state 29
  28:   On KW_VOLATILE to state 30
  29:   On IDENTIFIER to state 31
  30:   On LBRACKET to state 32
  31:   On OPERATOR_MULT to state 33
  32:   On struct_union to state 34
  33:   On KW_ENUM to state 35
  34:   On KW_STRUCT to state 36
  35:   On KW_UNION to state 37


State 2:
224: translation_unit -> external_declaration  . 
  Reduce by 224: translation_unit -> external_declaration  . 


State 3:
226: external_declaration -> function_definition  . 
  Reduce by 226: external_declaration -> function_definition  . 


State 4:
227: external_declaration -> declaration  . 
  Reduce by 227: external_declaration -> declaration  . 


State 5:
228: function_definition -> declaration_specifiers  . declarator compound_stmt 
229: function_definition -> declaration_specifiers  . declarator declaration_list compound_stmt 
88: declaration -> declaration_specifiers  . SCOLON 
89: declaration -> declaration_specifiers  . initialiser_declarator_list SCOLON 
  0:   On declarator to state 39
  1:   On SCOLON to state 40
  2:   On initialiser_declarator_list to state 41
  3:   On direct_declarator to state 10
  4:   On pointer to state 11
  5:   On initialiser_declarator to state 42
  6:   On IDENTIFIER to state 31
  7:   On LBRACKET to state 32
  8:   On OPERATOR_MULT to state 33
  9:   On declaration to state 43
  10:   On declaration_specifiers to state 44
  11:   On storage_class_specifier to state 7
  12:   On type_specifier to state 8
  13:   On type_qualifier to state 9
  14:   On KW_TYPEDEF to state 12
  15:   On KW_EXTERN to state 13
  16:   On KW_STATIC to state 14
  17:   On KW_AUTO to state 15
  18:   On KW_REGISTER to state 16
  19:   On KW_VOID to state 17
  20:   On KW_CHAR to state 18
  21:   On KW_SHORT to state 19
  22:   On KW_INT to state 20
  23:   On KW_LONG to state 21
  24:   On KW_FLOAT to state 22
  25:   On KW_DOUBLE to state 23
  26:   On KW_SIGNED to state 24
  27:   On KW_UNSIGNED to state 25
  28:   On struct_union_specifier to state 26
  29:   On enum_specifier to state 27
  30:   On typedef_name to state 28
  31:   On KW_CONST to state 29
  32:   On KW_VOLATILE to state 30
  33:   On struct_union to state 34
  34:   On KW_ENUM to state 35
  35:   On KW_STRUCT to state 36
  36:   On KW_UNION to state 37


State 6:
230: function_definition -> declarator  . compound_stmt 
231: function_definition -> declarator  . declaration_list compound_stmt 
  0:   On compound_stmt to state 45
  1:   On declaration_list to state 46
  2:   On LBRACE to state 47
  3:   On declaration to state 48
  4:   On declaration_specifiers to state 44
  5:   On storage_class_specifier to state 7
  6:   On type_specifier to state 8
  7:   On type_qualifier to state 9
  8:   On KW_TYPEDEF to state 12
  9:   On KW_EXTERN to state 13
  10:   On KW_STATIC to state 14
  11:   On KW_AUTO to state 15
  12:   On KW_REGISTER to state 16
  13:   On KW_VOID to state 17
  14:   On KW_CHAR to state 18
  15:   On KW_SHORT to state 19
  16:   On KW_INT to state 20
  17:   On KW_LONG to state 21
  18:   On KW_FLOAT to state 22
  19:   On KW_DOUBLE to state 23
  20:   On KW_SIGNED to state 24
  21:   On KW_UNSIGNED to state 25
  22:   On struct_union_specifier to state 26
  23:   On enum_specifier to state 27
  24:   On typedef_name to state 28
  25:   On KW_CONST to state 29
  26:   On KW_VOLATILE to state 30
  27:   On struct_union to state 34
  28:   On KW_ENUM to state 35
  29:   On IDENTIFIER to state 49
  30:   On KW_STRUCT to state 36
  31:   On KW_UNION to state 37


State 7:
90: declaration_specifiers -> storage_class_specifier  . declaration_specifiers 
91: declaration_specifiers -> storage_class_specifier  . 
  0:   On declaration_specifiers to state 50
  1:   On storage_class_specifier to state 7
  2:   On type_specifier to state 8
  3:   On type_qualifier to state 9
  4:   On KW_TYPEDEF to state 12
  5:   On KW_EXTERN to state 13
  6:   On KW_STATIC to state 14
  7:   On KW_AUTO to state 15
  8:   On KW_REGISTER to state 16
  9:   On KW_VOID to state 17
  10:   On KW_CHAR to state 18
  11:   On KW_SHORT to state 19
  12:   On KW_INT to state 20
  13:   On KW_LONG to state 21
  14:   On KW_FLOAT to state 22
  15:   On KW_DOUBLE to state 23
  16:   On KW_SIGNED to state 24
  17:   On KW_UNSIGNED to state 25
  18:   On struct_union_specifier to state 26
  19:   On enum_specifier to state 27
  20:   On typedef_name to state 28
  21:   On KW_CONST to state 29
  22:   On KW_VOLATILE to state 30
  23:   On struct_union to state 34
  24:   On KW_ENUM to state 35
  25:   On IDENTIFIER to state 49
  26:   On KW_STRUCT to state 36
  27:   On KW_UNION to state 37
  Reduce by 91: declaration_specifiers -> storage_class_specifier  . 
Solved SR CONFLICT on KW_TYPEDEF:
	shift to state 12, removed KW_TYPEDEF from LA-set of rule 91)
Solved SR CONFLICT on KW_EXTERN:
	shift to state 13, removed KW_EXTERN from LA-set of rule 91)
Solved SR CONFLICT on KW_STATIC:
	shift to state 14, removed KW_STATIC from LA-set of rule 91)
Solved SR CONFLICT on KW_AUTO:
	shift to state 15, removed KW_AUTO from LA-set of rule 91)
Solved SR CONFLICT on KW_REGISTER:
	shift to state 16, removed KW_REGISTER from LA-set of rule 91)
Solved SR CONFLICT on KW_VOID:
	shift to state 17, removed KW_VOID from LA-set of rule 91)
Solved SR CONFLICT on KW_CHAR:
	shift to state 18, removed KW_CHAR from LA-set of rule 91)
Solved SR CONFLICT on KW_SHORT:
	shift to state 19, removed KW_SHORT from LA-set of rule 91)
Solved SR CONFLICT on KW_INT:
	shift to state 20, removed KW_INT from LA-set of rule 91)
Solved SR CONFLICT on KW_LONG:
	shift to state 21, removed KW_LONG from LA-set of rule 91)
Solved SR CONFLICT on KW_FLOAT:
	shift to state 22, removed KW_FLOAT from LA-set of rule 91)
Solved SR CONFLICT on KW_DOUBLE:
	shift to state 23, removed KW_DOUBLE from LA-set of rule 91)
Solved SR CONFLICT on KW_SIGNED:
	shift to state 24, removed KW_SIGNED from LA-set of rule 91)
Solved SR CONFLICT on KW_UNSIGNED:
	shift to state 25, removed KW_UNSIGNED from LA-set of rule 91)
Solved SR CONFLICT on KW_CONST:
	shift to state 29, removed KW_CONST from LA-set of rule 91)
Solved SR CONFLICT on KW_VOLATILE:
	shift to state 30, removed KW_VOLATILE from LA-set of rule 91)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 91)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 91)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 91)
Solved SR CONFLICT on IDENTIFIER:
	shift to state 49, removed IDENTIFIER from LA-set of rule 91)
Solved SR CONFLICT on KW_STRUCT:
	shift to state 36, removed KW_STRUCT from LA-set of rule 91)
Solved SR CONFLICT on KW_UNION:
	shift to state 37, removed KW_UNION from LA-set of rule 91)


State 8:
92: declaration_specifiers -> type_specifier  . declaration_specifiers 
93: declaration_specifiers -> type_specifier  . 
  0:   On declaration_specifiers to state 51
  1:   On storage_class_specifier to state 7
  2:   On type_specifier to state 8
  3:   On type_qualifier to state 9
  4:   On KW_TYPEDEF to state 12
  5:   On KW_EXTERN to state 13
  6:   On KW_STATIC to state 14
  7:   On KW_AUTO to state 15
  8:   On KW_REGISTER to state 16
  9:   On KW_VOID to state 17
  10:   On KW_CHAR to state 18
  11:   On KW_SHORT to state 19
  12:   On KW_INT to state 20
  13:   On KW_LONG to state 21
  14:   On KW_FLOAT to state 22
  15:   On KW_DOUBLE to state 23
  16:   On KW_SIGNED to state 24
  17:   On KW_UNSIGNED to state 25
  18:   On struct_union_specifier to state 26
  19:   On enum_specifier to state 27
  20:   On typedef_name to state 28
  21:   On KW_CONST to state 29
  22:   On KW_VOLATILE to state 30
  23:   On struct_union to state 34
  24:   On KW_ENUM to state 35
  25:   On IDENTIFIER to state 49
  26:   On KW_STRUCT to state 36
  27:   On KW_UNION to state 37
  Reduce by 93: declaration_specifiers -> type_specifier  . 
Solved SR CONFLICT on KW_TYPEDEF:
	shift to state 12, removed KW_TYPEDEF from LA-set of rule 93)
Solved SR CONFLICT on KW_EXTERN:
	shift to state 13, removed KW_EXTERN from LA-set of rule 93)
Solved SR CONFLICT on KW_STATIC:
	shift to state 14, removed KW_STATIC from LA-set of rule 93)
Solved SR CONFLICT on KW_AUTO:
	shift to state 15, removed KW_AUTO from LA-set of rule 93)
Solved SR CONFLICT on KW_REGISTER:
	shift to state 16, removed KW_REGISTER from LA-set of rule 93)
Solved SR CONFLICT on KW_VOID:
	shift to state 17, removed KW_VOID from LA-set of rule 93)
Solved SR CONFLICT on KW_CHAR:
	shift to state 18, removed KW_CHAR from LA-set of rule 93)
Solved SR CONFLICT on KW_SHORT:
	shift to state 19, removed KW_SHORT from LA-set of rule 93)
Solved SR CONFLICT on KW_INT:
	shift to state 20, removed KW_INT from LA-set of rule 93)
Solved SR CONFLICT on KW_LONG:
	shift to state 21, removed KW_LONG from LA-set of rule 93)
Solved SR CONFLICT on KW_FLOAT:
	shift to state 22, removed KW_FLOAT from LA-set of rule 93)
Solved SR CONFLICT on KW_DOUBLE:
	shift to state 23, removed KW_DOUBLE from LA-set of rule 93)
Solved SR CONFLICT on KW_SIGNED:
	shift to state 24, removed KW_SIGNED from LA-set of rule 93)
Solved SR CONFLICT on KW_UNSIGNED:
	shift to state 25, removed KW_UNSIGNED from LA-set of rule 93)
Solved SR CONFLICT on KW_CONST:
	shift to state 29, removed KW_CONST from LA-set of rule 93)
Solved SR CONFLICT on KW_VOLATILE:
	shift to state 30, removed KW_VOLATILE from LA-set of rule 93)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 93)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 93)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 93)
Solved SR CONFLICT on IDENTIFIER:
	shift to state 49, removed IDENTIFIER from LA-set of rule 93)
Solved SR CONFLICT on KW_STRUCT:
	shift to state 36, removed KW_STRUCT from LA-set of rule 93)
Solved SR CONFLICT on KW_UNION:
	shift to state 37, removed KW_UNION from LA-set of rule 93)


State 9:
94: declaration_specifiers -> type_qualifier  . declaration_specifiers 
95: declaration_specifiers -> type_qualifier  . 
  0:   On declaration_specifiers to state 52
  1:   On storage_class_specifier to state 7
  2:   On type_specifier to state 8
  3:   On type_qualifier to state 9
  4:   On KW_TYPEDEF to state 12
  5:   On KW_EXTERN to state 13
  6:   On KW_STATIC to state 14
  7:   On KW_AUTO to state 15
  8:   On KW_REGISTER to state 16
  9:   On KW_VOID to state 17
  10:   On KW_CHAR to state 18
  11:   On KW_SHORT to state 19
  12:   On KW_INT to state 20
  13:   On KW_LONG to state 21
  14:   On KW_FLOAT to state 22
  15:   On KW_DOUBLE to state 23
  16:   On KW_SIGNED to state 24
  17:   On KW_UNSIGNED to state 25
  18:   On struct_union_specifier to state 26
  19:   On enum_specifier to state 27
  20:   On typedef_name to state 28
  21:   On KW_CONST to state 29
  22:   On KW_VOLATILE to state 30
  23:   On struct_union to state 34
  24:   On KW_ENUM to state 35
  25:   On IDENTIFIER to state 49
  26:   On KW_STRUCT to state 36
  27:   On KW_UNION to state 37
  Reduce by 95: declaration_specifiers -> type_qualifier  . 
Solved SR CONFLICT on KW_TYPEDEF:
	shift to state 12, removed KW_TYPEDEF from LA-set of rule 95)
Solved SR CONFLICT on KW_EXTERN:
	shift to state 13, removed KW_EXTERN from LA-set of rule 95)
Solved SR CONFLICT on KW_STATIC:
	shift to state 14, removed KW_STATIC from LA-set of rule 95)
Solved SR CONFLICT on KW_AUTO:
	shift to state 15, removed KW_AUTO from LA-set of rule 95)
Solved SR CONFLICT on KW_REGISTER:
	shift to state 16, removed KW_REGISTER from LA-set of rule 95)
Solved SR CONFLICT on KW_VOID:
	shift to state 17, removed KW_VOID from LA-set of rule 95)
Solved SR CONFLICT on KW_CHAR:
	shift to state 18, removed KW_CHAR from LA-set of rule 95)
Solved SR CONFLICT on KW_SHORT:
	shift to state 19, removed KW_SHORT from LA-set of rule 95)
Solved SR CONFLICT on KW_INT:
	shift to state 20, removed KW_INT from LA-set of rule 95)
Solved SR CONFLICT on KW_LONG:
	shift to state 21, removed KW_LONG from LA-set of rule 95)
Solved SR CONFLICT on KW_FLOAT:
	shift to state 22, removed KW_FLOAT from LA-set of rule 95)
Solved SR CONFLICT on KW_DOUBLE:
	shift to state 23, removed KW_DOUBLE from LA-set of rule 95)
Solved SR CONFLICT on KW_SIGNED:
	shift to state 24, removed KW_SIGNED from LA-set of rule 95)
Solved SR CONFLICT on KW_UNSIGNED:
	shift to state 25, removed KW_UNSIGNED from LA-set of rule 95)
Solved SR CONFLICT on KW_CONST:
	shift to state 29, removed KW_CONST from LA-set of rule 95)
Solved SR CONFLICT on KW_VOLATILE:
	shift to state 30, removed KW_VOLATILE from LA-set of rule 95)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 95)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 95)
Solved SR CONFLICT on KW_ENUM:
	shift to state 35, removed KW_ENUM from LA-set of rule 95)
Solved SR CONFLICT on IDENTIFIER:
	shift to state 49, removed IDENTIFIER from LA-set of rule 95)
Solved SR CONFLICT on KW_STRUCT:
	shift to state 36, removed KW_STRUCT from LA-set of rule 95)
Solved SR CONFLICT on KW_UNION:
	shift to state 37, removed KW_UNION from LA-set of rule 95)


State 10:
143: declarator -> direct_declarator  . 
147: direct_declarator -> direct_declarator  . LSQUBRACKET RSQUBRACKET 
148: direct_declarator -> direct_declarator  . LSQUBRACKET constant_expr RSQUBRACKET 
149: direct_declarator -> direct_declarator  . LBRACKET param_type_list RBRACKET 
150: direct_declarator -> direct_declarator  . LBRACKET RBRACKET 
151: direct_declarator -> direct_declarator  . LBRACKET identifier_list RBRACKET 
  0:   On LSQUBRACKET to state 53
  1:   On LBRACKET to state 54
  Reduce by 143: declarator -> direct_declarator  . 


State 11:
144: declarator -> pointer  . direct_declarator 
  0:   On direct_declarator to state 55
  1:   On IDENTIFIER to state 56
  2:   On LBRACKET to state 32


State 12:
100: storage_class_specifier -> KW_TYPEDEF  . 
  Reduce by 100: storage_class_specifier -> KW_TYPEDEF  . 


State 13:
101: storage_class_specifier -> KW_EXTERN  . 
  Reduce by 101: storage_class_specifier -> KW_EXTERN  . 


State 14:
102: storage_class_specifier -> KW_STATIC  . 
  Reduce by 102: storage_class_specifier -> KW_STATIC  . 


State 15:
103: storage_class_specifier -> KW_AUTO  . 
  Reduce by 103: storage_class_specifier -> KW_AUTO  . 


State 16:
104: storage_class_specifier -> KW_REGISTER  . 
  Reduce by 104: storage_class_specifier -> KW_REGISTER  . 


State 17:
105: type_specifier -> KW_VOID  . 
  Reduce by 105: type_specifier -> KW_VOID  . 


State 18:
106: type_specifier -> KW_CHAR  . 
  Reduce by 106: type_specifier -> KW_CHAR  . 


State 19:
107: type_specifier -> KW_SHORT  . 
  Reduce by 107: type_specifier -> KW_SHORT  . 


State 20:
108: type_specifier -> KW_INT  . 
  Reduce by 108: type_specifier -> KW_INT  . 


State 21:
109: type_specifier -> KW_LONG  . 
  Reduce by 109: type_specifier -> KW_LONG  . 


State 22:
110: type_specifier -> KW_FLOAT  . 
  Reduce by 110: type_specifier -> KW_FLOAT  . 


State 23:
111: type_specifier -> KW_DOUBLE  . 
  Reduce by 111: type_specifier -> KW_DOUBLE  . 


State 24:
112: type_specifier -> KW_SIGNED  . 
  Reduce by 112: type_specifier -> KW_SIGNED  . 


State 25:
113: type_specifier -> KW_UNSIGNED  . 
  Reduce by 113: type_specifier -> KW_UNSIGNED  . 


State 26:
114: type_specifier -> struct_union_specifier  . 
  Reduce by 114: type_specifier -> struct_union_specifier  . 


State 27:
115: type_specifier -> enum_specifier  . 
  Reduce by 115: type_specifier -> enum_specifier  . 


State 28:
116: type_specifier -> typedef_name  . 
  Reduce by 116: type_specifier -> typedef_name  . 


State 29:
141: type_qualifier -> KW_CONST  . 
  Reduce by 141: type_qualifier -> KW_CONST  . 


State 30:
142: type_qualifier -> KW_VOLATILE  . 
  Reduce by 142: type_qualifier -> KW_VOLATILE  . 


State 31:
145: direct_declarator -> IDENTIFIER  . 
181: typedef_name -> IDENTIFIER  . 
  Reduce by 145: direct_declarator -> IDENTIFIER  . 
  Reduce by 181: typedef_name -> IDENTIFIER  . 


State 32:
146: direct_declarator -> LBRACKET  . declarator RBRACKET 
  0:   On declarator to state 57
  1:   On direct_declarator to state 10
  2:   On pointer to state 11
  3:   On IDENTIFIER to state 56
  4:   On LBRACKET to state 32
  5:   On OPERATOR_MULT to state 33


State 33:
152: pointer -> OPERATOR_MULT  . 
153: pointer -> OPERATOR_MULT  . type_qualifier_list 
154: pointer -> OPERATOR_MULT  . pointer 
155: pointer -> OPERATOR_MULT  . type_qualifier_list pointer 
  0:   On type_qualifier_list to state 58
  1:   On pointer to state 59
  2:   On type_qualifier to state 60
  3:   On OPERATOR_MULT to state 33
  4:   On KW_CONST to state 29
  5:   On KW_VOLATILE to state 30
  Reduce by 152: pointer -> OPERATOR_MULT  . 


State 34:
117: struct_union_specifier -> struct_union  . LBRACE struct_declaration_list RBRACE 
118: struct_union_specifier -> struct_union  . IDENTIFIER LBRACE struct_declaration_list RBRACE 
119: struct_union_specifier -> struct_union  . IDENTIFIER 
  0:   On LBRACE to state 61
  1:   On IDENTIFIER to state 62


State 35:
134: enum_specifier -> KW_ENUM  . LBRACE enumerator_list RBRACE 
135: enum_specifier -> KW_ENUM  . IDENTIFIER LBRACE enumerator_list RBRACE 
136: enum_specifier -> KW_ENUM  . IDENTIFIER 
  0:   On LBRACE to state 63
  1:   On IDENTIFIER to state 64


State 36:
120: struct_union -> KW_STRUCT  . 
  Reduce by 120: struct_union -> KW_STRUCT  . 


State 37:
121: struct_union -> KW_UNION  . 
  Reduce by 121: struct_union -> KW_UNION  . 


State 38:
225: translation_unit -> translation_unit external_declaration  . 
  Reduce by 225: translation_unit -> translation_unit external_declaration  . 


State 39:
228: function_definition -> declaration_specifiers declarator  . compound_stmt 
229: function_definition -> declaration_specifiers declarator  . declaration_list compound_stmt 
  0:   On compound_stmt to state 65
  1:   On declaration_list to state 66
  2:   On LBRACE to state 47
  3:   On declaration to state 48
  4:   On declaration_specifiers to state 44
  5:   On storage_class_specifier to state 7
  6:   On type_specifier to state 8
  7:   On type_qualifier to state 9
  8:   On KW_TYPEDEF to state 12
  9:   On KW_EXTERN to state 13
  10:   On KW_STATIC to state 14
  11:   On KW_AUTO to state 15
  12:   On KW_REGISTER to state 16
  13:   On KW_VOID to state 17
  14:   On KW_CHAR to state 18
  15:   On KW_SHORT to state 19
  16:   On KW_INT to state 20
  17:   On KW_LONG to state 21
  18:   On KW_FLOAT to state 22
  19:   On KW_DOUBLE to state 23
  20:   On KW_SIGNED to state 24
  21:   On KW_UNSIGNED to state 25
  22:   On struct_union_specifier to state 26
  23:   On enum_specifier to state 27
  24:   On typedef_name to state 28
  25:   On KW_CONST to state 29
  26:   On KW_VOLATILE to state 30
  27:   On struct_union to state 34
  28:   On KW_ENUM to state 35
  29:   On IDENTIFIER to state 49
  30:   On KW_STRUCT to state 36
  31:   On KW_UNION to state 37


State 40:
88: declaration -> declaration_specifiers SCOLON  . 
  Reduce by 88: declaration -> declaration_specifiers SCOLON  . 


State 41:
89: declaration -> declaration_specifiers initialiser_declarator_list  . SCOLON 
97: initialiser_declarator_list -> initialiser_declarator_list  . COMMA initialiser_declarator 
  0:   On SCOLON to state 67
  1:   On COMMA to state 68


State 42:
96: initialiser_declarator_list -> initialiser_declarator  . 
  Reduce by 96: initialiser_declarator_list -> initialiser_declarator  . 


State 43:
98: initialiser_declarator -> declaration  . 
99: initialiser_declarator -> declaration  . EQUALS initialiser 
  0:   On EQUALS to state 69
  Reduce by 98: initialiser_declarator -> declaration  . 


State 44:
88: declaration -> declaration_specifiers  . SCOLON 
89: declaration -> declaration_specifiers  . initialiser_declarator_list SCOLON 
  0:   On SCOLON to state 40
  1:   On initialiser_declarator_list to state 41
  2:   On initialiser_declarator to state 42
  3:   On declaration to state 43
  4:   On declaration_specifiers to state 44
  5:   On storage_class_specifier to state 7
  6:   On type_specifier to state 8
  7:   On type_qualifier to state 9
  8:   On KW_TYPEDEF to state 12
  9:   On KW_EXTERN to state 13
  10:   On KW_STATIC to state 14
  11:   On KW_AUTO to state 15
  12:   On KW_REGISTER to state 16
  13:   On KW_VOID to state 17
  14:   On KW_CHAR to state 18
  15:   On KW_SHORT to state 19
  16:   On KW_INT to state 20
  17:   On KW_LONG to state 21
  18:   On KW_FLOAT to state 22
  19:   On KW_DOUBLE to state 23
  20:   On KW_SIGNED to state 24
  21:   On KW_UNSIGNED to state 25
  22:   On struct_union_specifier to state 26
  23:   On enum_specifier to state 27
  24:   On typedef_name to state 28
  25:   On KW_CONST to state 29
  26:   On KW_VOLATILE to state 30
  27:   On struct_union to state 34
  28:   On KW_ENUM to state 35
  29:   On IDENTIFIER to state 49
  30:   On KW_STRUCT to state 36
  31:   On KW_UNION to state 37


State 45:
230: function_definition -> declarator compound_stmt  . 
  Reduce by 230: function_definition -> declarator compound_stmt  . 


State 46:
231: function_definition -> declarator declaration_list  . compound_stmt 
201: declaration_list -> declaration_list  . declaration 
  0:   On compound_stmt to state 70
  1:   On declaration to state 71
  2:   On LBRACE to state 47
  3:   On declaration_specifiers to state 44
  4:   On storage_class_specifier to state 7
  5:   On type_specifier to state 8
  6:   On type_qualifier to state 9
  7:   On KW_TYPEDEF to state 12
  8:   On KW_EXTERN to state 13
  9:   On KW_STATIC to state 14
  10:   On KW_AUTO to state 15
  11:   On KW_REGISTER to state 16
  12:   On KW_VOID to state 17
  13:   On KW_CHAR to state 18
  14:   On KW_SHORT to state 19
  15:   On KW_INT to state 20
  16:   On KW_LONG to state 21
  17:   On KW_FLOAT to state 22
  18:   On KW_DOUBLE to state 23
  19:   On KW_SIGNED to state 24
  20:   On KW_UNSIGNED to state 25
  21:   On struct_union_specifier to state 26
  22:   On enum_specifier to state 27
  23:   On typedef_name to state 28
  24:   On KW_CONST to state 29
  25:   On KW_VOLATILE to state 30
  26:   On struct_union to state 34
  27:   On KW_ENUM to state 35
  28:   On IDENTIFIER to state 49
  29:   On KW_STRUCT to state 36
  30:   On KW_UNION to state 37


State 47:
196: compound_stmt -> LBRACE  . RBRACE 
197: compound_stmt -> LBRACE  . declaration_list RBRACE 
198: compound_stmt -> LBRACE  . stmt_list RBRACE 
199: compound_stmt -> LBRACE  . declaration_list stmt_list RBRACE 
  0:   On RBRACE to state 72
  1:   On declaration_list to state 73
  2:   On stmt_list to state 74
  3:   On declaration to state 48
  4:   On stmt to state 75
  5:   On declaration_specifiers to state 44
  6:   On labeled_stmt to state 76
  7:   On compound_stmt to state 77
  8:   On expr_stmt to state 78
  9:   On select_stmt to state 79
  10:   On iter_stmt to state 80
  11:   On jump_stmt to state 81
  12:   On storage_class_specifier to state 7
  13:   On type_specifier to state 8
  14:   On type_qualifier to state 9
  15:   On IDENTIFIER to state 82
  16:   On KW_CASE to state 83
  17:   On KW_DEFAULT to state 84
  18:   On LBRACE to state 47
  19:   On SCOLON to state 85
  20:   On expr to state 86
  21:   On KW_IF to state 87
  22:   On KW_SWITCH to state 88
  23:   On KW_WHILE to state 89
  24:   On KW_DO to state 90
  25:   On KW_FOR to state 91
  26:   On KW_GOTO to state 92
  27:   On KW_CONTINUE to state 93
  28:   On KW_BREAK to state 94
  29:   On KW_RETURN to state 95
  30:   On KW_TYPEDEF to state 12
  31:   On KW_EXTERN to state 13
  32:   On KW_STATIC to state 14
  33:   On KW_AUTO to state 15
  34:   On KW_REGISTER to state 16
  35:   On KW_VOID to state 17
  36:   On KW_CHAR to state 18
  37:   On KW_SHORT to state 19
  38:   On KW_INT to state 20
  39:   On KW_LONG to state 21
  40:   On KW_FLOAT to state 22
  41:   On KW_DOUBLE to state 23
  42:   On KW_SIGNED to state 24
  43:   On KW_UNSIGNED to state 25
  44:   On struct_union_specifier to state 26
  45:   On enum_specifier to state 27
  46:   On typedef_name to state 28
  47:   On KW_CONST to state 29
  48:   On KW_VOLATILE to state 30
  49:   On assignment_expr to state 96
  50:   On struct_union to state 34
  51:   On KW_ENUM to state 35
  52:   On conditional_expr to state 97
  53:   On unary_expr to state 98
  54:   On KW_STRUCT to state 36
  55:   On KW_UNION to state 37
  56:   On logical_or_expr to state 99
  57:   On postfix_expr to state 100
  58:   On OPERATOR_INCR to state 101
  59:   On OPERATOR_DECR to state 102
  60:   On unary_operation to state 103
  61:   On KW_SIZEOF to state 104
  62:   On logical_and_expr to state 105
  63:   On primary_expr to state 106
  64:   On OPERATOR_BITAND to state 107
  65:   On OPERATOR_MULT to state 108
  66:   On OPERATOR_PLUS to state 109
  67:   On OPERATOR_MINUS to state 110
  68:   On OPERATOR_BITNEG to state 111
  69:   On OPERATOR_BOOLNEG to state 112
  70:   On or_expr to state 113
  71:   On constant to state 114
  72:   On string_literal to state 115
  73:   On LBRACKET to state 116
  74:   On xor_expr to state 117
  75:   On floating_constant to state 118
  76:   On integer_constant to state 119
  77:   On enumeration_constant to state 120
  78:   On character_constant to state 121
  79:   On STRINGLITERAL to state 122
  80:   On WSTRINGLITERAL to state 123
  81:   On and_expr to state 124
  82:   On FLOATCONSTANT to state 125
  83:   On DECCONSTANT to state 126
  84:   On OCTCONSTANT to state 127
  85:   On HEXCONSTANT to state 128
  86:   On CHARCONSTANT to state 129
  87:   On WCHARCONSTANT to state 130
  88:   On equality_expr to state 131
  89:   On relational_expr to state 132
  90:   On shift_expr to state 133
  91:   On additive_expr to state 134
  92:   On multiplicative_expr to state 135
  93:   On cast_expr to state 136


State 48:
200: declaration_list -> declaration  . 
  Reduce by 200: declaration_list -> declaration  . 


State 49:
181: typedef_name -> IDENTIFIER  . 
  Reduce by 181: typedef_name -> IDENTIFIER  . 


State 50:
90: declaration_specifiers -> storage_class_specifier declaration_specifiers  . 
  Reduce by 90: declaration_specifiers -> storage_class_specifier declaration_specifiers  . 


State 51:
92: declaration_specifiers -> type_specifier declaration_specifiers  . 
  Reduce by 92: declaration_specifiers -> type_specifier declaration_specifiers  . 


State 52:
94: declaration_specifiers -> type_qualifier declaration_specifiers  . 
  Reduce by 94: declaration_specifiers -> type_qualifier declaration_specifiers  . 


State 53:
147: direct_declarator -> direct_declarator LSQUBRACKET  . RSQUBRACKET 
148: direct_declarator -> direct_declarator LSQUBRACKET  . constant_expr RSQUBRACKET 
  0:   On RSQUBRACKET to state 137
  1:   On constant_expr to state 138
  2:   On conditional_expr to state 139
  3:   On logical_or_expr to state 99
  4:   On logical_and_expr to state 105
  5:   On or_expr to state 113
  6:   On xor_expr to state 117
  7:   On and_expr to state 124
  8:   On equality_expr to state 131
  9:   On relational_expr to state 132
  10:   On shift_expr to state 133
  11:   On additive_expr to state 134
  12:   On multiplicative_expr to state 135
  13:   On cast_expr to state 136
  14:   On unary_expr to state 140
  15:   On LBRACKET to state 116
  16:   On postfix_expr to state 100
  17:   On OPERATOR_INCR to state 101
  18:   On OPERATOR_DECR to state 102
  19:   On unary_operation to state 103
  20:   On KW_SIZEOF to state 104
  21:   On primary_expr to state 106
  22:   On OPERATOR_BITAND to state 107
  23:   On OPERATOR_MULT to state 108
  24:   On OPERATOR_PLUS to state 109
  25:   On OPERATOR_MINUS to state 110
  26:   On OPERATOR_BITNEG to state 111
  27:   On OPERATOR_BOOLNEG to state 112
  28:   On IDENTIFIER to state 141
  29:   On constant to state 114
  30:   On string_literal to state 115
  31:   On floating_constant to state 118
  32:   On integer_constant to state 119
  33:   On enumeration_constant to state 120
  34:   On character_constant to state 121
  35:   On STRINGLITERAL to state 122
  36:   On WSTRINGLITERAL to state 123
  37:   On FLOATCONSTANT to state 125
  38:   On DECCONSTANT to state 126
  39:   On OCTCONSTANT to state 127
  40:   On HEXCONSTANT to state 128
  41:   On CHARCONSTANT to state 129
  42:   On WCHARCONSTANT to state 130


State 54:
149: direct_declarator -> direct_declarator LBRACKET  . param_type_list RBRACKET 
150: direct_declarator -> direct_declarator LBRACKET  . RBRACKET 
151: direct_declarator -> direct_declarator LBRACKET  . identifier_list RBRACKET 
  0:   On param_type_list to state 142
  1:   On RBRACKET to state 143
  2:   On identifier_list to state 144
  3:   On param_list to state 145
  4:   On IDENTIFIER to state 146
  5:   On param_declaration to state 147
  6:   On declaration_specifiers to state 148
  7:   On storage_class_specifier to state 7
  8:   On type_specifier to state 8
  9:   On type_qualifier to state 9
  10:   On KW_TYPEDEF to state 12
  11:   On KW_EXTERN to state 13
  12:   On KW_STATIC to state 14
  13:   On KW_AUTO to state 15
  14:   On KW_REGISTER to state 16
  15:   On KW_VOID to state 17
  16:   On KW_CHAR to state 18
  17:   On KW_SHORT to state 19
  18:   On KW_INT to state 20
  19:   On KW_LONG to state 21
  20:   On KW_FLOAT to state 22
  21:   On KW_DOUBLE to state 23
  22:   On KW_SIGNED to state 24
  23:   On KW_UNSIGNED to state 25
  24:   On struct_union_specifier to state 26
  25:   On enum_specifier to state 27
  26:   On typedef_name to state 28
  27:   On KW_CONST to state 29
  28:   On KW_VOLATILE to state 30
  29:   On struct_union to state 34
  30:   On KW_ENUM to state 35
  31:   On KW_STRUCT to state 36
  32:   On KW_UNION to state 37


State 55:
144: declarator -> pointer direct_declarator  . 
147: direct_declarator -> direct_declarator  . LSQUBRACKET RSQUBRACKET 
148: direct_declarator -> direct_declarator  . LSQUBRACKET constant_expr RSQUBRACKET 
149: direct_declarator -> direct_declarator  . LBRACKET param_type_list RBRACKET 
150: direct_declarator -> direct_declarator  . LBRACKET RBRACKET 
151: direct_declarator -> direct_declarator  . LBRACKET identifier_list RBRACKET 
  0:   On LSQUBRACKET to state 53
  1:   On LBRACKET to state 54
  Reduce by 144: declarator -> pointer direct_declarator  . 


State 56:
145: direct_declarator -> IDENTIFIER  . 
  Reduce by 145: direct_declarator -> IDENTIFIER  . 


State 57:
146: direct_declarator -> LBRACKET declarator  . RBRACKET 
  0:   On RBRACKET to state 149


State 58:
153: pointer -> OPERATOR_MULT type_qualifier_list  . 
155: pointer -> OPERATOR_MULT type_qualifier_list  . pointer 
157: type_qualifier_list -> type_qualifier_list  . type_qualifier 
  0:   On pointer to state 150
  1:   On type_qualifier to state 151
  2:   On OPERATOR_MULT to state 33
  3:   On KW_CONST to state 29
  4:   On KW_VOLATILE to state 30
  Reduce by 153: pointer -> OPERATOR_MULT type_qualifier_list  . 


State 59:
154: pointer -> OPERATOR_MULT pointer  . 
  Reduce by 154: pointer -> OPERATOR_MULT pointer  . 


State 60:
156: type_qualifier_list -> type_qualifier  . 
  Reduce by 156: type_qualifier_list -> type_qualifier  . 


State 61:
117: struct_union_specifier -> struct_union LBRACE  . struct_declaration_list RBRACE 
  0:   On struct_declaration_list to state 152
  1:   On struct_declaration to state 153
  2:   On spec_qualifier_list to state 154
  3:   On type_specifier to state 155
  4:   On type_qualifier to state 156
  5:   On KW_VOID to state 17
  6:   On KW_CHAR to state 18
  7:   On KW_SHORT to state 19
  8:   On KW_INT to state 20
  9:   On KW_LONG to state 21
  10:   On KW_FLOAT to state 22
  11:   On KW_DOUBLE to state 23
  12:   On KW_SIGNED to state 24
  13:   On KW_UNSIGNED to state 25
  14:   On struct_union_specifier to state 26
  15:   On enum_specifier to state 27
  16:   On typedef_name to state 28
  17:   On KW_CONST to state 29
  18:   On KW_VOLATILE to state 30
  19:   On struct_union to state 34
  20:   On KW_ENUM to state 35
  21:   On IDENTIFIER to state 49
  22:   On KW_STRUCT to state 36
  23:   On KW_UNION to state 37


State 62:
118: struct_union_specifier -> struct_union IDENTIFIER  . LBRACE struct_declaration_list RBRACE 
119: struct_union_specifier -> struct_union IDENTIFIER  . 
  0:   On LBRACE to state 157
  Reduce by 119: struct_union_specifier -> struct_union IDENTIFIER  . 


State 63:
134: enum_specifier -> KW_ENUM LBRACE  . enumerator_list RBRACE 
  0:   On enumerator_list to state 158
  1:   On enumerator to state 159
  2:   On enumeration_constant to state 160
  3:   On IDENTIFIER to state 161


State 64:
135: enum_specifier -> KW_ENUM IDENTIFIER  . LBRACE enumerator_list RBRACE 
136: enum_specifier -> KW_ENUM IDENTIFIER  . 
  0:   On LBRACE to state 162
  Reduce by 136: enum_specifier -> KW_ENUM IDENTIFIER  . 


State 65:
228: function_definition -> declaration_specifiers declarator compound_stmt  . 
  Reduce by 228: function_definition -> declaration_specifiers declarator compound_stmt  . 


State 66:
229: function_definition -> declaration_specifiers declarator declaration_list  . compound_stmt 
201: declaration_list -> declaration_list  . declaration 
  0:   On compound_stmt to state 163
  1:   On declaration to state 71
  2:   On LBRACE to state 47
  3:   On declaration_specifiers to state 44
  4:   On storage_class_specifier to state 7
  5:   On type_specifier to state 8
  6:   On type_qualifier to state 9
  7:   On KW_TYPEDEF to state 12
  8:   On KW_EXTERN to state 13
  9:   On KW_STATIC to state 14
  10:   On KW_AUTO to state 15
  11:   On KW_REGISTER to state 16
  12:   On KW_VOID to state 17
  13:   On KW_CHAR to state 18
  14:   On KW_SHORT to state 19
  15:   On KW_INT to state 20
  16:   On KW_LONG to state 21
  17:   On KW_FLOAT to state 22
  18:   On KW_DOUBLE to state 23
  19:   On KW_SIGNED to state 24
  20:   On KW_UNSIGNED to state 25
  21:   On struct_union_specifier to state 26
  22:   On enum_specifier to state 27
  23:   On typedef_name to state 28
  24:   On KW_CONST to state 29
  25:   On KW_VOLATILE to state 30
  26:   On struct_union to state 34
  27:   On KW_ENUM to state 35
  28:   On IDENTIFIER to state 49
  29:   On KW_STRUCT to state 36
  30:   On KW_UNION to state 37


State 67:
89: declaration -> declaration_specifiers initialiser_declarator_list SCOLON  . 
  Reduce by 89: declaration -> declaration_specifiers initialiser_declarator_list SCOLON  . 


State 68:
97: initialiser_declarator_list -> initialiser_declarator_list COMMA  . initialiser_declarator 
  0:   On initialiser_declarator to state 164
  1:   On declaration to state 43
  2:   On declaration_specifiers to state 44
  3:   On storage_class_specifier to state 7
  4:   On type_specifier to state 8
  5:   On type_qualifier to state 9
  6:   On KW_TYPEDEF to state 12
  7:   On KW_EXTERN to state 13
  8:   On KW_STATIC to state 14
  9:   On KW_AUTO to state 15
  10:   On KW_REGISTER to state 16
  11:   On KW_VOID to state 17
  12:   On KW_CHAR to state 18
  13:   On KW_SHORT to state 19
  14:   On KW_INT to state 20
  15:   On KW_LONG to state 21
  16:   On KW_FLOAT to state 22
  17:   On KW_DOUBLE to state 23
  18:   On KW_SIGNED to state 24
  19:   On KW_UNSIGNED to state 25
  20:   On struct_union_specifier to state 26
  21:   On enum_specifier to state 27
  22:   On typedef_name to state 28
  23:   On KW_CONST to state 29
  24:   On KW_VOLATILE to state 30
  25:   On struct_union to state 34
  26:   On KW_ENUM to state 35
  27:   On IDENTIFIER to state 49
  28:   On KW_STRUCT to state 36
  29:   On KW_UNION to state 37


State 69:
99: initialiser_declarator -> declaration EQUALS  . initialiser 
  0:   On initialiser to state 165
  1:   On assignment_expr to state 166
  2:   On LBRACE to state 167
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 70:
231: function_definition -> declarator declaration_list compound_stmt  . 
  Reduce by 231: function_definition -> declarator declaration_list compound_stmt  . 


State 71:
201: declaration_list -> declaration_list declaration  . 
  Reduce by 201: declaration_list -> declaration_list declaration  . 


State 72:
196: compound_stmt -> LBRACE RBRACE  . 
  Reduce by 196: compound_stmt -> LBRACE RBRACE  . 


State 73:
197: compound_stmt -> LBRACE declaration_list  . RBRACE 
199: compound_stmt -> LBRACE declaration_list  . stmt_list RBRACE 
201: declaration_list -> declaration_list  . declaration 
  0:   On RBRACE to state 168
  1:   On stmt_list to state 169
  2:   On declaration to state 71
  3:   On stmt to state 75
  4:   On declaration_specifiers to state 44
  5:   On labeled_stmt to state 76
  6:   On compound_stmt to state 77
  7:   On expr_stmt to state 78
  8:   On select_stmt to state 79
  9:   On iter_stmt to state 80
  10:   On jump_stmt to state 81
  11:   On storage_class_specifier to state 7
  12:   On type_specifier to state 8
  13:   On type_qualifier to state 9
  14:   On IDENTIFIER to state 82
  15:   On KW_CASE to state 83
  16:   On KW_DEFAULT to state 84
  17:   On LBRACE to state 47
  18:   On SCOLON to state 85
  19:   On expr to state 86
  20:   On KW_IF to state 87
  21:   On KW_SWITCH to state 88
  22:   On KW_WHILE to state 89
  23:   On KW_DO to state 90
  24:   On KW_FOR to state 91
  25:   On KW_GOTO to state 92
  26:   On KW_CONTINUE to state 93
  27:   On KW_BREAK to state 94
  28:   On KW_RETURN to state 95
  29:   On KW_TYPEDEF to state 12
  30:   On KW_EXTERN to state 13
  31:   On KW_STATIC to state 14
  32:   On KW_AUTO to state 15
  33:   On KW_REGISTER to state 16
  34:   On KW_VOID to state 17
  35:   On KW_CHAR to state 18
  36:   On KW_SHORT to state 19
  37:   On KW_INT to state 20
  38:   On KW_LONG to state 21
  39:   On KW_FLOAT to state 22
  40:   On KW_DOUBLE to state 23
  41:   On KW_SIGNED to state 24
  42:   On KW_UNSIGNED to state 25
  43:   On struct_union_specifier to state 26
  44:   On enum_specifier to state 27
  45:   On typedef_name to state 28
  46:   On KW_CONST to state 29
  47:   On KW_VOLATILE to state 30
  48:   On assignment_expr to state 96
  49:   On struct_union to state 34
  50:   On KW_ENUM to state 35
  51:   On conditional_expr to state 97
  52:   On unary_expr to state 98
  53:   On KW_STRUCT to state 36
  54:   On KW_UNION to state 37
  55:   On logical_or_expr to state 99
  56:   On postfix_expr to state 100
  57:   On OPERATOR_INCR to state 101
  58:   On OPERATOR_DECR to state 102
  59:   On unary_operation to state 103
  60:   On KW_SIZEOF to state 104
  61:   On logical_and_expr to state 105
  62:   On primary_expr to state 106
  63:   On OPERATOR_BITAND to state 107
  64:   On OPERATOR_MULT to state 108
  65:   On OPERATOR_PLUS to state 109
  66:   On OPERATOR_MINUS to state 110
  67:   On OPERATOR_BITNEG to state 111
  68:   On OPERATOR_BOOLNEG to state 112
  69:   On or_expr to state 113
  70:   On constant to state 114
  71:   On string_literal to state 115
  72:   On LBRACKET to state 116
  73:   On xor_expr to state 117
  74:   On floating_constant to state 118
  75:   On integer_constant to state 119
  76:   On enumeration_constant to state 120
  77:   On character_constant to state 121
  78:   On STRINGLITERAL to state 122
  79:   On WSTRINGLITERAL to state 123
  80:   On and_expr to state 124
  81:   On FLOATCONSTANT to state 125
  82:   On DECCONSTANT to state 126
  83:   On OCTCONSTANT to state 127
  84:   On HEXCONSTANT to state 128
  85:   On CHARCONSTANT to state 129
  86:   On WCHARCONSTANT to state 130
  87:   On equality_expr to state 131
  88:   On relational_expr to state 132
  89:   On shift_expr to state 133
  90:   On additive_expr to state 134
  91:   On multiplicative_expr to state 135
  92:   On cast_expr to state 136


State 74:
198: compound_stmt -> LBRACE stmt_list  . RBRACE 
203: stmt_list -> stmt_list  . stmt 
  0:   On RBRACE to state 170
  1:   On stmt to state 171
  2:   On labeled_stmt to state 76
  3:   On compound_stmt to state 77
  4:   On expr_stmt to state 78
  5:   On select_stmt to state 79
  6:   On iter_stmt to state 80
  7:   On jump_stmt to state 81
  8:   On IDENTIFIER to state 172
  9:   On KW_CASE to state 83
  10:   On KW_DEFAULT to state 84
  11:   On LBRACE to state 47
  12:   On SCOLON to state 85
  13:   On expr to state 86
  14:   On KW_IF to state 87
  15:   On KW_SWITCH to state 88
  16:   On KW_WHILE to state 89
  17:   On KW_DO to state 90
  18:   On KW_FOR to state 91
  19:   On KW_GOTO to state 92
  20:   On KW_CONTINUE to state 93
  21:   On KW_BREAK to state 94
  22:   On KW_RETURN to state 95
  23:   On assignment_expr to state 96
  24:   On conditional_expr to state 97
  25:   On unary_expr to state 98
  26:   On logical_or_expr to state 99
  27:   On postfix_expr to state 100
  28:   On OPERATOR_INCR to state 101
  29:   On OPERATOR_DECR to state 102
  30:   On unary_operation to state 103
  31:   On KW_SIZEOF to state 104
  32:   On logical_and_expr to state 105
  33:   On primary_expr to state 106
  34:   On OPERATOR_BITAND to state 107
  35:   On OPERATOR_MULT to state 108
  36:   On OPERATOR_PLUS to state 109
  37:   On OPERATOR_MINUS to state 110
  38:   On OPERATOR_BITNEG to state 111
  39:   On OPERATOR_BOOLNEG to state 112
  40:   On or_expr to state 113
  41:   On constant to state 114
  42:   On string_literal to state 115
  43:   On LBRACKET to state 116
  44:   On xor_expr to state 117
  45:   On floating_constant to state 118
  46:   On integer_constant to state 119
  47:   On enumeration_constant to state 120
  48:   On character_constant to state 121
  49:   On STRINGLITERAL to state 122
  50:   On WSTRINGLITERAL to state 123
  51:   On and_expr to state 124
  52:   On FLOATCONSTANT to state 125
  53:   On DECCONSTANT to state 126
  54:   On OCTCONSTANT to state 127
  55:   On HEXCONSTANT to state 128
  56:   On CHARCONSTANT to state 129
  57:   On WCHARCONSTANT to state 130
  58:   On equality_expr to state 131
  59:   On relational_expr to state 132
  60:   On shift_expr to state 133
  61:   On additive_expr to state 134
  62:   On multiplicative_expr to state 135
  63:   On cast_expr to state 136


State 75:
202: stmt_list -> stmt  . 
  Reduce by 202: stmt_list -> stmt  . 


State 76:
187: stmt -> labeled_stmt  . 
  Reduce by 187: stmt -> labeled_stmt  . 


State 77:
188: stmt -> compound_stmt  . 
  Reduce by 188: stmt -> compound_stmt  . 


State 78:
189: stmt -> expr_stmt  . 
  Reduce by 189: stmt -> expr_stmt  . 


State 79:
190: stmt -> select_stmt  . 
  Reduce by 190: stmt -> select_stmt  . 


State 80:
191: stmt -> iter_stmt  . 
  Reduce by 191: stmt -> iter_stmt  . 


State 81:
192: stmt -> jump_stmt  . 
  Reduce by 192: stmt -> jump_stmt  . 


State 82:
193: labeled_stmt -> IDENTIFIER  . COLON stmt 
181: typedef_name -> IDENTIFIER  . 
14: primary_expr -> IDENTIFIER  . 
9: enumeration_constant -> IDENTIFIER  . 
  0:   On COLON to state 173
  Reduce by 181: typedef_name -> IDENTIFIER  . 
  Reduce by 14: primary_expr -> IDENTIFIER  . 
  Reduce by 9: enumeration_constant -> IDENTIFIER  . 
Solved RR CONFLICT for rules 14 and 181:
	removed { SCOLON } from the LA set of rule 181
Solved RR CONFLICT for rules 9 and 181:
	removed { SCOLON } from the LA set of rule 181
Solved RR CONFLICT for rules 9 and 14:
	removed { SCOLON OPERATOR_BITOR COMMA EQUALS OPERATOR_PLUSEQU OPERATOR_MINUSEQU OPERATOR_MULTEQU OPERATOR_DIVEQU OPERATOR_MODEQU OPERATOR_ANDEQU OPERATOR_XOREQU OPERATOR_OREQU OPERATOR_BSLEQU OPERATOR_BSREQU OPERATOR_TERNARY OPERATOR_BITAND OPERATOR_BITXOR OPERATOR_BOOLAND OPERATOR_BOOLOR OPERATOR_LT OPERATOR_LTEQU OPERATOR_GT OPERATOR_GTEQU OPERATOR_EQUALITY OPERATOR_NEQU OPERATOR_MULT OPERATOR_DIV OPERATOR_MOD OPERATOR_PLUS OPERATOR_MINUS OPERATOR_BSL OPERATOR_BSR LBRACKET LSQUBRACKET OPERATOR_DOT OPERATOR_PTR OPERATOR_INCR OPERATOR_DECR } from the LA set of (removed) rule 14


State 83:
194: labeled_stmt -> KW_CASE  . constant_expr COLON stmt 
  0:   On constant_expr to state 174
  1:   On conditional_expr to state 139
  2:   On logical_or_expr to state 99
  3:   On logical_and_expr to state 105
  4:   On or_expr to state 113
  5:   On xor_expr to state 117
  6:   On and_expr to state 124
  7:   On equality_expr to state 131
  8:   On relational_expr to state 132
  9:   On shift_expr to state 133
  10:   On additive_expr to state 134
  11:   On multiplicative_expr to state 135
  12:   On cast_expr to state 136
  13:   On unary_expr to state 140
  14:   On LBRACKET to state 116
  15:   On postfix_expr to state 100
  16:   On OPERATOR_INCR to state 101
  17:   On OPERATOR_DECR to state 102
  18:   On unary_operation to state 103
  19:   On KW_SIZEOF to state 104
  20:   On primary_expr to state 106
  21:   On OPERATOR_BITAND to state 107
  22:   On OPERATOR_MULT to state 108
  23:   On OPERATOR_PLUS to state 109
  24:   On OPERATOR_MINUS to state 110
  25:   On OPERATOR_BITNEG to state 111
  26:   On OPERATOR_BOOLNEG to state 112
  27:   On IDENTIFIER to state 141
  28:   On constant to state 114
  29:   On string_literal to state 115
  30:   On floating_constant to state 118
  31:   On integer_constant to state 119
  32:   On enumeration_constant to state 120
  33:   On character_constant to state 121
  34:   On STRINGLITERAL to state 122
  35:   On WSTRINGLITERAL to state 123
  36:   On FLOATCONSTANT to state 125
  37:   On DECCONSTANT to state 126
  38:   On OCTCONSTANT to state 127
  39:   On HEXCONSTANT to state 128
  40:   On CHARCONSTANT to state 129
  41:   On WCHARCONSTANT to state 130


State 84:
195: labeled_stmt -> KW_DEFAULT  . COLON stmt 
  0:   On COLON to state 175


State 85:
204: expr_stmt -> SCOLON  . 
  Reduce by 204: expr_stmt -> SCOLON  . 


State 86:
205: expr_stmt -> expr  . SCOLON 
86: expr -> expr  . COMMA assignment_expr 
  0:   On SCOLON to state 176
  1:   On COMMA to state 177


State 87:
206: select_stmt -> KW_IF  . LBRACKET expr RBRACKET stmt 
207: select_stmt -> KW_IF  . LBRACKET expr RBRACKET stmt KW_ELSE stmt 
  0:   On LBRACKET to state 178


State 88:
208: select_stmt -> KW_SWITCH  . LBRACKET expr RBRACKET stmt 
  0:   On LBRACKET to state 179


State 89:
209: iter_stmt -> KW_WHILE  . LBRACKET expr RBRACKET stmt 
  0:   On LBRACKET to state 180


State 90:
210: iter_stmt -> KW_DO  . stmt KW_WHILE LBRACKET expr RBRACKET SCOLON 
  0:   On stmt to state 181
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 91:
211: iter_stmt -> KW_FOR  . LBRACKET SCOLON SCOLON RBRACKET stmt 
212: iter_stmt -> KW_FOR  . LBRACKET expr SCOLON SCOLON RBRACKET stmt 
213: iter_stmt -> KW_FOR  . LBRACKET SCOLON expr SCOLON RBRACKET stmt 
214: iter_stmt -> KW_FOR  . LBRACKET SCOLON SCOLON expr RBRACKET stmt 
215: iter_stmt -> KW_FOR  . LBRACKET expr SCOLON expr SCOLON RBRACKET stmt 
216: iter_stmt -> KW_FOR  . LBRACKET expr SCOLON SCOLON expr RBRACKET stmt 
217: iter_stmt -> KW_FOR  . LBRACKET SCOLON expr SCOLON expr RBRACKET stmt 
218: iter_stmt -> KW_FOR  . LBRACKET expr SCOLON expr SCOLON expr RBRACKET stmt 
  0:   On LBRACKET to state 182


State 92:
219: jump_stmt -> KW_GOTO  . IDENTIFIER SCOLON 
  0:   On IDENTIFIER to state 183


State 93:
220: jump_stmt -> KW_CONTINUE  . SCOLON 
  0:   On SCOLON to state 184


State 94:
221: jump_stmt -> KW_BREAK  . SCOLON 
  0:   On SCOLON to state 185


State 95:
222: jump_stmt -> KW_RETURN  . SCOLON 
223: jump_stmt -> KW_RETURN  . expr SCOLON 
  0:   On SCOLON to state 186
  1:   On expr to state 187
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 96:
85: expr -> assignment_expr  . 
  Reduce by 85: expr -> assignment_expr  . 


State 97:
72: assignment_expr -> conditional_expr  . 
  Reduce by 72: assignment_expr -> conditional_expr  . 


State 98:
73: assignment_expr -> unary_expr  . assignment_operator assignment_expr 
40: cast_expr -> unary_expr  . 
  0:   On assignment_operator to state 188
  1:   On EQUALS to state 189
  2:   On OPERATOR_MULTEQU to state 190
  3:   On OPERATOR_DIVEQU to state 191
  4:   On OPERATOR_MODEQU to state 192
  5:   On OPERATOR_PLUSEQU to state 193
  6:   On OPERATOR_MINUSEQU to state 194
  7:   On OPERATOR_BSLEQU to state 195
  8:   On OPERATOR_BSREQU to state 196
  9:   On OPERATOR_ANDEQU to state 197
  10:   On OPERATOR_XOREQU to state 198
  11:   On OPERATOR_OREQU to state 199
  Reduce by 40: cast_expr -> unary_expr  . 


State 99:
70: conditional_expr -> logical_or_expr  . 
71: conditional_expr -> logical_or_expr  . OPERATOR_TERNARY expr COLON conditional_expr 
69: logical_or_expr -> logical_or_expr  . OPERATOR_BOOLOR logical_and_expr 
  0:   On OPERATOR_TERNARY to state 200
  1:   On OPERATOR_BOOLOR to state 201
  Reduce by 70: conditional_expr -> logical_or_expr  . 


State 100:
28: unary_expr -> postfix_expr  . 
19: postfix_expr -> postfix_expr  . LSQUBRACKET expr RSQUBRACKET 
20: postfix_expr -> postfix_expr  . LBRACKET RBRACKET 
21: postfix_expr -> postfix_expr  . LBRACKET arg_expr_list RBRACKET 
22: postfix_expr -> postfix_expr  . OPERATOR_DOT IDENTIFIER 
23: postfix_expr -> postfix_expr  . OPERATOR_PTR IDENTIFIER 
24: postfix_expr -> postfix_expr  . OPERATOR_INCR 
25: postfix_expr -> postfix_expr  . OPERATOR_DECR 
  0:   On LSQUBRACKET to state 202
  1:   On LBRACKET to state 203
  2:   On OPERATOR_DOT to state 204
  3:   On OPERATOR_PTR to state 205
  4:   On OPERATOR_INCR to state 206
  5:   On OPERATOR_DECR to state 207
  Reduce by 28: unary_expr -> postfix_expr  . 
Solved SR CONFLICT on LSQUBRACKET:
	shift to state 202, removed LSQUBRACKET from LA-set of rule 28)
Solved SR CONFLICT on LBRACKET:
	shift to state 203, removed LBRACKET from LA-set of rule 28)
Solved SR CONFLICT on LBRACKET:
	shift to state 203, removed LBRACKET from LA-set of rule 28)
Solved SR CONFLICT on OPERATOR_DOT:
	shift to state 204, removed OPERATOR_DOT from LA-set of rule 28)
Solved SR CONFLICT on OPERATOR_PTR:
	shift to state 205, removed OPERATOR_PTR from LA-set of rule 28)
Solved SR CONFLICT on OPERATOR_INCR:
	shift to state 206, removed OPERATOR_INCR from LA-set of rule 28)
Solved SR CONFLICT on OPERATOR_DECR:
	shift to state 207, removed OPERATOR_DECR from LA-set of rule 28)


State 101:
29: unary_expr -> OPERATOR_INCR  . unary_expr 
  0:   On unary_expr to state 208
  1:   On postfix_expr to state 100
  2:   On OPERATOR_INCR to state 101
  3:   On OPERATOR_DECR to state 102
  4:   On unary_operation to state 103
  5:   On KW_SIZEOF to state 104
  6:   On primary_expr to state 106
  7:   On OPERATOR_BITAND to state 107
  8:   On OPERATOR_MULT to state 108
  9:   On OPERATOR_PLUS to state 109
  10:   On OPERATOR_MINUS to state 110
  11:   On OPERATOR_BITNEG to state 111
  12:   On OPERATOR_BOOLNEG to state 112
  13:   On IDENTIFIER to state 141
  14:   On constant to state 114
  15:   On string_literal to state 115
  16:   On LBRACKET to state 209
  17:   On floating_constant to state 118
  18:   On integer_constant to state 119
  19:   On enumeration_constant to state 120
  20:   On character_constant to state 121
  21:   On STRINGLITERAL to state 122
  22:   On WSTRINGLITERAL to state 123
  23:   On FLOATCONSTANT to state 125
  24:   On DECCONSTANT to state 126
  25:   On OCTCONSTANT to state 127
  26:   On HEXCONSTANT to state 128
  27:   On CHARCONSTANT to state 129
  28:   On WCHARCONSTANT to state 130


State 102:
30: unary_expr -> OPERATOR_DECR  . unary_expr 
  0:   On unary_expr to state 210
  1:   On postfix_expr to state 100
  2:   On OPERATOR_INCR to state 101
  3:   On OPERATOR_DECR to state 102
  4:   On unary_operation to state 103
  5:   On KW_SIZEOF to state 104
  6:   On primary_expr to state 106
  7:   On OPERATOR_BITAND to state 107
  8:   On OPERATOR_MULT to state 108
  9:   On OPERATOR_PLUS to state 109
  10:   On OPERATOR_MINUS to state 110
  11:   On OPERATOR_BITNEG to state 111
  12:   On OPERATOR_BOOLNEG to state 112
  13:   On IDENTIFIER to state 141
  14:   On constant to state 114
  15:   On string_literal to state 115
  16:   On LBRACKET to state 209
  17:   On floating_constant to state 118
  18:   On integer_constant to state 119
  19:   On enumeration_constant to state 120
  20:   On character_constant to state 121
  21:   On STRINGLITERAL to state 122
  22:   On WSTRINGLITERAL to state 123
  23:   On FLOATCONSTANT to state 125
  24:   On DECCONSTANT to state 126
  25:   On OCTCONSTANT to state 127
  26:   On HEXCONSTANT to state 128
  27:   On CHARCONSTANT to state 129
  28:   On WCHARCONSTANT to state 130


State 103:
31: unary_expr -> unary_operation  . cast_expr 
  0:   On cast_expr to state 211
  1:   On unary_expr to state 140
  2:   On LBRACKET to state 116
  3:   On postfix_expr to state 100
  4:   On OPERATOR_INCR to state 101
  5:   On OPERATOR_DECR to state 102
  6:   On unary_operation to state 103
  7:   On KW_SIZEOF to state 104
  8:   On primary_expr to state 106
  9:   On OPERATOR_BITAND to state 107
  10:   On OPERATOR_MULT to state 108
  11:   On OPERATOR_PLUS to state 109
  12:   On OPERATOR_MINUS to state 110
  13:   On OPERATOR_BITNEG to state 111
  14:   On OPERATOR_BOOLNEG to state 112
  15:   On IDENTIFIER to state 141
  16:   On constant to state 114
  17:   On string_literal to state 115
  18:   On floating_constant to state 118
  19:   On integer_constant to state 119
  20:   On enumeration_constant to state 120
  21:   On character_constant to state 121
  22:   On STRINGLITERAL to state 122
  23:   On WSTRINGLITERAL to state 123
  24:   On FLOATCONSTANT to state 125
  25:   On DECCONSTANT to state 126
  26:   On OCTCONSTANT to state 127
  27:   On HEXCONSTANT to state 128
  28:   On CHARCONSTANT to state 129
  29:   On WCHARCONSTANT to state 130


State 104:
32: unary_expr -> KW_SIZEOF  . unary_expr 
33: unary_expr -> KW_SIZEOF  . LBRACKET type_name RBRACKET 
  0:   On unary_expr to state 212
  1:   On LBRACKET to state 213
  2:   On postfix_expr to state 100
  3:   On OPERATOR_INCR to state 101
  4:   On OPERATOR_DECR to state 102
  5:   On unary_operation to state 103
  6:   On KW_SIZEOF to state 104
  7:   On primary_expr to state 106
  8:   On OPERATOR_BITAND to state 107
  9:   On OPERATOR_MULT to state 108
  10:   On OPERATOR_PLUS to state 109
  11:   On OPERATOR_MINUS to state 110
  12:   On OPERATOR_BITNEG to state 111
  13:   On OPERATOR_BOOLNEG to state 112
  14:   On IDENTIFIER to state 141
  15:   On constant to state 114
  16:   On string_literal to state 115
  17:   On floating_constant to state 118
  18:   On integer_constant to state 119
  19:   On enumeration_constant to state 120
  20:   On character_constant to state 121
  21:   On STRINGLITERAL to state 122
  22:   On WSTRINGLITERAL to state 123
  23:   On FLOATCONSTANT to state 125
  24:   On DECCONSTANT to state 126
  25:   On OCTCONSTANT to state 127
  26:   On HEXCONSTANT to state 128
  27:   On CHARCONSTANT to state 129
  28:   On WCHARCONSTANT to state 130


State 105:
68: logical_or_expr -> logical_and_expr  . 
67: logical_and_expr -> logical_and_expr  . OPERATOR_BOOLAND or_expr 
  0:   On OPERATOR_BOOLAND to state 214
  Reduce by 68: logical_or_expr -> logical_and_expr  . 


State 106:
18: postfix_expr -> primary_expr  . 
  Reduce by 18: postfix_expr -> primary_expr  . 


State 107:
34: unary_operation -> OPERATOR_BITAND  . 
  Reduce by 34: unary_operation -> OPERATOR_BITAND  . 


State 108:
35: unary_operation -> OPERATOR_MULT  . 
  Reduce by 35: unary_operation -> OPERATOR_MULT  . 


State 109:
36: unary_operation -> OPERATOR_PLUS  . 
  Reduce by 36: unary_operation -> OPERATOR_PLUS  . 


State 110:
37: unary_operation -> OPERATOR_MINUS  . 
  Reduce by 37: unary_operation -> OPERATOR_MINUS  . 


State 111:
38: unary_operation -> OPERATOR_BITNEG  . 
  Reduce by 38: unary_operation -> OPERATOR_BITNEG  . 


State 112:
39: unary_operation -> OPERATOR_BOOLNEG  . 
  Reduce by 39: unary_operation -> OPERATOR_BOOLNEG  . 


State 113:
66: logical_and_expr -> or_expr  . 
65: or_expr -> or_expr  . OPERATOR_BITOR xor_expr 
  0:   On OPERATOR_BITOR to state 215
  Reduce by 66: logical_and_expr -> or_expr  . 


State 114:
15: primary_expr -> constant  . 
  Reduce by 15: primary_expr -> constant  . 


State 115:
16: primary_expr -> string_literal  . 
  Reduce by 16: primary_expr -> string_literal  . 


State 116:
17: primary_expr -> LBRACKET  . expr RBRACKET 
41: cast_expr -> LBRACKET  . type_name RBRACKET cast_expr 
  0:   On expr to state 216
  1:   On type_name to state 217
  2:   On assignment_expr to state 96
  3:   On spec_qualifier_list to state 218
  4:   On conditional_expr to state 97
  5:   On unary_expr to state 98
  6:   On type_specifier to state 155
  7:   On type_qualifier to state 156
  8:   On logical_or_expr to state 99
  9:   On postfix_expr to state 100
  10:   On OPERATOR_INCR to state 101
  11:   On OPERATOR_DECR to state 102
  12:   On unary_operation to state 103
  13:   On KW_SIZEOF to state 104
  14:   On KW_VOID to state 17
  15:   On KW_CHAR to state 18
  16:   On KW_SHORT to state 19
  17:   On KW_INT to state 20
  18:   On KW_LONG to state 21
  19:   On KW_FLOAT to state 22
  20:   On KW_DOUBLE to state 23
  21:   On KW_SIGNED to state 24
  22:   On KW_UNSIGNED to state 25
  23:   On struct_union_specifier to state 26
  24:   On enum_specifier to state 27
  25:   On typedef_name to state 28
  26:   On KW_CONST to state 29
  27:   On KW_VOLATILE to state 30
  28:   On logical_and_expr to state 105
  29:   On primary_expr to state 106
  30:   On OPERATOR_BITAND to state 107
  31:   On OPERATOR_MULT to state 108
  32:   On OPERATOR_PLUS to state 109
  33:   On OPERATOR_MINUS to state 110
  34:   On OPERATOR_BITNEG to state 111
  35:   On OPERATOR_BOOLNEG to state 112
  36:   On struct_union to state 34
  37:   On KW_ENUM to state 35
  38:   On IDENTIFIER to state 219
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On KW_STRUCT to state 36
  44:   On KW_UNION to state 37
  45:   On xor_expr to state 117
  46:   On floating_constant to state 118
  47:   On integer_constant to state 119
  48:   On enumeration_constant to state 120
  49:   On character_constant to state 121
  50:   On STRINGLITERAL to state 122
  51:   On WSTRINGLITERAL to state 123
  52:   On and_expr to state 124
  53:   On FLOATCONSTANT to state 125
  54:   On DECCONSTANT to state 126
  55:   On OCTCONSTANT to state 127
  56:   On HEXCONSTANT to state 128
  57:   On CHARCONSTANT to state 129
  58:   On WCHARCONSTANT to state 130
  59:   On equality_expr to state 131
  60:   On relational_expr to state 132
  61:   On shift_expr to state 133
  62:   On additive_expr to state 134
  63:   On multiplicative_expr to state 135
  64:   On cast_expr to state 136


State 117:
64: or_expr -> xor_expr  . 
63: xor_expr -> xor_expr  . OPERATOR_BITXOR and_expr 
  0:   On OPERATOR_BITXOR to state 220
  Reduce by 64: or_expr -> xor_expr  . 


State 118:
1: constant -> floating_constant  . 
  Reduce by 1: constant -> floating_constant  . 


State 119:
2: constant -> integer_constant  . 
  Reduce by 2: constant -> integer_constant  . 


State 120:
3: constant -> enumeration_constant  . 
  Reduce by 3: constant -> enumeration_constant  . 


State 121:
4: constant -> character_constant  . 
  Reduce by 4: constant -> character_constant  . 


State 122:
12: string_literal -> STRINGLITERAL  . 
  Reduce by 12: string_literal -> STRINGLITERAL  . 


State 123:
13: string_literal -> WSTRINGLITERAL  . 
  Reduce by 13: string_literal -> WSTRINGLITERAL  . 


State 124:
62: xor_expr -> and_expr  . 
61: and_expr -> and_expr  . OPERATOR_BITAND equality_expr 
  0:   On OPERATOR_BITAND to state 221
  Reduce by 62: xor_expr -> and_expr  . 


State 125:
5: floating_constant -> FLOATCONSTANT  . 
  Reduce by 5: floating_constant -> FLOATCONSTANT  . 


State 126:
6: integer_constant -> DECCONSTANT  . 
  Reduce by 6: integer_constant -> DECCONSTANT  . 


State 127:
7: integer_constant -> OCTCONSTANT  . 
  Reduce by 7: integer_constant -> OCTCONSTANT  . 


State 128:
8: integer_constant -> HEXCONSTANT  . 
  Reduce by 8: integer_constant -> HEXCONSTANT  . 


State 129:
10: character_constant -> CHARCONSTANT  . 
  Reduce by 10: character_constant -> CHARCONSTANT  . 


State 130:
11: character_constant -> WCHARCONSTANT  . 
  Reduce by 11: character_constant -> WCHARCONSTANT  . 


State 131:
60: and_expr -> equality_expr  . 
58: equality_expr -> equality_expr  . OPERATOR_EQUALITY relational_expr 
59: equality_expr -> equality_expr  . OPERATOR_NEQU relational_expr 
  0:   On OPERATOR_EQUALITY to state 222
  1:   On OPERATOR_NEQU to state 223
  Reduce by 60: and_expr -> equality_expr  . 


State 132:
57: equality_expr -> relational_expr  . 
53: relational_expr -> relational_expr  . OPERATOR_LT shift_expr 
54: relational_expr -> relational_expr  . OPERATOR_GT shift_expr 
55: relational_expr -> relational_expr  . OPERATOR_LTEQU shift_expr 
56: relational_expr -> relational_expr  . OPERATOR_GTEQU shift_expr 
  0:   On OPERATOR_LT to state 224
  1:   On OPERATOR_GT to state 225
  2:   On OPERATOR_LTEQU to state 226
  3:   On OPERATOR_GTEQU to state 227
  Reduce by 57: equality_expr -> relational_expr  . 


State 133:
52: relational_expr -> shift_expr  . 
50: shift_expr -> shift_expr  . OPERATOR_BSL additive_expr 
51: shift_expr -> shift_expr  . OPERATOR_BSR additive_expr 
  0:   On OPERATOR_BSL to state 228
  1:   On OPERATOR_BSR to state 229
  Reduce by 52: relational_expr -> shift_expr  . 


State 134:
49: shift_expr -> additive_expr  . 
47: additive_expr -> additive_expr  . OPERATOR_PLUS multiplicative_expr 
48: additive_expr -> additive_expr  . OPERATOR_MINUS multiplicative_expr 
  0:   On OPERATOR_PLUS to state 230
  1:   On OPERATOR_MINUS to state 231
  Reduce by 49: shift_expr -> additive_expr  . 


State 135:
46: additive_expr -> multiplicative_expr  . 
43: multiplicative_expr -> multiplicative_expr  . OPERATOR_MULT cast_expr 
44: multiplicative_expr -> multiplicative_expr  . OPERATOR_DIV cast_expr 
45: multiplicative_expr -> multiplicative_expr  . OPERATOR_MOD cast_expr 
  0:   On OPERATOR_MULT to state 232
  1:   On OPERATOR_DIV to state 233
  2:   On OPERATOR_MOD to state 234
  Reduce by 46: additive_expr -> multiplicative_expr  . 


State 136:
42: multiplicative_expr -> cast_expr  . 
  Reduce by 42: multiplicative_expr -> cast_expr  . 


State 137:
147: direct_declarator -> direct_declarator LSQUBRACKET RSQUBRACKET  . 
  Reduce by 147: direct_declarator -> direct_declarator LSQUBRACKET RSQUBRACKET  . 


State 138:
148: direct_declarator -> direct_declarator LSQUBRACKET constant_expr  . RSQUBRACKET 
  0:   On RSQUBRACKET to state 235


State 139:
87: constant_expr -> conditional_expr  . 
  Reduce by 87: constant_expr -> conditional_expr  . 


State 140:
40: cast_expr -> unary_expr  . 
  Reduce by 40: cast_expr -> unary_expr  . 


State 141:
14: primary_expr -> IDENTIFIER  . 
9: enumeration_constant -> IDENTIFIER  . 
  Reduce by 14: primary_expr -> IDENTIFIER  . 
  Reduce by 9: enumeration_constant -> IDENTIFIER  . 
Solved RR CONFLICT for rules 9 and 14:
	removed { SCOLON OPERATOR_BITOR RBRACE COMMA EQUALS OPERATOR_PLUSEQU OPERATOR_MINUSEQU OPERATOR_MULTEQU OPERATOR_DIVEQU OPERATOR_MODEQU OPERATOR_ANDEQU OPERATOR_XOREQU OPERATOR_OREQU OPERATOR_BSLEQU OPERATOR_BSREQU OPERATOR_TERNARY COLON OPERATOR_BITAND OPERATOR_BITXOR OPERATOR_BOOLAND OPERATOR_BOOLOR OPERATOR_LT OPERATOR_LTEQU OPERATOR_GT OPERATOR_GTEQU OPERATOR_EQUALITY OPERATOR_NEQU OPERATOR_MULT OPERATOR_DIV OPERATOR_MOD OPERATOR_PLUS OPERATOR_MINUS OPERATOR_BSL OPERATOR_BSR LBRACKET RBRACKET LSQUBRACKET RSQUBRACKET OPERATOR_DOT OPERATOR_PTR OPERATOR_INCR OPERATOR_DECR } from the LA set of (removed) rule 14


State 142:
149: direct_declarator -> direct_declarator LBRACKET param_type_list  . RBRACKET 
  0:   On RBRACKET to state 236


State 143:
150: direct_declarator -> direct_declarator LBRACKET RBRACKET  . 
  Reduce by 150: direct_declarator -> direct_declarator LBRACKET RBRACKET  . 


State 144:
151: direct_declarator -> direct_declarator LBRACKET identifier_list  . RBRACKET 
166: identifier_list -> identifier_list  . COMMA IDENTIFIER 
  0:   On RBRACKET to state 237
  1:   On COMMA to state 238


State 145:
158: param_type_list -> param_list  . 
159: param_type_list -> param_list  . COMMA PUNCTUATOR_TRIPLEDOT 
161: param_list -> param_list  . COMMA param_declaration 
  0:   On COMMA to state 239
  Reduce by 158: param_type_list -> param_list  . 


State 146:
165: identifier_list -> IDENTIFIER  . 
181: typedef_name -> IDENTIFIER  . 
  Reduce by 165: identifier_list -> IDENTIFIER  . 
  Reduce by 181: typedef_name -> IDENTIFIER  . 
Solved RR CONFLICT for rules 165 and 181:
	removed { COMMA RBRACKET } from the LA set of rule 181


State 147:
160: param_list -> param_declaration  . 
  Reduce by 160: param_list -> param_declaration  . 


State 148:
162: param_declaration -> declaration_specifiers  . declarator 
163: param_declaration -> declaration_specifiers  . 
164: param_declaration -> declaration_specifiers  . abstract_declarator 
  0:   On declarator to state 240
  1:   On abstract_declarator to state 241
  2:   On direct_declarator to state 10
  3:   On pointer to state 242
  4:   On direct_abstract_declarator to state 243
  5:   On IDENTIFIER to state 56
  6:   On LBRACKET to state 244
  7:   On OPERATOR_MULT to state 33
  8:   On LSQUBRACKET to state 245
  Reduce by 163: param_declaration -> declaration_specifiers  . 


State 149:
146: direct_declarator -> LBRACKET declarator RBRACKET  . 
  Reduce by 146: direct_declarator -> LBRACKET declarator RBRACKET  . 


State 150:
155: pointer -> OPERATOR_MULT type_qualifier_list pointer  . 
  Reduce by 155: pointer -> OPERATOR_MULT type_qualifier_list pointer  . 


State 151:
157: type_qualifier_list -> type_qualifier_list type_qualifier  . 
  Reduce by 157: type_qualifier_list -> type_qualifier_list type_qualifier  . 


State 152:
117: struct_union_specifier -> struct_union LBRACE struct_declaration_list  . RBRACE 
123: struct_declaration_list -> struct_declaration_list  . struct_declaration 
  0:   On RBRACE to state 246
  1:   On struct_declaration to state 247
  2:   On spec_qualifier_list to state 154
  3:   On type_specifier to state 155
  4:   On type_qualifier to state 156
  5:   On KW_VOID to state 17
  6:   On KW_CHAR to state 18
  7:   On KW_SHORT to state 19
  8:   On KW_INT to state 20
  9:   On KW_LONG to state 21
  10:   On KW_FLOAT to state 22
  11:   On KW_DOUBLE to state 23
  12:   On KW_SIGNED to state 24
  13:   On KW_UNSIGNED to state 25
  14:   On struct_union_specifier to state 26
  15:   On enum_specifier to state 27
  16:   On typedef_name to state 28
  17:   On KW_CONST to state 29
  18:   On KW_VOLATILE to state 30
  19:   On struct_union to state 34
  20:   On KW_ENUM to state 35
  21:   On IDENTIFIER to state 49
  22:   On KW_STRUCT to state 36
  23:   On KW_UNION to state 37


State 153:
122: struct_declaration_list -> struct_declaration  . 
  Reduce by 122: struct_declaration_list -> struct_declaration  . 


State 154:
124: struct_declaration -> spec_qualifier_list  . struct_declarator_list SCOLON 
  0:   On struct_declarator_list to state 248
  1:   On struct_declarator to state 249
  2:   On declarator to state 250
  3:   On COLON to state 251
  4:   On direct_declarator to state 10
  5:   On pointer to state 11
  6:   On IDENTIFIER to state 56
  7:   On LBRACKET to state 32
  8:   On OPERATOR_MULT to state 33


State 155:
125: spec_qualifier_list -> type_specifier  . 
126: spec_qualifier_list -> type_specifier  . spec_qualifier_list 
  0:   On spec_qualifier_list to state 252
  1:   On type_specifier to state 155
  2:   On type_qualifier to state 156
  3:   On KW_VOID to state 17
  4:   On KW_CHAR to state 18
  5:   On KW_SHORT to state 19
  6:   On KW_INT to state 20
  7:   On KW_LONG to state 21
  8:   On KW_FLOAT to state 22
  9:   On KW_DOUBLE to state 23
  10:   On KW_SIGNED to state 24
  11:   On KW_UNSIGNED to state 25
  12:   On struct_union_specifier to state 26
  13:   On enum_specifier to state 27
  14:   On typedef_name to state 28
  15:   On KW_CONST to state 29
  16:   On KW_VOLATILE to state 30
  17:   On struct_union to state 34
  18:   On KW_ENUM to state 35
  19:   On IDENTIFIER to state 49
  20:   On KW_STRUCT to state 36
  21:   On KW_UNION to state 37
  Reduce by 125: spec_qualifier_list -> type_specifier  . 
Solved SR CONFLICT on IDENTIFIER:
	shift to state 49, removed IDENTIFIER from LA-set of rule 125)


State 156:
127: spec_qualifier_list -> type_qualifier  . 
128: spec_qualifier_list -> type_qualifier  . spec_qualifier_list 
  0:   On spec_qualifier_list to state 253
  1:   On type_specifier to state 155
  2:   On type_qualifier to state 156
  3:   On KW_VOID to state 17
  4:   On KW_CHAR to state 18
  5:   On KW_SHORT to state 19
  6:   On KW_INT to state 20
  7:   On KW_LONG to state 21
  8:   On KW_FLOAT to state 22
  9:   On KW_DOUBLE to state 23
  10:   On KW_SIGNED to state 24
  11:   On KW_UNSIGNED to state 25
  12:   On struct_union_specifier to state 26
  13:   On enum_specifier to state 27
  14:   On typedef_name to state 28
  15:   On KW_CONST to state 29
  16:   On KW_VOLATILE to state 30
  17:   On struct_union to state 34
  18:   On KW_ENUM to state 35
  19:   On IDENTIFIER to state 49
  20:   On KW_STRUCT to state 36
  21:   On KW_UNION to state 37
  Reduce by 127: spec_qualifier_list -> type_qualifier  . 
Solved SR CONFLICT on IDENTIFIER:
	shift to state 49, removed IDENTIFIER from LA-set of rule 127)


State 157:
118: struct_union_specifier -> struct_union IDENTIFIER LBRACE  . struct_declaration_list RBRACE 
  0:   On struct_declaration_list to state 254
  1:   On struct_declaration to state 153
  2:   On spec_qualifier_list to state 154
  3:   On type_specifier to state 155
  4:   On type_qualifier to state 156
  5:   On KW_VOID to state 17
  6:   On KW_CHAR to state 18
  7:   On KW_SHORT to state 19
  8:   On KW_INT to state 20
  9:   On KW_LONG to state 21
  10:   On KW_FLOAT to state 22
  11:   On KW_DOUBLE to state 23
  12:   On KW_SIGNED to state 24
  13:   On KW_UNSIGNED to state 25
  14:   On struct_union_specifier to state 26
  15:   On enum_specifier to state 27
  16:   On typedef_name to state 28
  17:   On KW_CONST to state 29
  18:   On KW_VOLATILE to state 30
  19:   On struct_union to state 34
  20:   On KW_ENUM to state 35
  21:   On IDENTIFIER to state 49
  22:   On KW_STRUCT to state 36
  23:   On KW_UNION to state 37


State 158:
134: enum_specifier -> KW_ENUM LBRACE enumerator_list  . RBRACE 
138: enumerator_list -> enumerator_list  . COMMA enumerator 
  0:   On RBRACE to state 255
  1:   On COMMA to state 256


State 159:
137: enumerator_list -> enumerator  . 
  Reduce by 137: enumerator_list -> enumerator  . 


State 160:
139: enumerator -> enumeration_constant  . 
140: enumerator -> enumeration_constant  . EQUALS constant_expr 
  0:   On EQUALS to state 257
  Reduce by 139: enumerator -> enumeration_constant  . 


State 161:
9: enumeration_constant -> IDENTIFIER  . 
  Reduce by 9: enumeration_constant -> IDENTIFIER  . 


State 162:
135: enum_specifier -> KW_ENUM IDENTIFIER LBRACE  . enumerator_list RBRACE 
  0:   On enumerator_list to state 258
  1:   On enumerator to state 159
  2:   On enumeration_constant to state 160
  3:   On IDENTIFIER to state 161


State 163:
229: function_definition -> declaration_specifiers declarator declaration_list compound_stmt  . 
  Reduce by 229: function_definition -> declaration_specifiers declarator declaration_list compound_stmt  . 


State 164:
97: initialiser_declarator_list -> initialiser_declarator_list COMMA initialiser_declarator  . 
  Reduce by 97: initialiser_declarator_list -> initialiser_declarator_list COMMA initialiser_declarator  . 


State 165:
99: initialiser_declarator -> declaration EQUALS initialiser  . 
  Reduce by 99: initialiser_declarator -> declaration EQUALS initialiser  . 


State 166:
182: initialiser -> assignment_expr  . 
  Reduce by 182: initialiser -> assignment_expr  . 


State 167:
183: initialiser -> LBRACE  . initialiser_list RBRACE 
184: initialiser -> LBRACE  . initialiser_list COMMA RBRACE 
  0:   On initialiser_list to state 259
  1:   On initialiser to state 260
  2:   On assignment_expr to state 166
  3:   On LBRACE to state 167
  4:   On conditional_expr to state 97
  5:   On unary_expr to state 98
  6:   On logical_or_expr to state 99
  7:   On postfix_expr to state 100
  8:   On OPERATOR_INCR to state 101
  9:   On OPERATOR_DECR to state 102
  10:   On unary_operation to state 103
  11:   On KW_SIZEOF to state 104
  12:   On logical_and_expr to state 105
  13:   On primary_expr to state 106
  14:   On OPERATOR_BITAND to state 107
  15:   On OPERATOR_MULT to state 108
  16:   On OPERATOR_PLUS to state 109
  17:   On OPERATOR_MINUS to state 110
  18:   On OPERATOR_BITNEG to state 111
  19:   On OPERATOR_BOOLNEG to state 112
  20:   On or_expr to state 113
  21:   On IDENTIFIER to state 141
  22:   On constant to state 114
  23:   On string_literal to state 115
  24:   On LBRACKET to state 116
  25:   On xor_expr to state 117
  26:   On floating_constant to state 118
  27:   On integer_constant to state 119
  28:   On enumeration_constant to state 120
  29:   On character_constant to state 121
  30:   On STRINGLITERAL to state 122
  31:   On WSTRINGLITERAL to state 123
  32:   On and_expr to state 124
  33:   On FLOATCONSTANT to state 125
  34:   On DECCONSTANT to state 126
  35:   On OCTCONSTANT to state 127
  36:   On HEXCONSTANT to state 128
  37:   On CHARCONSTANT to state 129
  38:   On WCHARCONSTANT to state 130
  39:   On equality_expr to state 131
  40:   On relational_expr to state 132
  41:   On shift_expr to state 133
  42:   On additive_expr to state 134
  43:   On multiplicative_expr to state 135
  44:   On cast_expr to state 136


State 168:
197: compound_stmt -> LBRACE declaration_list RBRACE  . 
  Reduce by 197: compound_stmt -> LBRACE declaration_list RBRACE  . 


State 169:
199: compound_stmt -> LBRACE declaration_list stmt_list  . RBRACE 
203: stmt_list -> stmt_list  . stmt 
  0:   On RBRACE to state 261
  1:   On stmt to state 171
  2:   On labeled_stmt to state 76
  3:   On compound_stmt to state 77
  4:   On expr_stmt to state 78
  5:   On select_stmt to state 79
  6:   On iter_stmt to state 80
  7:   On jump_stmt to state 81
  8:   On IDENTIFIER to state 172
  9:   On KW_CASE to state 83
  10:   On KW_DEFAULT to state 84
  11:   On LBRACE to state 47
  12:   On SCOLON to state 85
  13:   On expr to state 86
  14:   On KW_IF to state 87
  15:   On KW_SWITCH to state 88
  16:   On KW_WHILE to state 89
  17:   On KW_DO to state 90
  18:   On KW_FOR to state 91
  19:   On KW_GOTO to state 92
  20:   On KW_CONTINUE to state 93
  21:   On KW_BREAK to state 94
  22:   On KW_RETURN to state 95
  23:   On assignment_expr to state 96
  24:   On conditional_expr to state 97
  25:   On unary_expr to state 98
  26:   On logical_or_expr to state 99
  27:   On postfix_expr to state 100
  28:   On OPERATOR_INCR to state 101
  29:   On OPERATOR_DECR to state 102
  30:   On unary_operation to state 103
  31:   On KW_SIZEOF to state 104
  32:   On logical_and_expr to state 105
  33:   On primary_expr to state 106
  34:   On OPERATOR_BITAND to state 107
  35:   On OPERATOR_MULT to state 108
  36:   On OPERATOR_PLUS to state 109
  37:   On OPERATOR_MINUS to state 110
  38:   On OPERATOR_BITNEG to state 111
  39:   On OPERATOR_BOOLNEG to state 112
  40:   On or_expr to state 113
  41:   On constant to state 114
  42:   On string_literal to state 115
  43:   On LBRACKET to state 116
  44:   On xor_expr to state 117
  45:   On floating_constant to state 118
  46:   On integer_constant to state 119
  47:   On enumeration_constant to state 120
  48:   On character_constant to state 121
  49:   On STRINGLITERAL to state 122
  50:   On WSTRINGLITERAL to state 123
  51:   On and_expr to state 124
  52:   On FLOATCONSTANT to state 125
  53:   On DECCONSTANT to state 126
  54:   On OCTCONSTANT to state 127
  55:   On HEXCONSTANT to state 128
  56:   On CHARCONSTANT to state 129
  57:   On WCHARCONSTANT to state 130
  58:   On equality_expr to state 131
  59:   On relational_expr to state 132
  60:   On shift_expr to state 133
  61:   On additive_expr to state 134
  62:   On multiplicative_expr to state 135
  63:   On cast_expr to state 136


State 170:
198: compound_stmt -> LBRACE stmt_list RBRACE  . 
  Reduce by 198: compound_stmt -> LBRACE stmt_list RBRACE  . 


State 171:
203: stmt_list -> stmt_list stmt  . 
  Reduce by 203: stmt_list -> stmt_list stmt  . 


State 172:
193: labeled_stmt -> IDENTIFIER  . COLON stmt 
14: primary_expr -> IDENTIFIER  . 
9: enumeration_constant -> IDENTIFIER  . 
  0:   On COLON to state 173
  Reduce by 14: primary_expr -> IDENTIFIER  . 
  Reduce by 9: enumeration_constant -> IDENTIFIER  . 
Solved RR CONFLICT for rules 9 and 14:
	removed { SCOLON OPERATOR_BITOR COMMA EQUALS OPERATOR_PLUSEQU OPERATOR_MINUSEQU OPERATOR_MULTEQU OPERATOR_DIVEQU OPERATOR_MODEQU OPERATOR_ANDEQU OPERATOR_XOREQU OPERATOR_OREQU OPERATOR_BSLEQU OPERATOR_BSREQU OPERATOR_TERNARY OPERATOR_BITAND OPERATOR_BITXOR OPERATOR_BOOLAND OPERATOR_BOOLOR OPERATOR_LT OPERATOR_LTEQU OPERATOR_GT OPERATOR_GTEQU OPERATOR_EQUALITY OPERATOR_NEQU OPERATOR_MULT OPERATOR_DIV OPERATOR_MOD OPERATOR_PLUS OPERATOR_MINUS OPERATOR_BSL OPERATOR_BSR LBRACKET LSQUBRACKET OPERATOR_DOT OPERATOR_PTR OPERATOR_INCR OPERATOR_DECR } from the LA set of (removed) rule 14


State 173:
193: labeled_stmt -> IDENTIFIER COLON  . stmt 
  0:   On stmt to state 262
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 174:
194: labeled_stmt -> KW_CASE constant_expr  . COLON stmt 
  0:   On COLON to state 263


State 175:
195: labeled_stmt -> KW_DEFAULT COLON  . stmt 
  0:   On stmt to state 264
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 176:
205: expr_stmt -> expr SCOLON  . 
  Reduce by 205: expr_stmt -> expr SCOLON  . 


State 177:
86: expr -> expr COMMA  . assignment_expr 
  0:   On assignment_expr to state 265
  1:   On conditional_expr to state 97
  2:   On unary_expr to state 98
  3:   On logical_or_expr to state 99
  4:   On postfix_expr to state 100
  5:   On OPERATOR_INCR to state 101
  6:   On OPERATOR_DECR to state 102
  7:   On unary_operation to state 103
  8:   On KW_SIZEOF to state 104
  9:   On logical_and_expr to state 105
  10:   On primary_expr to state 106
  11:   On OPERATOR_BITAND to state 107
  12:   On OPERATOR_MULT to state 108
  13:   On OPERATOR_PLUS to state 109
  14:   On OPERATOR_MINUS to state 110
  15:   On OPERATOR_BITNEG to state 111
  16:   On OPERATOR_BOOLNEG to state 112
  17:   On or_expr to state 113
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On LBRACKET to state 116
  22:   On xor_expr to state 117
  23:   On floating_constant to state 118
  24:   On integer_constant to state 119
  25:   On enumeration_constant to state 120
  26:   On character_constant to state 121
  27:   On STRINGLITERAL to state 122
  28:   On WSTRINGLITERAL to state 123
  29:   On and_expr to state 124
  30:   On FLOATCONSTANT to state 125
  31:   On DECCONSTANT to state 126
  32:   On OCTCONSTANT to state 127
  33:   On HEXCONSTANT to state 128
  34:   On CHARCONSTANT to state 129
  35:   On WCHARCONSTANT to state 130
  36:   On equality_expr to state 131
  37:   On relational_expr to state 132
  38:   On shift_expr to state 133
  39:   On additive_expr to state 134
  40:   On multiplicative_expr to state 135
  41:   On cast_expr to state 136


State 178:
206: select_stmt -> KW_IF LBRACKET  . expr RBRACKET stmt 
207: select_stmt -> KW_IF LBRACKET  . expr RBRACKET stmt KW_ELSE stmt 
  0:   On expr to state 266
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 179:
208: select_stmt -> KW_SWITCH LBRACKET  . expr RBRACKET stmt 
  0:   On expr to state 267
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 180:
209: iter_stmt -> KW_WHILE LBRACKET  . expr RBRACKET stmt 
  0:   On expr to state 268
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 181:
210: iter_stmt -> KW_DO stmt  . KW_WHILE LBRACKET expr RBRACKET SCOLON 
  0:   On KW_WHILE to state 269


State 182:
211: iter_stmt -> KW_FOR LBRACKET  . SCOLON SCOLON RBRACKET stmt 
212: iter_stmt -> KW_FOR LBRACKET  . expr SCOLON SCOLON RBRACKET stmt 
213: iter_stmt -> KW_FOR LBRACKET  . SCOLON expr SCOLON RBRACKET stmt 
214: iter_stmt -> KW_FOR LBRACKET  . SCOLON SCOLON expr RBRACKET stmt 
215: iter_stmt -> KW_FOR LBRACKET  . expr SCOLON expr SCOLON RBRACKET stmt 
216: iter_stmt -> KW_FOR LBRACKET  . expr SCOLON SCOLON expr RBRACKET stmt 
217: iter_stmt -> KW_FOR LBRACKET  . SCOLON expr SCOLON expr RBRACKET stmt 
218: iter_stmt -> KW_FOR LBRACKET  . expr SCOLON expr SCOLON expr RBRACKET stmt 
  0:   On SCOLON to state 270
  1:   On expr to state 271
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 183:
219: jump_stmt -> KW_GOTO IDENTIFIER  . SCOLON 
  0:   On SCOLON to state 272


State 184:
220: jump_stmt -> KW_CONTINUE SCOLON  . 
  Reduce by 220: jump_stmt -> KW_CONTINUE SCOLON  . 


State 185:
221: jump_stmt -> KW_BREAK SCOLON  . 
  Reduce by 221: jump_stmt -> KW_BREAK SCOLON  . 


State 186:
222: jump_stmt -> KW_RETURN SCOLON  . 
  Reduce by 222: jump_stmt -> KW_RETURN SCOLON  . 


State 187:
223: jump_stmt -> KW_RETURN expr  . SCOLON 
86: expr -> expr  . COMMA assignment_expr 
  0:   On SCOLON to state 273
  1:   On COMMA to state 177


State 188:
73: assignment_expr -> unary_expr assignment_operator  . assignment_expr 
  0:   On assignment_expr to state 274
  1:   On conditional_expr to state 97
  2:   On unary_expr to state 98
  3:   On logical_or_expr to state 99
  4:   On postfix_expr to state 100
  5:   On OPERATOR_INCR to state 101
  6:   On OPERATOR_DECR to state 102
  7:   On unary_operation to state 103
  8:   On KW_SIZEOF to state 104
  9:   On logical_and_expr to state 105
  10:   On primary_expr to state 106
  11:   On OPERATOR_BITAND to state 107
  12:   On OPERATOR_MULT to state 108
  13:   On OPERATOR_PLUS to state 109
  14:   On OPERATOR_MINUS to state 110
  15:   On OPERATOR_BITNEG to state 111
  16:   On OPERATOR_BOOLNEG to state 112
  17:   On or_expr to state 113
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On LBRACKET to state 116
  22:   On xor_expr to state 117
  23:   On floating_constant to state 118
  24:   On integer_constant to state 119
  25:   On enumeration_constant to state 120
  26:   On character_constant to state 121
  27:   On STRINGLITERAL to state 122
  28:   On WSTRINGLITERAL to state 123
  29:   On and_expr to state 124
  30:   On FLOATCONSTANT to state 125
  31:   On DECCONSTANT to state 126
  32:   On OCTCONSTANT to state 127
  33:   On HEXCONSTANT to state 128
  34:   On CHARCONSTANT to state 129
  35:   On WCHARCONSTANT to state 130
  36:   On equality_expr to state 131
  37:   On relational_expr to state 132
  38:   On shift_expr to state 133
  39:   On additive_expr to state 134
  40:   On multiplicative_expr to state 135
  41:   On cast_expr to state 136


State 189:
74: assignment_operator -> EQUALS  . 
  Reduce by 74: assignment_operator -> EQUALS  . 


State 190:
75: assignment_operator -> OPERATOR_MULTEQU  . 
  Reduce by 75: assignment_operator -> OPERATOR_MULTEQU  . 


State 191:
76: assignment_operator -> OPERATOR_DIVEQU  . 
  Reduce by 76: assignment_operator -> OPERATOR_DIVEQU  . 


State 192:
77: assignment_operator -> OPERATOR_MODEQU  . 
  Reduce by 77: assignment_operator -> OPERATOR_MODEQU  . 


State 193:
78: assignment_operator -> OPERATOR_PLUSEQU  . 
  Reduce by 78: assignment_operator -> OPERATOR_PLUSEQU  . 


State 194:
79: assignment_operator -> OPERATOR_MINUSEQU  . 
  Reduce by 79: assignment_operator -> OPERATOR_MINUSEQU  . 


State 195:
80: assignment_operator -> OPERATOR_BSLEQU  . 
  Reduce by 80: assignment_operator -> OPERATOR_BSLEQU  . 


State 196:
81: assignment_operator -> OPERATOR_BSREQU  . 
  Reduce by 81: assignment_operator -> OPERATOR_BSREQU  . 


State 197:
82: assignment_operator -> OPERATOR_ANDEQU  . 
  Reduce by 82: assignment_operator -> OPERATOR_ANDEQU  . 


State 198:
83: assignment_operator -> OPERATOR_XOREQU  . 
  Reduce by 83: assignment_operator -> OPERATOR_XOREQU  . 


State 199:
84: assignment_operator -> OPERATOR_OREQU  . 
  Reduce by 84: assignment_operator -> OPERATOR_OREQU  . 


State 200:
71: conditional_expr -> logical_or_expr OPERATOR_TERNARY  . expr COLON conditional_expr 
  0:   On expr to state 275
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 201:
69: logical_or_expr -> logical_or_expr OPERATOR_BOOLOR  . logical_and_expr 
  0:   On logical_and_expr to state 276
  1:   On or_expr to state 113
  2:   On xor_expr to state 117
  3:   On and_expr to state 124
  4:   On equality_expr to state 131
  5:   On relational_expr to state 132
  6:   On shift_expr to state 133
  7:   On additive_expr to state 134
  8:   On multiplicative_expr to state 135
  9:   On cast_expr to state 136
  10:   On unary_expr to state 140
  11:   On LBRACKET to state 116
  12:   On postfix_expr to state 100
  13:   On OPERATOR_INCR to state 101
  14:   On OPERATOR_DECR to state 102
  15:   On unary_operation to state 103
  16:   On KW_SIZEOF to state 104
  17:   On primary_expr to state 106
  18:   On OPERATOR_BITAND to state 107
  19:   On OPERATOR_MULT to state 108
  20:   On OPERATOR_PLUS to state 109
  21:   On OPERATOR_MINUS to state 110
  22:   On OPERATOR_BITNEG to state 111
  23:   On OPERATOR_BOOLNEG to state 112
  24:   On IDENTIFIER to state 141
  25:   On constant to state 114
  26:   On string_literal to state 115
  27:   On floating_constant to state 118
  28:   On integer_constant to state 119
  29:   On enumeration_constant to state 120
  30:   On character_constant to state 121
  31:   On STRINGLITERAL to state 122
  32:   On WSTRINGLITERAL to state 123
  33:   On FLOATCONSTANT to state 125
  34:   On DECCONSTANT to state 126
  35:   On OCTCONSTANT to state 127
  36:   On HEXCONSTANT to state 128
  37:   On CHARCONSTANT to state 129
  38:   On WCHARCONSTANT to state 130


State 202:
19: postfix_expr -> postfix_expr LSQUBRACKET  . expr RSQUBRACKET 
  0:   On expr to state 277
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 203:
20: postfix_expr -> postfix_expr LBRACKET  . RBRACKET 
21: postfix_expr -> postfix_expr LBRACKET  . arg_expr_list RBRACKET 
  0:   On RBRACKET to state 278
  1:   On arg_expr_list to state 279
  2:   On assignment_expr to state 280
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 204:
22: postfix_expr -> postfix_expr OPERATOR_DOT  . IDENTIFIER 
  0:   On IDENTIFIER to state 281


State 205:
23: postfix_expr -> postfix_expr OPERATOR_PTR  . IDENTIFIER 
  0:   On IDENTIFIER to state 282


State 206:
24: postfix_expr -> postfix_expr OPERATOR_INCR  . 
  Reduce by 24: postfix_expr -> postfix_expr OPERATOR_INCR  . 


State 207:
25: postfix_expr -> postfix_expr OPERATOR_DECR  . 
  Reduce by 25: postfix_expr -> postfix_expr OPERATOR_DECR  . 


State 208:
29: unary_expr -> OPERATOR_INCR unary_expr  . 
  Reduce by 29: unary_expr -> OPERATOR_INCR unary_expr  . 


State 209:
17: primary_expr -> LBRACKET  . expr RBRACKET 
  0:   On expr to state 216
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 210:
30: unary_expr -> OPERATOR_DECR unary_expr  . 
  Reduce by 30: unary_expr -> OPERATOR_DECR unary_expr  . 


State 211:
31: unary_expr -> unary_operation cast_expr  . 
  Reduce by 31: unary_expr -> unary_operation cast_expr  . 


State 212:
32: unary_expr -> KW_SIZEOF unary_expr  . 
  Reduce by 32: unary_expr -> KW_SIZEOF unary_expr  . 


State 213:
33: unary_expr -> KW_SIZEOF LBRACKET  . type_name RBRACKET 
17: primary_expr -> LBRACKET  . expr RBRACKET 
  0:   On type_name to state 283
  1:   On expr to state 216
  2:   On spec_qualifier_list to state 218
  3:   On assignment_expr to state 96
  4:   On type_specifier to state 155
  5:   On type_qualifier to state 156
  6:   On conditional_expr to state 97
  7:   On unary_expr to state 98
  8:   On KW_VOID to state 17
  9:   On KW_CHAR to state 18
  10:   On KW_SHORT to state 19
  11:   On KW_INT to state 20
  12:   On KW_LONG to state 21
  13:   On KW_FLOAT to state 22
  14:   On KW_DOUBLE to state 23
  15:   On KW_SIGNED to state 24
  16:   On KW_UNSIGNED to state 25
  17:   On struct_union_specifier to state 26
  18:   On enum_specifier to state 27
  19:   On typedef_name to state 28
  20:   On KW_CONST to state 29
  21:   On KW_VOLATILE to state 30
  22:   On logical_or_expr to state 99
  23:   On postfix_expr to state 100
  24:   On OPERATOR_INCR to state 101
  25:   On OPERATOR_DECR to state 102
  26:   On unary_operation to state 103
  27:   On KW_SIZEOF to state 104
  28:   On struct_union to state 34
  29:   On KW_ENUM to state 35
  30:   On IDENTIFIER to state 219
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On KW_STRUCT to state 36
  40:   On KW_UNION to state 37
  41:   On or_expr to state 113
  42:   On constant to state 114
  43:   On string_literal to state 115
  44:   On LBRACKET to state 116
  45:   On xor_expr to state 117
  46:   On floating_constant to state 118
  47:   On integer_constant to state 119
  48:   On enumeration_constant to state 120
  49:   On character_constant to state 121
  50:   On STRINGLITERAL to state 122
  51:   On WSTRINGLITERAL to state 123
  52:   On and_expr to state 124
  53:   On FLOATCONSTANT to state 125
  54:   On DECCONSTANT to state 126
  55:   On OCTCONSTANT to state 127
  56:   On HEXCONSTANT to state 128
  57:   On CHARCONSTANT to state 129
  58:   On WCHARCONSTANT to state 130
  59:   On equality_expr to state 131
  60:   On relational_expr to state 132
  61:   On shift_expr to state 133
  62:   On additive_expr to state 134
  63:   On multiplicative_expr to state 135
  64:   On cast_expr to state 136


State 214:
67: logical_and_expr -> logical_and_expr OPERATOR_BOOLAND  . or_expr 
  0:   On or_expr to state 284
  1:   On xor_expr to state 117
  2:   On and_expr to state 124
  3:   On equality_expr to state 131
  4:   On relational_expr to state 132
  5:   On shift_expr to state 133
  6:   On additive_expr to state 134
  7:   On multiplicative_expr to state 135
  8:   On cast_expr to state 136
  9:   On unary_expr to state 140
  10:   On LBRACKET to state 116
  11:   On postfix_expr to state 100
  12:   On OPERATOR_INCR to state 101
  13:   On OPERATOR_DECR to state 102
  14:   On unary_operation to state 103
  15:   On KW_SIZEOF to state 104
  16:   On primary_expr to state 106
  17:   On OPERATOR_BITAND to state 107
  18:   On OPERATOR_MULT to state 108
  19:   On OPERATOR_PLUS to state 109
  20:   On OPERATOR_MINUS to state 110
  21:   On OPERATOR_BITNEG to state 111
  22:   On OPERATOR_BOOLNEG to state 112
  23:   On IDENTIFIER to state 141
  24:   On constant to state 114
  25:   On string_literal to state 115
  26:   On floating_constant to state 118
  27:   On integer_constant to state 119
  28:   On enumeration_constant to state 120
  29:   On character_constant to state 121
  30:   On STRINGLITERAL to state 122
  31:   On WSTRINGLITERAL to state 123
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130


State 215:
65: or_expr -> or_expr OPERATOR_BITOR  . xor_expr 
  0:   On xor_expr to state 285
  1:   On and_expr to state 124
  2:   On equality_expr to state 131
  3:   On relational_expr to state 132
  4:   On shift_expr to state 133
  5:   On additive_expr to state 134
  6:   On multiplicative_expr to state 135
  7:   On cast_expr to state 136
  8:   On unary_expr to state 140
  9:   On LBRACKET to state 116
  10:   On postfix_expr to state 100
  11:   On OPERATOR_INCR to state 101
  12:   On OPERATOR_DECR to state 102
  13:   On unary_operation to state 103
  14:   On KW_SIZEOF to state 104
  15:   On primary_expr to state 106
  16:   On OPERATOR_BITAND to state 107
  17:   On OPERATOR_MULT to state 108
  18:   On OPERATOR_PLUS to state 109
  19:   On OPERATOR_MINUS to state 110
  20:   On OPERATOR_BITNEG to state 111
  21:   On OPERATOR_BOOLNEG to state 112
  22:   On IDENTIFIER to state 141
  23:   On constant to state 114
  24:   On string_literal to state 115
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130


State 216:
17: primary_expr -> LBRACKET expr  . RBRACKET 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 286
  1:   On COMMA to state 177


State 217:
41: cast_expr -> LBRACKET type_name  . RBRACKET cast_expr 
  0:   On RBRACKET to state 287


State 218:
167: type_name -> spec_qualifier_list  . 
168: type_name -> spec_qualifier_list  . abstract_declarator 
  0:   On abstract_declarator to state 288
  1:   On pointer to state 289
  2:   On direct_abstract_declarator to state 243
  3:   On OPERATOR_MULT to state 33
  4:   On LBRACKET to state 290
  5:   On LSQUBRACKET to state 245
  Reduce by 167: type_name -> spec_qualifier_list  . 


State 219:
181: typedef_name -> IDENTIFIER  . 
14: primary_expr -> IDENTIFIER  . 
9: enumeration_constant -> IDENTIFIER  . 
  Reduce by 181: typedef_name -> IDENTIFIER  . 
  Reduce by 14: primary_expr -> IDENTIFIER  . 
  Reduce by 9: enumeration_constant -> IDENTIFIER  . 
Solved RR CONFLICT for rules 14 and 181:
	removed { OPERATOR_MULT LBRACKET RBRACKET LSQUBRACKET } from the LA set of rule 181
Solved RR CONFLICT for rules 9 and 181:
	removed { OPERATOR_MULT LBRACKET RBRACKET LSQUBRACKET } from the LA set of rule 181
Solved RR CONFLICT for rules 9 and 14:
	removed { OPERATOR_BITOR COMMA EQUALS OPERATOR_PLUSEQU OPERATOR_MINUSEQU OPERATOR_MULTEQU OPERATOR_DIVEQU OPERATOR_MODEQU OPERATOR_ANDEQU OPERATOR_XOREQU OPERATOR_OREQU OPERATOR_BSLEQU OPERATOR_BSREQU OPERATOR_TERNARY OPERATOR_BITAND OPERATOR_BITXOR OPERATOR_BOOLAND OPERATOR_BOOLOR OPERATOR_LT OPERATOR_LTEQU OPERATOR_GT OPERATOR_GTEQU OPERATOR_EQUALITY OPERATOR_NEQU OPERATOR_MULT OPERATOR_DIV OPERATOR_MOD OPERATOR_PLUS OPERATOR_MINUS OPERATOR_BSL OPERATOR_BSR LBRACKET RBRACKET LSQUBRACKET OPERATOR_DOT OPERATOR_PTR OPERATOR_INCR OPERATOR_DECR } from the LA set of (removed) rule 14


State 220:
63: xor_expr -> xor_expr OPERATOR_BITXOR  . and_expr 
  0:   On and_expr to state 291
  1:   On equality_expr to state 131
  2:   On relational_expr to state 132
  3:   On shift_expr to state 133
  4:   On additive_expr to state 134
  5:   On multiplicative_expr to state 135
  6:   On cast_expr to state 136
  7:   On unary_expr to state 140
  8:   On LBRACKET to state 116
  9:   On postfix_expr to state 100
  10:   On OPERATOR_INCR to state 101
  11:   On OPERATOR_DECR to state 102
  12:   On unary_operation to state 103
  13:   On KW_SIZEOF to state 104
  14:   On primary_expr to state 106
  15:   On OPERATOR_BITAND to state 107
  16:   On OPERATOR_MULT to state 108
  17:   On OPERATOR_PLUS to state 109
  18:   On OPERATOR_MINUS to state 110
  19:   On OPERATOR_BITNEG to state 111
  20:   On OPERATOR_BOOLNEG to state 112
  21:   On IDENTIFIER to state 141
  22:   On constant to state 114
  23:   On string_literal to state 115
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On FLOATCONSTANT to state 125
  31:   On DECCONSTANT to state 126
  32:   On OCTCONSTANT to state 127
  33:   On HEXCONSTANT to state 128
  34:   On CHARCONSTANT to state 129
  35:   On WCHARCONSTANT to state 130


State 221:
61: and_expr -> and_expr OPERATOR_BITAND  . equality_expr 
  0:   On equality_expr to state 292
  1:   On relational_expr to state 132
  2:   On shift_expr to state 133
  3:   On additive_expr to state 134
  4:   On multiplicative_expr to state 135
  5:   On cast_expr to state 136
  6:   On unary_expr to state 140
  7:   On LBRACKET to state 116
  8:   On postfix_expr to state 100
  9:   On OPERATOR_INCR to state 101
  10:   On OPERATOR_DECR to state 102
  11:   On unary_operation to state 103
  12:   On KW_SIZEOF to state 104
  13:   On primary_expr to state 106
  14:   On OPERATOR_BITAND to state 107
  15:   On OPERATOR_MULT to state 108
  16:   On OPERATOR_PLUS to state 109
  17:   On OPERATOR_MINUS to state 110
  18:   On OPERATOR_BITNEG to state 111
  19:   On OPERATOR_BOOLNEG to state 112
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On floating_constant to state 118
  24:   On integer_constant to state 119
  25:   On enumeration_constant to state 120
  26:   On character_constant to state 121
  27:   On STRINGLITERAL to state 122
  28:   On WSTRINGLITERAL to state 123
  29:   On FLOATCONSTANT to state 125
  30:   On DECCONSTANT to state 126
  31:   On OCTCONSTANT to state 127
  32:   On HEXCONSTANT to state 128
  33:   On CHARCONSTANT to state 129
  34:   On WCHARCONSTANT to state 130


State 222:
58: equality_expr -> equality_expr OPERATOR_EQUALITY  . relational_expr 
  0:   On relational_expr to state 293
  1:   On shift_expr to state 133
  2:   On additive_expr to state 134
  3:   On multiplicative_expr to state 135
  4:   On cast_expr to state 136
  5:   On unary_expr to state 140
  6:   On LBRACKET to state 116
  7:   On postfix_expr to state 100
  8:   On OPERATOR_INCR to state 101
  9:   On OPERATOR_DECR to state 102
  10:   On unary_operation to state 103
  11:   On KW_SIZEOF to state 104
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On floating_constant to state 118
  23:   On integer_constant to state 119
  24:   On enumeration_constant to state 120
  25:   On character_constant to state 121
  26:   On STRINGLITERAL to state 122
  27:   On WSTRINGLITERAL to state 123
  28:   On FLOATCONSTANT to state 125
  29:   On DECCONSTANT to state 126
  30:   On OCTCONSTANT to state 127
  31:   On HEXCONSTANT to state 128
  32:   On CHARCONSTANT to state 129
  33:   On WCHARCONSTANT to state 130


State 223:
59: equality_expr -> equality_expr OPERATOR_NEQU  . relational_expr 
  0:   On relational_expr to state 294
  1:   On shift_expr to state 133
  2:   On additive_expr to state 134
  3:   On multiplicative_expr to state 135
  4:   On cast_expr to state 136
  5:   On unary_expr to state 140
  6:   On LBRACKET to state 116
  7:   On postfix_expr to state 100
  8:   On OPERATOR_INCR to state 101
  9:   On OPERATOR_DECR to state 102
  10:   On unary_operation to state 103
  11:   On KW_SIZEOF to state 104
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On floating_constant to state 118
  23:   On integer_constant to state 119
  24:   On enumeration_constant to state 120
  25:   On character_constant to state 121
  26:   On STRINGLITERAL to state 122
  27:   On WSTRINGLITERAL to state 123
  28:   On FLOATCONSTANT to state 125
  29:   On DECCONSTANT to state 126
  30:   On OCTCONSTANT to state 127
  31:   On HEXCONSTANT to state 128
  32:   On CHARCONSTANT to state 129
  33:   On WCHARCONSTANT to state 130


State 224:
53: relational_expr -> relational_expr OPERATOR_LT  . shift_expr 
  0:   On shift_expr to state 295
  1:   On additive_expr to state 134
  2:   On multiplicative_expr to state 135
  3:   On cast_expr to state 136
  4:   On unary_expr to state 140
  5:   On LBRACKET to state 116
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On floating_constant to state 118
  22:   On integer_constant to state 119
  23:   On enumeration_constant to state 120
  24:   On character_constant to state 121
  25:   On STRINGLITERAL to state 122
  26:   On WSTRINGLITERAL to state 123
  27:   On FLOATCONSTANT to state 125
  28:   On DECCONSTANT to state 126
  29:   On OCTCONSTANT to state 127
  30:   On HEXCONSTANT to state 128
  31:   On CHARCONSTANT to state 129
  32:   On WCHARCONSTANT to state 130


State 225:
54: relational_expr -> relational_expr OPERATOR_GT  . shift_expr 
  0:   On shift_expr to state 296
  1:   On additive_expr to state 134
  2:   On multiplicative_expr to state 135
  3:   On cast_expr to state 136
  4:   On unary_expr to state 140
  5:   On LBRACKET to state 116
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On floating_constant to state 118
  22:   On integer_constant to state 119
  23:   On enumeration_constant to state 120
  24:   On character_constant to state 121
  25:   On STRINGLITERAL to state 122
  26:   On WSTRINGLITERAL to state 123
  27:   On FLOATCONSTANT to state 125
  28:   On DECCONSTANT to state 126
  29:   On OCTCONSTANT to state 127
  30:   On HEXCONSTANT to state 128
  31:   On CHARCONSTANT to state 129
  32:   On WCHARCONSTANT to state 130


State 226:
55: relational_expr -> relational_expr OPERATOR_LTEQU  . shift_expr 
  0:   On shift_expr to state 297
  1:   On additive_expr to state 134
  2:   On multiplicative_expr to state 135
  3:   On cast_expr to state 136
  4:   On unary_expr to state 140
  5:   On LBRACKET to state 116
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On floating_constant to state 118
  22:   On integer_constant to state 119
  23:   On enumeration_constant to state 120
  24:   On character_constant to state 121
  25:   On STRINGLITERAL to state 122
  26:   On WSTRINGLITERAL to state 123
  27:   On FLOATCONSTANT to state 125
  28:   On DECCONSTANT to state 126
  29:   On OCTCONSTANT to state 127
  30:   On HEXCONSTANT to state 128
  31:   On CHARCONSTANT to state 129
  32:   On WCHARCONSTANT to state 130


State 227:
56: relational_expr -> relational_expr OPERATOR_GTEQU  . shift_expr 
  0:   On shift_expr to state 298
  1:   On additive_expr to state 134
  2:   On multiplicative_expr to state 135
  3:   On cast_expr to state 136
  4:   On unary_expr to state 140
  5:   On LBRACKET to state 116
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On floating_constant to state 118
  22:   On integer_constant to state 119
  23:   On enumeration_constant to state 120
  24:   On character_constant to state 121
  25:   On STRINGLITERAL to state 122
  26:   On WSTRINGLITERAL to state 123
  27:   On FLOATCONSTANT to state 125
  28:   On DECCONSTANT to state 126
  29:   On OCTCONSTANT to state 127
  30:   On HEXCONSTANT to state 128
  31:   On CHARCONSTANT to state 129
  32:   On WCHARCONSTANT to state 130


State 228:
50: shift_expr -> shift_expr OPERATOR_BSL  . additive_expr 
  0:   On additive_expr to state 299
  1:   On multiplicative_expr to state 135
  2:   On cast_expr to state 136
  3:   On unary_expr to state 140
  4:   On LBRACKET to state 116
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On primary_expr to state 106
  11:   On OPERATOR_BITAND to state 107
  12:   On OPERATOR_MULT to state 108
  13:   On OPERATOR_PLUS to state 109
  14:   On OPERATOR_MINUS to state 110
  15:   On OPERATOR_BITNEG to state 111
  16:   On OPERATOR_BOOLNEG to state 112
  17:   On IDENTIFIER to state 141
  18:   On constant to state 114
  19:   On string_literal to state 115
  20:   On floating_constant to state 118
  21:   On integer_constant to state 119
  22:   On enumeration_constant to state 120
  23:   On character_constant to state 121
  24:   On STRINGLITERAL to state 122
  25:   On WSTRINGLITERAL to state 123
  26:   On FLOATCONSTANT to state 125
  27:   On DECCONSTANT to state 126
  28:   On OCTCONSTANT to state 127
  29:   On HEXCONSTANT to state 128
  30:   On CHARCONSTANT to state 129
  31:   On WCHARCONSTANT to state 130


State 229:
51: shift_expr -> shift_expr OPERATOR_BSR  . additive_expr 
  0:   On additive_expr to state 300
  1:   On multiplicative_expr to state 135
  2:   On cast_expr to state 136
  3:   On unary_expr to state 140
  4:   On LBRACKET to state 116
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On primary_expr to state 106
  11:   On OPERATOR_BITAND to state 107
  12:   On OPERATOR_MULT to state 108
  13:   On OPERATOR_PLUS to state 109
  14:   On OPERATOR_MINUS to state 110
  15:   On OPERATOR_BITNEG to state 111
  16:   On OPERATOR_BOOLNEG to state 112
  17:   On IDENTIFIER to state 141
  18:   On constant to state 114
  19:   On string_literal to state 115
  20:   On floating_constant to state 118
  21:   On integer_constant to state 119
  22:   On enumeration_constant to state 120
  23:   On character_constant to state 121
  24:   On STRINGLITERAL to state 122
  25:   On WSTRINGLITERAL to state 123
  26:   On FLOATCONSTANT to state 125
  27:   On DECCONSTANT to state 126
  28:   On OCTCONSTANT to state 127
  29:   On HEXCONSTANT to state 128
  30:   On CHARCONSTANT to state 129
  31:   On WCHARCONSTANT to state 130


State 230:
47: additive_expr -> additive_expr OPERATOR_PLUS  . multiplicative_expr 
  0:   On multiplicative_expr to state 301
  1:   On cast_expr to state 136
  2:   On unary_expr to state 140
  3:   On LBRACKET to state 116
  4:   On postfix_expr to state 100
  5:   On OPERATOR_INCR to state 101
  6:   On OPERATOR_DECR to state 102
  7:   On unary_operation to state 103
  8:   On KW_SIZEOF to state 104
  9:   On primary_expr to state 106
  10:   On OPERATOR_BITAND to state 107
  11:   On OPERATOR_MULT to state 108
  12:   On OPERATOR_PLUS to state 109
  13:   On OPERATOR_MINUS to state 110
  14:   On OPERATOR_BITNEG to state 111
  15:   On OPERATOR_BOOLNEG to state 112
  16:   On IDENTIFIER to state 141
  17:   On constant to state 114
  18:   On string_literal to state 115
  19:   On floating_constant to state 118
  20:   On integer_constant to state 119
  21:   On enumeration_constant to state 120
  22:   On character_constant to state 121
  23:   On STRINGLITERAL to state 122
  24:   On WSTRINGLITERAL to state 123
  25:   On FLOATCONSTANT to state 125
  26:   On DECCONSTANT to state 126
  27:   On OCTCONSTANT to state 127
  28:   On HEXCONSTANT to state 128
  29:   On CHARCONSTANT to state 129
  30:   On WCHARCONSTANT to state 130


State 231:
48: additive_expr -> additive_expr OPERATOR_MINUS  . multiplicative_expr 
  0:   On multiplicative_expr to state 302
  1:   On cast_expr to state 136
  2:   On unary_expr to state 140
  3:   On LBRACKET to state 116
  4:   On postfix_expr to state 100
  5:   On OPERATOR_INCR to state 101
  6:   On OPERATOR_DECR to state 102
  7:   On unary_operation to state 103
  8:   On KW_SIZEOF to state 104
  9:   On primary_expr to state 106
  10:   On OPERATOR_BITAND to state 107
  11:   On OPERATOR_MULT to state 108
  12:   On OPERATOR_PLUS to state 109
  13:   On OPERATOR_MINUS to state 110
  14:   On OPERATOR_BITNEG to state 111
  15:   On OPERATOR_BOOLNEG to state 112
  16:   On IDENTIFIER to state 141
  17:   On constant to state 114
  18:   On string_literal to state 115
  19:   On floating_constant to state 118
  20:   On integer_constant to state 119
  21:   On enumeration_constant to state 120
  22:   On character_constant to state 121
  23:   On STRINGLITERAL to state 122
  24:   On WSTRINGLITERAL to state 123
  25:   On FLOATCONSTANT to state 125
  26:   On DECCONSTANT to state 126
  27:   On OCTCONSTANT to state 127
  28:   On HEXCONSTANT to state 128
  29:   On CHARCONSTANT to state 129
  30:   On WCHARCONSTANT to state 130


State 232:
43: multiplicative_expr -> multiplicative_expr OPERATOR_MULT  . cast_expr 
  0:   On cast_expr to state 303
  1:   On unary_expr to state 140
  2:   On LBRACKET to state 116
  3:   On postfix_expr to state 100
  4:   On OPERATOR_INCR to state 101
  5:   On OPERATOR_DECR to state 102
  6:   On unary_operation to state 103
  7:   On KW_SIZEOF to state 104
  8:   On primary_expr to state 106
  9:   On OPERATOR_BITAND to state 107
  10:   On OPERATOR_MULT to state 108
  11:   On OPERATOR_PLUS to state 109
  12:   On OPERATOR_MINUS to state 110
  13:   On OPERATOR_BITNEG to state 111
  14:   On OPERATOR_BOOLNEG to state 112
  15:   On IDENTIFIER to state 141
  16:   On constant to state 114
  17:   On string_literal to state 115
  18:   On floating_constant to state 118
  19:   On integer_constant to state 119
  20:   On enumeration_constant to state 120
  21:   On character_constant to state 121
  22:   On STRINGLITERAL to state 122
  23:   On WSTRINGLITERAL to state 123
  24:   On FLOATCONSTANT to state 125
  25:   On DECCONSTANT to state 126
  26:   On OCTCONSTANT to state 127
  27:   On HEXCONSTANT to state 128
  28:   On CHARCONSTANT to state 129
  29:   On WCHARCONSTANT to state 130


State 233:
44: multiplicative_expr -> multiplicative_expr OPERATOR_DIV  . cast_expr 
  0:   On cast_expr to state 304
  1:   On unary_expr to state 140
  2:   On LBRACKET to state 116
  3:   On postfix_expr to state 100
  4:   On OPERATOR_INCR to state 101
  5:   On OPERATOR_DECR to state 102
  6:   On unary_operation to state 103
  7:   On KW_SIZEOF to state 104
  8:   On primary_expr to state 106
  9:   On OPERATOR_BITAND to state 107
  10:   On OPERATOR_MULT to state 108
  11:   On OPERATOR_PLUS to state 109
  12:   On OPERATOR_MINUS to state 110
  13:   On OPERATOR_BITNEG to state 111
  14:   On OPERATOR_BOOLNEG to state 112
  15:   On IDENTIFIER to state 141
  16:   On constant to state 114
  17:   On string_literal to state 115
  18:   On floating_constant to state 118
  19:   On integer_constant to state 119
  20:   On enumeration_constant to state 120
  21:   On character_constant to state 121
  22:   On STRINGLITERAL to state 122
  23:   On WSTRINGLITERAL to state 123
  24:   On FLOATCONSTANT to state 125
  25:   On DECCONSTANT to state 126
  26:   On OCTCONSTANT to state 127
  27:   On HEXCONSTANT to state 128
  28:   On CHARCONSTANT to state 129
  29:   On WCHARCONSTANT to state 130


State 234:
45: multiplicative_expr -> multiplicative_expr OPERATOR_MOD  . cast_expr 
  0:   On cast_expr to state 305
  1:   On unary_expr to state 140
  2:   On LBRACKET to state 116
  3:   On postfix_expr to state 100
  4:   On OPERATOR_INCR to state 101
  5:   On OPERATOR_DECR to state 102
  6:   On unary_operation to state 103
  7:   On KW_SIZEOF to state 104
  8:   On primary_expr to state 106
  9:   On OPERATOR_BITAND to state 107
  10:   On OPERATOR_MULT to state 108
  11:   On OPERATOR_PLUS to state 109
  12:   On OPERATOR_MINUS to state 110
  13:   On OPERATOR_BITNEG to state 111
  14:   On OPERATOR_BOOLNEG to state 112
  15:   On IDENTIFIER to state 141
  16:   On constant to state 114
  17:   On string_literal to state 115
  18:   On floating_constant to state 118
  19:   On integer_constant to state 119
  20:   On enumeration_constant to state 120
  21:   On character_constant to state 121
  22:   On STRINGLITERAL to state 122
  23:   On WSTRINGLITERAL to state 123
  24:   On FLOATCONSTANT to state 125
  25:   On DECCONSTANT to state 126
  26:   On OCTCONSTANT to state 127
  27:   On HEXCONSTANT to state 128
  28:   On CHARCONSTANT to state 129
  29:   On WCHARCONSTANT to state 130


State 235:
148: direct_declarator -> direct_declarator LSQUBRACKET constant_expr RSQUBRACKET  . 
  Reduce by 148: direct_declarator -> direct_declarator LSQUBRACKET constant_expr RSQUBRACKET  . 


State 236:
149: direct_declarator -> direct_declarator LBRACKET param_type_list RBRACKET  . 
  Reduce by 149: direct_declarator -> direct_declarator LBRACKET param_type_list RBRACKET  . 


State 237:
151: direct_declarator -> direct_declarator LBRACKET identifier_list RBRACKET  . 
  Reduce by 151: direct_declarator -> direct_declarator LBRACKET identifier_list RBRACKET  . 


State 238:
166: identifier_list -> identifier_list COMMA  . IDENTIFIER 
  0:   On IDENTIFIER to state 306


State 239:
159: param_type_list -> param_list COMMA  . PUNCTUATOR_TRIPLEDOT 
161: param_list -> param_list COMMA  . param_declaration 
  0:   On PUNCTUATOR_TRIPLEDOT to state 307
  1:   On param_declaration to state 308
  2:   On declaration_specifiers to state 148
  3:   On storage_class_specifier to state 7
  4:   On type_specifier to state 8
  5:   On type_qualifier to state 9
  6:   On KW_TYPEDEF to state 12
  7:   On KW_EXTERN to state 13
  8:   On KW_STATIC to state 14
  9:   On KW_AUTO to state 15
  10:   On KW_REGISTER to state 16
  11:   On KW_VOID to state 17
  12:   On KW_CHAR to state 18
  13:   On KW_SHORT to state 19
  14:   On KW_INT to state 20
  15:   On KW_LONG to state 21
  16:   On KW_FLOAT to state 22
  17:   On KW_DOUBLE to state 23
  18:   On KW_SIGNED to state 24
  19:   On KW_UNSIGNED to state 25
  20:   On struct_union_specifier to state 26
  21:   On enum_specifier to state 27
  22:   On typedef_name to state 28
  23:   On KW_CONST to state 29
  24:   On KW_VOLATILE to state 30
  25:   On struct_union to state 34
  26:   On KW_ENUM to state 35
  27:   On IDENTIFIER to state 49
  28:   On KW_STRUCT to state 36
  29:   On KW_UNION to state 37


State 240:
162: param_declaration -> declaration_specifiers declarator  . 
  Reduce by 162: param_declaration -> declaration_specifiers declarator  . 


State 241:
164: param_declaration -> declaration_specifiers abstract_declarator  . 
  Reduce by 164: param_declaration -> declaration_specifiers abstract_declarator  . 


State 242:
144: declarator -> pointer  . direct_declarator 
169: abstract_declarator -> pointer  . 
171: abstract_declarator -> pointer  . direct_abstract_declarator 
  0:   On direct_declarator to state 55
  1:   On direct_abstract_declarator to state 309
  2:   On IDENTIFIER to state 56
  3:   On LBRACKET to state 244
  4:   On LSQUBRACKET to state 245
  Reduce by 169: abstract_declarator -> pointer  . 


State 243:
170: abstract_declarator -> direct_abstract_declarator  . 
174: direct_abstract_declarator -> direct_abstract_declarator  . LSQUBRACKET RSQUBRACKET 
176: direct_abstract_declarator -> direct_abstract_declarator  . LSQUBRACKET constant_expr RSQUBRACKET 
178: direct_abstract_declarator -> direct_abstract_declarator  . LBRACKET RBRACKET 
180: direct_abstract_declarator -> direct_abstract_declarator  . LBRACKET param_type_list RBRACKET 
  0:   On LSQUBRACKET to state 310
  1:   On LBRACKET to state 311
  Reduce by 170: abstract_declarator -> direct_abstract_declarator  . 


State 244:
146: direct_declarator -> LBRACKET  . declarator RBRACKET 
172: direct_abstract_declarator -> LBRACKET  . abstract_declarator RBRACKET 
177: direct_abstract_declarator -> LBRACKET  . RBRACKET 
179: direct_abstract_declarator -> LBRACKET  . param_type_list RBRACKET 
  0:   On declarator to state 57
  1:   On abstract_declarator to state 312
  2:   On RBRACKET to state 313
  3:   On param_type_list to state 314
  4:   On direct_declarator to state 10
  5:   On pointer to state 242
  6:   On direct_abstract_declarator to state 243
  7:   On param_list to state 145
  8:   On IDENTIFIER to state 31
  9:   On LBRACKET to state 244
  10:   On OPERATOR_MULT to state 33
  11:   On LSQUBRACKET to state 245
  12:   On param_declaration to state 147
  13:   On declaration_specifiers to state 148
  14:   On storage_class_specifier to state 7
  15:   On type_specifier to state 8
  16:   On type_qualifier to state 9
  17:   On KW_TYPEDEF to state 12
  18:   On KW_EXTERN to state 13
  19:   On KW_STATIC to state 14
  20:   On KW_AUTO to state 15
  21:   On KW_REGISTER to state 16
  22:   On KW_VOID to state 17
  23:   On KW_CHAR to state 18
  24:   On KW_SHORT to state 19
  25:   On KW_INT to state 20
  26:   On KW_LONG to state 21
  27:   On KW_FLOAT to state 22
  28:   On KW_DOUBLE to state 23
  29:   On KW_SIGNED to state 24
  30:   On KW_UNSIGNED to state 25
  31:   On struct_union_specifier to state 26
  32:   On enum_specifier to state 27
  33:   On typedef_name to state 28
  34:   On KW_CONST to state 29
  35:   On KW_VOLATILE to state 30
  36:   On struct_union to state 34
  37:   On KW_ENUM to state 35
  38:   On KW_STRUCT to state 36
  39:   On KW_UNION to state 37


State 245:
173: direct_abstract_declarator -> LSQUBRACKET  . RSQUBRACKET 
175: direct_abstract_declarator -> LSQUBRACKET  . constant_expr RSQUBRACKET 
  0:   On RSQUBRACKET to state 315
  1:   On constant_expr to state 316
  2:   On conditional_expr to state 139
  3:   On logical_or_expr to state 99
  4:   On logical_and_expr to state 105
  5:   On or_expr to state 113
  6:   On xor_expr to state 117
  7:   On and_expr to state 124
  8:   On equality_expr to state 131
  9:   On relational_expr to state 132
  10:   On shift_expr to state 133
  11:   On additive_expr to state 134
  12:   On multiplicative_expr to state 135
  13:   On cast_expr to state 136
  14:   On unary_expr to state 140
  15:   On LBRACKET to state 116
  16:   On postfix_expr to state 100
  17:   On OPERATOR_INCR to state 101
  18:   On OPERATOR_DECR to state 102
  19:   On unary_operation to state 103
  20:   On KW_SIZEOF to state 104
  21:   On primary_expr to state 106
  22:   On OPERATOR_BITAND to state 107
  23:   On OPERATOR_MULT to state 108
  24:   On OPERATOR_PLUS to state 109
  25:   On OPERATOR_MINUS to state 110
  26:   On OPERATOR_BITNEG to state 111
  27:   On OPERATOR_BOOLNEG to state 112
  28:   On IDENTIFIER to state 141
  29:   On constant to state 114
  30:   On string_literal to state 115
  31:   On floating_constant to state 118
  32:   On integer_constant to state 119
  33:   On enumeration_constant to state 120
  34:   On character_constant to state 121
  35:   On STRINGLITERAL to state 122
  36:   On WSTRINGLITERAL to state 123
  37:   On FLOATCONSTANT to state 125
  38:   On DECCONSTANT to state 126
  39:   On OCTCONSTANT to state 127
  40:   On HEXCONSTANT to state 128
  41:   On CHARCONSTANT to state 129
  42:   On WCHARCONSTANT to state 130


State 246:
117: struct_union_specifier -> struct_union LBRACE struct_declaration_list RBRACE  . 
  Reduce by 117: struct_union_specifier -> struct_union LBRACE struct_declaration_list RBRACE  . 


State 247:
123: struct_declaration_list -> struct_declaration_list struct_declaration  . 
  Reduce by 123: struct_declaration_list -> struct_declaration_list struct_declaration  . 


State 248:
124: struct_declaration -> spec_qualifier_list struct_declarator_list  . SCOLON 
130: struct_declarator_list -> struct_declarator_list  . COMMA struct_declarator 
  0:   On SCOLON to state 317
  1:   On COMMA to state 318


State 249:
129: struct_declarator_list -> struct_declarator  . 
  Reduce by 129: struct_declarator_list -> struct_declarator  . 


State 250:
131: struct_declarator -> declarator  . 
133: struct_declarator -> declarator  . COLON constant_expr 
  0:   On COLON to state 319
  Reduce by 131: struct_declarator -> declarator  . 


State 251:
132: struct_declarator -> COLON  . constant_expr 
  0:   On constant_expr to state 320
  1:   On conditional_expr to state 139
  2:   On logical_or_expr to state 99
  3:   On logical_and_expr to state 105
  4:   On or_expr to state 113
  5:   On xor_expr to state 117
  6:   On and_expr to state 124
  7:   On equality_expr to state 131
  8:   On relational_expr to state 132
  9:   On shift_expr to state 133
  10:   On additive_expr to state 134
  11:   On multiplicative_expr to state 135
  12:   On cast_expr to state 136
  13:   On unary_expr to state 140
  14:   On LBRACKET to state 116
  15:   On postfix_expr to state 100
  16:   On OPERATOR_INCR to state 101
  17:   On OPERATOR_DECR to state 102
  18:   On unary_operation to state 103
  19:   On KW_SIZEOF to state 104
  20:   On primary_expr to state 106
  21:   On OPERATOR_BITAND to state 107
  22:   On OPERATOR_MULT to state 108
  23:   On OPERATOR_PLUS to state 109
  24:   On OPERATOR_MINUS to state 110
  25:   On OPERATOR_BITNEG to state 111
  26:   On OPERATOR_BOOLNEG to state 112
  27:   On IDENTIFIER to state 141
  28:   On constant to state 114
  29:   On string_literal to state 115
  30:   On floating_constant to state 118
  31:   On integer_constant to state 119
  32:   On enumeration_constant to state 120
  33:   On character_constant to state 121
  34:   On STRINGLITERAL to state 122
  35:   On WSTRINGLITERAL to state 123
  36:   On FLOATCONSTANT to state 125
  37:   On DECCONSTANT to state 126
  38:   On OCTCONSTANT to state 127
  39:   On HEXCONSTANT to state 128
  40:   On CHARCONSTANT to state 129
  41:   On WCHARCONSTANT to state 130


State 252:
126: spec_qualifier_list -> type_specifier spec_qualifier_list  . 
  Reduce by 126: spec_qualifier_list -> type_specifier spec_qualifier_list  . 


State 253:
128: spec_qualifier_list -> type_qualifier spec_qualifier_list  . 
  Reduce by 128: spec_qualifier_list -> type_qualifier spec_qualifier_list  . 


State 254:
118: struct_union_specifier -> struct_union IDENTIFIER LBRACE struct_declaration_list  . RBRACE 
123: struct_declaration_list -> struct_declaration_list  . struct_declaration 
  0:   On RBRACE to state 321
  1:   On struct_declaration to state 247
  2:   On spec_qualifier_list to state 154
  3:   On type_specifier to state 155
  4:   On type_qualifier to state 156
  5:   On KW_VOID to state 17
  6:   On KW_CHAR to state 18
  7:   On KW_SHORT to state 19
  8:   On KW_INT to state 20
  9:   On KW_LONG to state 21
  10:   On KW_FLOAT to state 22
  11:   On KW_DOUBLE to state 23
  12:   On KW_SIGNED to state 24
  13:   On KW_UNSIGNED to state 25
  14:   On struct_union_specifier to state 26
  15:   On enum_specifier to state 27
  16:   On typedef_name to state 28
  17:   On KW_CONST to state 29
  18:   On KW_VOLATILE to state 30
  19:   On struct_union to state 34
  20:   On KW_ENUM to state 35
  21:   On IDENTIFIER to state 49
  22:   On KW_STRUCT to state 36
  23:   On KW_UNION to state 37


State 255:
134: enum_specifier -> KW_ENUM LBRACE enumerator_list RBRACE  . 
  Reduce by 134: enum_specifier -> KW_ENUM LBRACE enumerator_list RBRACE  . 


State 256:
138: enumerator_list -> enumerator_list COMMA  . enumerator 
  0:   On enumerator to state 322
  1:   On enumeration_constant to state 160
  2:   On IDENTIFIER to state 161


State 257:
140: enumerator -> enumeration_constant EQUALS  . constant_expr 
  0:   On constant_expr to state 323
  1:   On conditional_expr to state 139
  2:   On logical_or_expr to state 99
  3:   On logical_and_expr to state 105
  4:   On or_expr to state 113
  5:   On xor_expr to state 117
  6:   On and_expr to state 124
  7:   On equality_expr to state 131
  8:   On relational_expr to state 132
  9:   On shift_expr to state 133
  10:   On additive_expr to state 134
  11:   On multiplicative_expr to state 135
  12:   On cast_expr to state 136
  13:   On unary_expr to state 140
  14:   On LBRACKET to state 116
  15:   On postfix_expr to state 100
  16:   On OPERATOR_INCR to state 101
  17:   On OPERATOR_DECR to state 102
  18:   On unary_operation to state 103
  19:   On KW_SIZEOF to state 104
  20:   On primary_expr to state 106
  21:   On OPERATOR_BITAND to state 107
  22:   On OPERATOR_MULT to state 108
  23:   On OPERATOR_PLUS to state 109
  24:   On OPERATOR_MINUS to state 110
  25:   On OPERATOR_BITNEG to state 111
  26:   On OPERATOR_BOOLNEG to state 112
  27:   On IDENTIFIER to state 141
  28:   On constant to state 114
  29:   On string_literal to state 115
  30:   On floating_constant to state 118
  31:   On integer_constant to state 119
  32:   On enumeration_constant to state 120
  33:   On character_constant to state 121
  34:   On STRINGLITERAL to state 122
  35:   On WSTRINGLITERAL to state 123
  36:   On FLOATCONSTANT to state 125
  37:   On DECCONSTANT to state 126
  38:   On OCTCONSTANT to state 127
  39:   On HEXCONSTANT to state 128
  40:   On CHARCONSTANT to state 129
  41:   On WCHARCONSTANT to state 130


State 258:
135: enum_specifier -> KW_ENUM IDENTIFIER LBRACE enumerator_list  . RBRACE 
138: enumerator_list -> enumerator_list  . COMMA enumerator 
  0:   On RBRACE to state 324
  1:   On COMMA to state 256


State 259:
183: initialiser -> LBRACE initialiser_list  . RBRACE 
184: initialiser -> LBRACE initialiser_list  . COMMA RBRACE 
186: initialiser_list -> initialiser_list  . COMMA initialiser 
  0:   On RBRACE to state 325
  1:   On COMMA to state 326


State 260:
185: initialiser_list -> initialiser  . 
  Reduce by 185: initialiser_list -> initialiser  . 


State 261:
199: compound_stmt -> LBRACE declaration_list stmt_list RBRACE  . 
  Reduce by 199: compound_stmt -> LBRACE declaration_list stmt_list RBRACE  . 


State 262:
193: labeled_stmt -> IDENTIFIER COLON stmt  . 
  Reduce by 193: labeled_stmt -> IDENTIFIER COLON stmt  . 


State 263:
194: labeled_stmt -> KW_CASE constant_expr COLON  . stmt 
  0:   On stmt to state 327
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 264:
195: labeled_stmt -> KW_DEFAULT COLON stmt  . 
  Reduce by 195: labeled_stmt -> KW_DEFAULT COLON stmt  . 


State 265:
86: expr -> expr COMMA assignment_expr  . 
  Reduce by 86: expr -> expr COMMA assignment_expr  . 


State 266:
206: select_stmt -> KW_IF LBRACKET expr  . RBRACKET stmt 
207: select_stmt -> KW_IF LBRACKET expr  . RBRACKET stmt KW_ELSE stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 328
  1:   On COMMA to state 177


State 267:
208: select_stmt -> KW_SWITCH LBRACKET expr  . RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 329
  1:   On COMMA to state 177


State 268:
209: iter_stmt -> KW_WHILE LBRACKET expr  . RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 330
  1:   On COMMA to state 177


State 269:
210: iter_stmt -> KW_DO stmt KW_WHILE  . LBRACKET expr RBRACKET SCOLON 
  0:   On LBRACKET to state 331


State 270:
211: iter_stmt -> KW_FOR LBRACKET SCOLON  . SCOLON RBRACKET stmt 
213: iter_stmt -> KW_FOR LBRACKET SCOLON  . expr SCOLON RBRACKET stmt 
214: iter_stmt -> KW_FOR LBRACKET SCOLON  . SCOLON expr RBRACKET stmt 
217: iter_stmt -> KW_FOR LBRACKET SCOLON  . expr SCOLON expr RBRACKET stmt 
  0:   On SCOLON to state 332
  1:   On expr to state 333
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 271:
212: iter_stmt -> KW_FOR LBRACKET expr  . SCOLON SCOLON RBRACKET stmt 
215: iter_stmt -> KW_FOR LBRACKET expr  . SCOLON expr SCOLON RBRACKET stmt 
216: iter_stmt -> KW_FOR LBRACKET expr  . SCOLON SCOLON expr RBRACKET stmt 
218: iter_stmt -> KW_FOR LBRACKET expr  . SCOLON expr SCOLON expr RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On SCOLON to state 334
  1:   On COMMA to state 177


State 272:
219: jump_stmt -> KW_GOTO IDENTIFIER SCOLON  . 
  Reduce by 219: jump_stmt -> KW_GOTO IDENTIFIER SCOLON  . 


State 273:
223: jump_stmt -> KW_RETURN expr SCOLON  . 
  Reduce by 223: jump_stmt -> KW_RETURN expr SCOLON  . 


State 274:
73: assignment_expr -> unary_expr assignment_operator assignment_expr  . 
  Reduce by 73: assignment_expr -> unary_expr assignment_operator assignment_expr  . 


State 275:
71: conditional_expr -> logical_or_expr OPERATOR_TERNARY expr  . COLON conditional_expr 
86: expr -> expr  . COMMA assignment_expr 
  0:   On COLON to state 335
  1:   On COMMA to state 177


State 276:
69: logical_or_expr -> logical_or_expr OPERATOR_BOOLOR logical_and_expr  . 
67: logical_and_expr -> logical_and_expr  . OPERATOR_BOOLAND or_expr 
  0:   On OPERATOR_BOOLAND to state 214
  Reduce by 69: logical_or_expr -> logical_or_expr OPERATOR_BOOLOR logical_and_expr  . 


State 277:
19: postfix_expr -> postfix_expr LSQUBRACKET expr  . RSQUBRACKET 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RSQUBRACKET to state 336
  1:   On COMMA to state 177


State 278:
20: postfix_expr -> postfix_expr LBRACKET RBRACKET  . 
  Reduce by 20: postfix_expr -> postfix_expr LBRACKET RBRACKET  . 


State 279:
21: postfix_expr -> postfix_expr LBRACKET arg_expr_list  . RBRACKET 
27: arg_expr_list -> arg_expr_list  . COMMA assignment_expr 
  0:   On RBRACKET to state 337
  1:   On COMMA to state 338


State 280:
26: arg_expr_list -> assignment_expr  . 
  Reduce by 26: arg_expr_list -> assignment_expr  . 


State 281:
22: postfix_expr -> postfix_expr OPERATOR_DOT IDENTIFIER  . 
  Reduce by 22: postfix_expr -> postfix_expr OPERATOR_DOT IDENTIFIER  . 


State 282:
23: postfix_expr -> postfix_expr OPERATOR_PTR IDENTIFIER  . 
  Reduce by 23: postfix_expr -> postfix_expr OPERATOR_PTR IDENTIFIER  . 


State 283:
33: unary_expr -> KW_SIZEOF LBRACKET type_name  . RBRACKET 
  0:   On RBRACKET to state 339


State 284:
67: logical_and_expr -> logical_and_expr OPERATOR_BOOLAND or_expr  . 
65: or_expr -> or_expr  . OPERATOR_BITOR xor_expr 
  0:   On OPERATOR_BITOR to state 215
  Reduce by 67: logical_and_expr -> logical_and_expr OPERATOR_BOOLAND or_expr  . 


State 285:
65: or_expr -> or_expr OPERATOR_BITOR xor_expr  . 
63: xor_expr -> xor_expr  . OPERATOR_BITXOR and_expr 
  0:   On OPERATOR_BITXOR to state 220
  Reduce by 65: or_expr -> or_expr OPERATOR_BITOR xor_expr  . 


State 286:
17: primary_expr -> LBRACKET expr RBRACKET  . 
  Reduce by 17: primary_expr -> LBRACKET expr RBRACKET  . 


State 287:
41: cast_expr -> LBRACKET type_name RBRACKET  . cast_expr 
  0:   On cast_expr to state 340
  1:   On unary_expr to state 140
  2:   On LBRACKET to state 116
  3:   On postfix_expr to state 100
  4:   On OPERATOR_INCR to state 101
  5:   On OPERATOR_DECR to state 102
  6:   On unary_operation to state 103
  7:   On KW_SIZEOF to state 104
  8:   On primary_expr to state 106
  9:   On OPERATOR_BITAND to state 107
  10:   On OPERATOR_MULT to state 108
  11:   On OPERATOR_PLUS to state 109
  12:   On OPERATOR_MINUS to state 110
  13:   On OPERATOR_BITNEG to state 111
  14:   On OPERATOR_BOOLNEG to state 112
  15:   On IDENTIFIER to state 141
  16:   On constant to state 114
  17:   On string_literal to state 115
  18:   On floating_constant to state 118
  19:   On integer_constant to state 119
  20:   On enumeration_constant to state 120
  21:   On character_constant to state 121
  22:   On STRINGLITERAL to state 122
  23:   On WSTRINGLITERAL to state 123
  24:   On FLOATCONSTANT to state 125
  25:   On DECCONSTANT to state 126
  26:   On OCTCONSTANT to state 127
  27:   On HEXCONSTANT to state 128
  28:   On CHARCONSTANT to state 129
  29:   On WCHARCONSTANT to state 130


State 288:
168: type_name -> spec_qualifier_list abstract_declarator  . 
  Reduce by 168: type_name -> spec_qualifier_list abstract_declarator  . 


State 289:
169: abstract_declarator -> pointer  . 
171: abstract_declarator -> pointer  . direct_abstract_declarator 
  0:   On direct_abstract_declarator to state 309
  1:   On LBRACKET to state 290
  2:   On LSQUBRACKET to state 245
  Reduce by 169: abstract_declarator -> pointer  . 


State 290:
172: direct_abstract_declarator -> LBRACKET  . abstract_declarator RBRACKET 
177: direct_abstract_declarator -> LBRACKET  . RBRACKET 
179: direct_abstract_declarator -> LBRACKET  . param_type_list RBRACKET 
  0:   On abstract_declarator to state 312
  1:   On RBRACKET to state 313
  2:   On param_type_list to state 314
  3:   On pointer to state 289
  4:   On direct_abstract_declarator to state 243
  5:   On param_list to state 145
  6:   On OPERATOR_MULT to state 33
  7:   On LBRACKET to state 290
  8:   On LSQUBRACKET to state 245
  9:   On param_declaration to state 147
  10:   On declaration_specifiers to state 148
  11:   On storage_class_specifier to state 7
  12:   On type_specifier to state 8
  13:   On type_qualifier to state 9
  14:   On KW_TYPEDEF to state 12
  15:   On KW_EXTERN to state 13
  16:   On KW_STATIC to state 14
  17:   On KW_AUTO to state 15
  18:   On KW_REGISTER to state 16
  19:   On KW_VOID to state 17
  20:   On KW_CHAR to state 18
  21:   On KW_SHORT to state 19
  22:   On KW_INT to state 20
  23:   On KW_LONG to state 21
  24:   On KW_FLOAT to state 22
  25:   On KW_DOUBLE to state 23
  26:   On KW_SIGNED to state 24
  27:   On KW_UNSIGNED to state 25
  28:   On struct_union_specifier to state 26
  29:   On enum_specifier to state 27
  30:   On typedef_name to state 28
  31:   On KW_CONST to state 29
  32:   On KW_VOLATILE to state 30
  33:   On struct_union to state 34
  34:   On KW_ENUM to state 35
  35:   On IDENTIFIER to state 49
  36:   On KW_STRUCT to state 36
  37:   On KW_UNION to state 37


State 291:
63: xor_expr -> xor_expr OPERATOR_BITXOR and_expr  . 
61: and_expr -> and_expr  . OPERATOR_BITAND equality_expr 
  0:   On OPERATOR_BITAND to state 221
  Reduce by 63: xor_expr -> xor_expr OPERATOR_BITXOR and_expr  . 


State 292:
61: and_expr -> and_expr OPERATOR_BITAND equality_expr  . 
58: equality_expr -> equality_expr  . OPERATOR_EQUALITY relational_expr 
59: equality_expr -> equality_expr  . OPERATOR_NEQU relational_expr 
  0:   On OPERATOR_EQUALITY to state 222
  1:   On OPERATOR_NEQU to state 223
  Reduce by 61: and_expr -> and_expr OPERATOR_BITAND equality_expr  . 


State 293:
58: equality_expr -> equality_expr OPERATOR_EQUALITY relational_expr  . 
53: relational_expr -> relational_expr  . OPERATOR_LT shift_expr 
54: relational_expr -> relational_expr  . OPERATOR_GT shift_expr 
55: relational_expr -> relational_expr  . OPERATOR_LTEQU shift_expr 
56: relational_expr -> relational_expr  . OPERATOR_GTEQU shift_expr 
  0:   On OPERATOR_LT to state 224
  1:   On OPERATOR_GT to state 225
  2:   On OPERATOR_LTEQU to state 226
  3:   On OPERATOR_GTEQU to state 227
  Reduce by 58: equality_expr -> equality_expr OPERATOR_EQUALITY relational_expr  . 


State 294:
59: equality_expr -> equality_expr OPERATOR_NEQU relational_expr  . 
53: relational_expr -> relational_expr  . OPERATOR_LT shift_expr 
54: relational_expr -> relational_expr  . OPERATOR_GT shift_expr 
55: relational_expr -> relational_expr  . OPERATOR_LTEQU shift_expr 
56: relational_expr -> relational_expr  . OPERATOR_GTEQU shift_expr 
  0:   On OPERATOR_LT to state 224
  1:   On OPERATOR_GT to state 225
  2:   On OPERATOR_LTEQU to state 226
  3:   On OPERATOR_GTEQU to state 227
  Reduce by 59: equality_expr -> equality_expr OPERATOR_NEQU relational_expr  . 


State 295:
53: relational_expr -> relational_expr OPERATOR_LT shift_expr  . 
50: shift_expr -> shift_expr  . OPERATOR_BSL additive_expr 
51: shift_expr -> shift_expr  . OPERATOR_BSR additive_expr 
  0:   On OPERATOR_BSL to state 228
  1:   On OPERATOR_BSR to state 229
  Reduce by 53: relational_expr -> relational_expr OPERATOR_LT shift_expr  . 


State 296:
54: relational_expr -> relational_expr OPERATOR_GT shift_expr  . 
50: shift_expr -> shift_expr  . OPERATOR_BSL additive_expr 
51: shift_expr -> shift_expr  . OPERATOR_BSR additive_expr 
  0:   On OPERATOR_BSL to state 228
  1:   On OPERATOR_BSR to state 229
  Reduce by 54: relational_expr -> relational_expr OPERATOR_GT shift_expr  . 


State 297:
55: relational_expr -> relational_expr OPERATOR_LTEQU shift_expr  . 
50: shift_expr -> shift_expr  . OPERATOR_BSL additive_expr 
51: shift_expr -> shift_expr  . OPERATOR_BSR additive_expr 
  0:   On OPERATOR_BSL to state 228
  1:   On OPERATOR_BSR to state 229
  Reduce by 55: relational_expr -> relational_expr OPERATOR_LTEQU shift_expr  . 


State 298:
56: relational_expr -> relational_expr OPERATOR_GTEQU shift_expr  . 
50: shift_expr -> shift_expr  . OPERATOR_BSL additive_expr 
51: shift_expr -> shift_expr  . OPERATOR_BSR additive_expr 
  0:   On OPERATOR_BSL to state 228
  1:   On OPERATOR_BSR to state 229
  Reduce by 56: relational_expr -> relational_expr OPERATOR_GTEQU shift_expr  . 


State 299:
50: shift_expr -> shift_expr OPERATOR_BSL additive_expr  . 
47: additive_expr -> additive_expr  . OPERATOR_PLUS multiplicative_expr 
48: additive_expr -> additive_expr  . OPERATOR_MINUS multiplicative_expr 
  0:   On OPERATOR_PLUS to state 230
  1:   On OPERATOR_MINUS to state 231
  Reduce by 50: shift_expr -> shift_expr OPERATOR_BSL additive_expr  . 


State 300:
51: shift_expr -> shift_expr OPERATOR_BSR additive_expr  . 
47: additive_expr -> additive_expr  . OPERATOR_PLUS multiplicative_expr 
48: additive_expr -> additive_expr  . OPERATOR_MINUS multiplicative_expr 
  0:   On OPERATOR_PLUS to state 230
  1:   On OPERATOR_MINUS to state 231
  Reduce by 51: shift_expr -> shift_expr OPERATOR_BSR additive_expr  . 


State 301:
47: additive_expr -> additive_expr OPERATOR_PLUS multiplicative_expr  . 
43: multiplicative_expr -> multiplicative_expr  . OPERATOR_MULT cast_expr 
44: multiplicative_expr -> multiplicative_expr  . OPERATOR_DIV cast_expr 
45: multiplicative_expr -> multiplicative_expr  . OPERATOR_MOD cast_expr 
  0:   On OPERATOR_MULT to state 232
  1:   On OPERATOR_DIV to state 233
  2:   On OPERATOR_MOD to state 234
  Reduce by 47: additive_expr -> additive_expr OPERATOR_PLUS multiplicative_expr  . 


State 302:
48: additive_expr -> additive_expr OPERATOR_MINUS multiplicative_expr  . 
43: multiplicative_expr -> multiplicative_expr  . OPERATOR_MULT cast_expr 
44: multiplicative_expr -> multiplicative_expr  . OPERATOR_DIV cast_expr 
45: multiplicative_expr -> multiplicative_expr  . OPERATOR_MOD cast_expr 
  0:   On OPERATOR_MULT to state 232
  1:   On OPERATOR_DIV to state 233
  2:   On OPERATOR_MOD to state 234
  Reduce by 48: additive_expr -> additive_expr OPERATOR_MINUS multiplicative_expr  . 


State 303:
43: multiplicative_expr -> multiplicative_expr OPERATOR_MULT cast_expr  . 
  Reduce by 43: multiplicative_expr -> multiplicative_expr OPERATOR_MULT cast_expr  . 


State 304:
44: multiplicative_expr -> multiplicative_expr OPERATOR_DIV cast_expr  . 
  Reduce by 44: multiplicative_expr -> multiplicative_expr OPERATOR_DIV cast_expr  . 


State 305:
45: multiplicative_expr -> multiplicative_expr OPERATOR_MOD cast_expr  . 
  Reduce by 45: multiplicative_expr -> multiplicative_expr OPERATOR_MOD cast_expr  . 


State 306:
166: identifier_list -> identifier_list COMMA IDENTIFIER  . 
  Reduce by 166: identifier_list -> identifier_list COMMA IDENTIFIER  . 


State 307:
159: param_type_list -> param_list COMMA PUNCTUATOR_TRIPLEDOT  . 
  Reduce by 159: param_type_list -> param_list COMMA PUNCTUATOR_TRIPLEDOT  . 


State 308:
161: param_list -> param_list COMMA param_declaration  . 
  Reduce by 161: param_list -> param_list COMMA param_declaration  . 


State 309:
171: abstract_declarator -> pointer direct_abstract_declarator  . 
174: direct_abstract_declarator -> direct_abstract_declarator  . LSQUBRACKET RSQUBRACKET 
176: direct_abstract_declarator -> direct_abstract_declarator  . LSQUBRACKET constant_expr RSQUBRACKET 
178: direct_abstract_declarator -> direct_abstract_declarator  . LBRACKET RBRACKET 
180: direct_abstract_declarator -> direct_abstract_declarator  . LBRACKET param_type_list RBRACKET 
  0:   On LSQUBRACKET to state 310
  1:   On LBRACKET to state 311
  Reduce by 171: abstract_declarator -> pointer direct_abstract_declarator  . 


State 310:
174: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET  . RSQUBRACKET 
176: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET  . constant_expr RSQUBRACKET 
  0:   On RSQUBRACKET to state 341
  1:   On constant_expr to state 342
  2:   On conditional_expr to state 139
  3:   On logical_or_expr to state 99
  4:   On logical_and_expr to state 105
  5:   On or_expr to state 113
  6:   On xor_expr to state 117
  7:   On and_expr to state 124
  8:   On equality_expr to state 131
  9:   On relational_expr to state 132
  10:   On shift_expr to state 133
  11:   On additive_expr to state 134
  12:   On multiplicative_expr to state 135
  13:   On cast_expr to state 136
  14:   On unary_expr to state 140
  15:   On LBRACKET to state 116
  16:   On postfix_expr to state 100
  17:   On OPERATOR_INCR to state 101
  18:   On OPERATOR_DECR to state 102
  19:   On unary_operation to state 103
  20:   On KW_SIZEOF to state 104
  21:   On primary_expr to state 106
  22:   On OPERATOR_BITAND to state 107
  23:   On OPERATOR_MULT to state 108
  24:   On OPERATOR_PLUS to state 109
  25:   On OPERATOR_MINUS to state 110
  26:   On OPERATOR_BITNEG to state 111
  27:   On OPERATOR_BOOLNEG to state 112
  28:   On IDENTIFIER to state 141
  29:   On constant to state 114
  30:   On string_literal to state 115
  31:   On floating_constant to state 118
  32:   On integer_constant to state 119
  33:   On enumeration_constant to state 120
  34:   On character_constant to state 121
  35:   On STRINGLITERAL to state 122
  36:   On WSTRINGLITERAL to state 123
  37:   On FLOATCONSTANT to state 125
  38:   On DECCONSTANT to state 126
  39:   On OCTCONSTANT to state 127
  40:   On HEXCONSTANT to state 128
  41:   On CHARCONSTANT to state 129
  42:   On WCHARCONSTANT to state 130


State 311:
178: direct_abstract_declarator -> direct_abstract_declarator LBRACKET  . RBRACKET 
180: direct_abstract_declarator -> direct_abstract_declarator LBRACKET  . param_type_list RBRACKET 
  0:   On RBRACKET to state 343
  1:   On param_type_list to state 344
  2:   On param_list to state 145
  3:   On param_declaration to state 147
  4:   On declaration_specifiers to state 148
  5:   On storage_class_specifier to state 7
  6:   On type_specifier to state 8
  7:   On type_qualifier to state 9
  8:   On KW_TYPEDEF to state 12
  9:   On KW_EXTERN to state 13
  10:   On KW_STATIC to state 14
  11:   On KW_AUTO to state 15
  12:   On KW_REGISTER to state 16
  13:   On KW_VOID to state 17
  14:   On KW_CHAR to state 18
  15:   On KW_SHORT to state 19
  16:   On KW_INT to state 20
  17:   On KW_LONG to state 21
  18:   On KW_FLOAT to state 22
  19:   On KW_DOUBLE to state 23
  20:   On KW_SIGNED to state 24
  21:   On KW_UNSIGNED to state 25
  22:   On struct_union_specifier to state 26
  23:   On enum_specifier to state 27
  24:   On typedef_name to state 28
  25:   On KW_CONST to state 29
  26:   On KW_VOLATILE to state 30
  27:   On struct_union to state 34
  28:   On KW_ENUM to state 35
  29:   On IDENTIFIER to state 49
  30:   On KW_STRUCT to state 36
  31:   On KW_UNION to state 37


State 312:
172: direct_abstract_declarator -> LBRACKET abstract_declarator  . RBRACKET 
  0:   On RBRACKET to state 345


State 313:
177: direct_abstract_declarator -> LBRACKET RBRACKET  . 
  Reduce by 177: direct_abstract_declarator -> LBRACKET RBRACKET  . 


State 314:
179: direct_abstract_declarator -> LBRACKET param_type_list  . RBRACKET 
  0:   On RBRACKET to state 346


State 315:
173: direct_abstract_declarator -> LSQUBRACKET RSQUBRACKET  . 
  Reduce by 173: direct_abstract_declarator -> LSQUBRACKET RSQUBRACKET  . 


State 316:
175: direct_abstract_declarator -> LSQUBRACKET constant_expr  . RSQUBRACKET 
  0:   On RSQUBRACKET to state 347


State 317:
124: struct_declaration -> spec_qualifier_list struct_declarator_list SCOLON  . 
  Reduce by 124: struct_declaration -> spec_qualifier_list struct_declarator_list SCOLON  . 


State 318:
130: struct_declarator_list -> struct_declarator_list COMMA  . struct_declarator 
  0:   On struct_declarator to state 348
  1:   On declarator to state 250
  2:   On COLON to state 251
  3:   On direct_declarator to state 10
  4:   On pointer to state 11
  5:   On IDENTIFIER to state 56
  6:   On LBRACKET to state 32
  7:   On OPERATOR_MULT to state 33


State 319:
133: struct_declarator -> declarator COLON  . constant_expr 
  0:   On constant_expr to state 349
  1:   On conditional_expr to state 139
  2:   On logical_or_expr to state 99
  3:   On logical_and_expr to state 105
  4:   On or_expr to state 113
  5:   On xor_expr to state 117
  6:   On and_expr to state 124
  7:   On equality_expr to state 131
  8:   On relational_expr to state 132
  9:   On shift_expr to state 133
  10:   On additive_expr to state 134
  11:   On multiplicative_expr to state 135
  12:   On cast_expr to state 136
  13:   On unary_expr to state 140
  14:   On LBRACKET to state 116
  15:   On postfix_expr to state 100
  16:   On OPERATOR_INCR to state 101
  17:   On OPERATOR_DECR to state 102
  18:   On unary_operation to state 103
  19:   On KW_SIZEOF to state 104
  20:   On primary_expr to state 106
  21:   On OPERATOR_BITAND to state 107
  22:   On OPERATOR_MULT to state 108
  23:   On OPERATOR_PLUS to state 109
  24:   On OPERATOR_MINUS to state 110
  25:   On OPERATOR_BITNEG to state 111
  26:   On OPERATOR_BOOLNEG to state 112
  27:   On IDENTIFIER to state 141
  28:   On constant to state 114
  29:   On string_literal to state 115
  30:   On floating_constant to state 118
  31:   On integer_constant to state 119
  32:   On enumeration_constant to state 120
  33:   On character_constant to state 121
  34:   On STRINGLITERAL to state 122
  35:   On WSTRINGLITERAL to state 123
  36:   On FLOATCONSTANT to state 125
  37:   On DECCONSTANT to state 126
  38:   On OCTCONSTANT to state 127
  39:   On HEXCONSTANT to state 128
  40:   On CHARCONSTANT to state 129
  41:   On WCHARCONSTANT to state 130


State 320:
132: struct_declarator -> COLON constant_expr  . 
  Reduce by 132: struct_declarator -> COLON constant_expr  . 


State 321:
118: struct_union_specifier -> struct_union IDENTIFIER LBRACE struct_declaration_list RBRACE  . 
  Reduce by 118: struct_union_specifier -> struct_union IDENTIFIER LBRACE struct_declaration_list RBRACE  . 


State 322:
138: enumerator_list -> enumerator_list COMMA enumerator  . 
  Reduce by 138: enumerator_list -> enumerator_list COMMA enumerator  . 


State 323:
140: enumerator -> enumeration_constant EQUALS constant_expr  . 
  Reduce by 140: enumerator -> enumeration_constant EQUALS constant_expr  . 


State 324:
135: enum_specifier -> KW_ENUM IDENTIFIER LBRACE enumerator_list RBRACE  . 
  Reduce by 135: enum_specifier -> KW_ENUM IDENTIFIER LBRACE enumerator_list RBRACE  . 


State 325:
183: initialiser -> LBRACE initialiser_list RBRACE  . 
  Reduce by 183: initialiser -> LBRACE initialiser_list RBRACE  . 


State 326:
184: initialiser -> LBRACE initialiser_list COMMA  . RBRACE 
186: initialiser_list -> initialiser_list COMMA  . initialiser 
  0:   On RBRACE to state 350
  1:   On initialiser to state 351
  2:   On assignment_expr to state 166
  3:   On LBRACE to state 167
  4:   On conditional_expr to state 97
  5:   On unary_expr to state 98
  6:   On logical_or_expr to state 99
  7:   On postfix_expr to state 100
  8:   On OPERATOR_INCR to state 101
  9:   On OPERATOR_DECR to state 102
  10:   On unary_operation to state 103
  11:   On KW_SIZEOF to state 104
  12:   On logical_and_expr to state 105
  13:   On primary_expr to state 106
  14:   On OPERATOR_BITAND to state 107
  15:   On OPERATOR_MULT to state 108
  16:   On OPERATOR_PLUS to state 109
  17:   On OPERATOR_MINUS to state 110
  18:   On OPERATOR_BITNEG to state 111
  19:   On OPERATOR_BOOLNEG to state 112
  20:   On or_expr to state 113
  21:   On IDENTIFIER to state 141
  22:   On constant to state 114
  23:   On string_literal to state 115
  24:   On LBRACKET to state 116
  25:   On xor_expr to state 117
  26:   On floating_constant to state 118
  27:   On integer_constant to state 119
  28:   On enumeration_constant to state 120
  29:   On character_constant to state 121
  30:   On STRINGLITERAL to state 122
  31:   On WSTRINGLITERAL to state 123
  32:   On and_expr to state 124
  33:   On FLOATCONSTANT to state 125
  34:   On DECCONSTANT to state 126
  35:   On OCTCONSTANT to state 127
  36:   On HEXCONSTANT to state 128
  37:   On CHARCONSTANT to state 129
  38:   On WCHARCONSTANT to state 130
  39:   On equality_expr to state 131
  40:   On relational_expr to state 132
  41:   On shift_expr to state 133
  42:   On additive_expr to state 134
  43:   On multiplicative_expr to state 135
  44:   On cast_expr to state 136


State 327:
194: labeled_stmt -> KW_CASE constant_expr COLON stmt  . 
  Reduce by 194: labeled_stmt -> KW_CASE constant_expr COLON stmt  . 


State 328:
206: select_stmt -> KW_IF LBRACKET expr RBRACKET  . stmt 
207: select_stmt -> KW_IF LBRACKET expr RBRACKET  . stmt KW_ELSE stmt 
  0:   On stmt to state 352
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 329:
208: select_stmt -> KW_SWITCH LBRACKET expr RBRACKET  . stmt 
  0:   On stmt to state 353
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 330:
209: iter_stmt -> KW_WHILE LBRACKET expr RBRACKET  . stmt 
  0:   On stmt to state 354
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 331:
210: iter_stmt -> KW_DO stmt KW_WHILE LBRACKET  . expr RBRACKET SCOLON 
  0:   On expr to state 355
  1:   On assignment_expr to state 96
  2:   On conditional_expr to state 97
  3:   On unary_expr to state 98
  4:   On logical_or_expr to state 99
  5:   On postfix_expr to state 100
  6:   On OPERATOR_INCR to state 101
  7:   On OPERATOR_DECR to state 102
  8:   On unary_operation to state 103
  9:   On KW_SIZEOF to state 104
  10:   On logical_and_expr to state 105
  11:   On primary_expr to state 106
  12:   On OPERATOR_BITAND to state 107
  13:   On OPERATOR_MULT to state 108
  14:   On OPERATOR_PLUS to state 109
  15:   On OPERATOR_MINUS to state 110
  16:   On OPERATOR_BITNEG to state 111
  17:   On OPERATOR_BOOLNEG to state 112
  18:   On or_expr to state 113
  19:   On IDENTIFIER to state 141
  20:   On constant to state 114
  21:   On string_literal to state 115
  22:   On LBRACKET to state 116
  23:   On xor_expr to state 117
  24:   On floating_constant to state 118
  25:   On integer_constant to state 119
  26:   On enumeration_constant to state 120
  27:   On character_constant to state 121
  28:   On STRINGLITERAL to state 122
  29:   On WSTRINGLITERAL to state 123
  30:   On and_expr to state 124
  31:   On FLOATCONSTANT to state 125
  32:   On DECCONSTANT to state 126
  33:   On OCTCONSTANT to state 127
  34:   On HEXCONSTANT to state 128
  35:   On CHARCONSTANT to state 129
  36:   On WCHARCONSTANT to state 130
  37:   On equality_expr to state 131
  38:   On relational_expr to state 132
  39:   On shift_expr to state 133
  40:   On additive_expr to state 134
  41:   On multiplicative_expr to state 135
  42:   On cast_expr to state 136


State 332:
211: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON  . RBRACKET stmt 
214: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON  . expr RBRACKET stmt 
  0:   On RBRACKET to state 356
  1:   On expr to state 357
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 333:
213: iter_stmt -> KW_FOR LBRACKET SCOLON expr  . SCOLON RBRACKET stmt 
217: iter_stmt -> KW_FOR LBRACKET SCOLON expr  . SCOLON expr RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On SCOLON to state 358
  1:   On COMMA to state 177


State 334:
212: iter_stmt -> KW_FOR LBRACKET expr SCOLON  . SCOLON RBRACKET stmt 
215: iter_stmt -> KW_FOR LBRACKET expr SCOLON  . expr SCOLON RBRACKET stmt 
216: iter_stmt -> KW_FOR LBRACKET expr SCOLON  . SCOLON expr RBRACKET stmt 
218: iter_stmt -> KW_FOR LBRACKET expr SCOLON  . expr SCOLON expr RBRACKET stmt 
  0:   On SCOLON to state 359
  1:   On expr to state 360
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 335:
71: conditional_expr -> logical_or_expr OPERATOR_TERNARY expr COLON  . conditional_expr 
  0:   On conditional_expr to state 361
  1:   On logical_or_expr to state 99
  2:   On logical_and_expr to state 105
  3:   On or_expr to state 113
  4:   On xor_expr to state 117
  5:   On and_expr to state 124
  6:   On equality_expr to state 131
  7:   On relational_expr to state 132
  8:   On shift_expr to state 133
  9:   On additive_expr to state 134
  10:   On multiplicative_expr to state 135
  11:   On cast_expr to state 136
  12:   On unary_expr to state 140
  13:   On LBRACKET to state 116
  14:   On postfix_expr to state 100
  15:   On OPERATOR_INCR to state 101
  16:   On OPERATOR_DECR to state 102
  17:   On unary_operation to state 103
  18:   On KW_SIZEOF to state 104
  19:   On primary_expr to state 106
  20:   On OPERATOR_BITAND to state 107
  21:   On OPERATOR_MULT to state 108
  22:   On OPERATOR_PLUS to state 109
  23:   On OPERATOR_MINUS to state 110
  24:   On OPERATOR_BITNEG to state 111
  25:   On OPERATOR_BOOLNEG to state 112
  26:   On IDENTIFIER to state 141
  27:   On constant to state 114
  28:   On string_literal to state 115
  29:   On floating_constant to state 118
  30:   On integer_constant to state 119
  31:   On enumeration_constant to state 120
  32:   On character_constant to state 121
  33:   On STRINGLITERAL to state 122
  34:   On WSTRINGLITERAL to state 123
  35:   On FLOATCONSTANT to state 125
  36:   On DECCONSTANT to state 126
  37:   On OCTCONSTANT to state 127
  38:   On HEXCONSTANT to state 128
  39:   On CHARCONSTANT to state 129
  40:   On WCHARCONSTANT to state 130


State 336:
19: postfix_expr -> postfix_expr LSQUBRACKET expr RSQUBRACKET  . 
  Reduce by 19: postfix_expr -> postfix_expr LSQUBRACKET expr RSQUBRACKET  . 


State 337:
21: postfix_expr -> postfix_expr LBRACKET arg_expr_list RBRACKET  . 
  Reduce by 21: postfix_expr -> postfix_expr LBRACKET arg_expr_list RBRACKET  . 


State 338:
27: arg_expr_list -> arg_expr_list COMMA  . assignment_expr 
  0:   On assignment_expr to state 362
  1:   On conditional_expr to state 97
  2:   On unary_expr to state 98
  3:   On logical_or_expr to state 99
  4:   On postfix_expr to state 100
  5:   On OPERATOR_INCR to state 101
  6:   On OPERATOR_DECR to state 102
  7:   On unary_operation to state 103
  8:   On KW_SIZEOF to state 104
  9:   On logical_and_expr to state 105
  10:   On primary_expr to state 106
  11:   On OPERATOR_BITAND to state 107
  12:   On OPERATOR_MULT to state 108
  13:   On OPERATOR_PLUS to state 109
  14:   On OPERATOR_MINUS to state 110
  15:   On OPERATOR_BITNEG to state 111
  16:   On OPERATOR_BOOLNEG to state 112
  17:   On or_expr to state 113
  18:   On IDENTIFIER to state 141
  19:   On constant to state 114
  20:   On string_literal to state 115
  21:   On LBRACKET to state 116
  22:   On xor_expr to state 117
  23:   On floating_constant to state 118
  24:   On integer_constant to state 119
  25:   On enumeration_constant to state 120
  26:   On character_constant to state 121
  27:   On STRINGLITERAL to state 122
  28:   On WSTRINGLITERAL to state 123
  29:   On and_expr to state 124
  30:   On FLOATCONSTANT to state 125
  31:   On DECCONSTANT to state 126
  32:   On OCTCONSTANT to state 127
  33:   On HEXCONSTANT to state 128
  34:   On CHARCONSTANT to state 129
  35:   On WCHARCONSTANT to state 130
  36:   On equality_expr to state 131
  37:   On relational_expr to state 132
  38:   On shift_expr to state 133
  39:   On additive_expr to state 134
  40:   On multiplicative_expr to state 135
  41:   On cast_expr to state 136


State 339:
33: unary_expr -> KW_SIZEOF LBRACKET type_name RBRACKET  . 
  Reduce by 33: unary_expr -> KW_SIZEOF LBRACKET type_name RBRACKET  . 


State 340:
41: cast_expr -> LBRACKET type_name RBRACKET cast_expr  . 
  Reduce by 41: cast_expr -> LBRACKET type_name RBRACKET cast_expr  . 


State 341:
174: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET RSQUBRACKET  . 
  Reduce by 174: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET RSQUBRACKET  . 


State 342:
176: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET constant_expr  . RSQUBRACKET 
  0:   On RSQUBRACKET to state 363


State 343:
178: direct_abstract_declarator -> direct_abstract_declarator LBRACKET RBRACKET  . 
  Reduce by 178: direct_abstract_declarator -> direct_abstract_declarator LBRACKET RBRACKET  . 


State 344:
180: direct_abstract_declarator -> direct_abstract_declarator LBRACKET param_type_list  . RBRACKET 
  0:   On RBRACKET to state 364


State 345:
172: direct_abstract_declarator -> LBRACKET abstract_declarator RBRACKET  . 
  Reduce by 172: direct_abstract_declarator -> LBRACKET abstract_declarator RBRACKET  . 


State 346:
179: direct_abstract_declarator -> LBRACKET param_type_list RBRACKET  . 
  Reduce by 179: direct_abstract_declarator -> LBRACKET param_type_list RBRACKET  . 


State 347:
175: direct_abstract_declarator -> LSQUBRACKET constant_expr RSQUBRACKET  . 
  Reduce by 175: direct_abstract_declarator -> LSQUBRACKET constant_expr RSQUBRACKET  . 


State 348:
130: struct_declarator_list -> struct_declarator_list COMMA struct_declarator  . 
  Reduce by 130: struct_declarator_list -> struct_declarator_list COMMA struct_declarator  . 


State 349:
133: struct_declarator -> declarator COLON constant_expr  . 
  Reduce by 133: struct_declarator -> declarator COLON constant_expr  . 


State 350:
184: initialiser -> LBRACE initialiser_list COMMA RBRACE  . 
  Reduce by 184: initialiser -> LBRACE initialiser_list COMMA RBRACE  . 


State 351:
186: initialiser_list -> initialiser_list COMMA initialiser  . 
  Reduce by 186: initialiser_list -> initialiser_list COMMA initialiser  . 


State 352:
206: select_stmt -> KW_IF LBRACKET expr RBRACKET stmt  . 
207: select_stmt -> KW_IF LBRACKET expr RBRACKET stmt  . KW_ELSE stmt 
  0 (removed by precedence):   On KW_ELSE to state 365
  Reduce by 206: select_stmt -> KW_IF LBRACKET expr RBRACKET stmt  . 


State 353:
208: select_stmt -> KW_SWITCH LBRACKET expr RBRACKET stmt  . 
  Reduce by 208: select_stmt -> KW_SWITCH LBRACKET expr RBRACKET stmt  . 


State 354:
209: iter_stmt -> KW_WHILE LBRACKET expr RBRACKET stmt  . 
  Reduce by 209: iter_stmt -> KW_WHILE LBRACKET expr RBRACKET stmt  . 


State 355:
210: iter_stmt -> KW_DO stmt KW_WHILE LBRACKET expr  . RBRACKET SCOLON 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 366
  1:   On COMMA to state 177


State 356:
211: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON RBRACKET  . stmt 
  0:   On stmt to state 367
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 357:
214: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON expr  . RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 368
  1:   On COMMA to state 177


State 358:
213: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON  . RBRACKET stmt 
217: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON  . expr RBRACKET stmt 
  0:   On RBRACKET to state 369
  1:   On expr to state 370
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 359:
212: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON  . RBRACKET stmt 
216: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON  . expr RBRACKET stmt 
  0:   On RBRACKET to state 371
  1:   On expr to state 372
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 360:
215: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr  . SCOLON RBRACKET stmt 
218: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr  . SCOLON expr RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On SCOLON to state 373
  1:   On COMMA to state 177


State 361:
71: conditional_expr -> logical_or_expr OPERATOR_TERNARY expr COLON conditional_expr  . 
  Reduce by 71: conditional_expr -> logical_or_expr OPERATOR_TERNARY expr COLON conditional_expr  . 


State 362:
27: arg_expr_list -> arg_expr_list COMMA assignment_expr  . 
  Reduce by 27: arg_expr_list -> arg_expr_list COMMA assignment_expr  . 


State 363:
176: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET constant_expr RSQUBRACKET  . 
  Reduce by 176: direct_abstract_declarator -> direct_abstract_declarator LSQUBRACKET constant_expr RSQUBRACKET  . 


State 364:
180: direct_abstract_declarator -> direct_abstract_declarator LBRACKET param_type_list RBRACKET  . 
  Reduce by 180: direct_abstract_declarator -> direct_abstract_declarator LBRACKET param_type_list RBRACKET  . 


State 365:
207: select_stmt -> KW_IF LBRACKET expr RBRACKET stmt KW_ELSE  . stmt 
  0:   On stmt to state 374
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 366:
210: iter_stmt -> KW_DO stmt KW_WHILE LBRACKET expr RBRACKET  . SCOLON 
  0:   On SCOLON to state 375


State 367:
211: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON RBRACKET stmt  . 
  Reduce by 211: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON RBRACKET stmt  . 


State 368:
214: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON expr RBRACKET  . stmt 
  0:   On stmt to state 376
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 369:
213: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON RBRACKET  . stmt 
  0:   On stmt to state 377
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 370:
217: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON expr  . RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 378
  1:   On COMMA to state 177


State 371:
212: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON RBRACKET  . stmt 
  0:   On stmt to state 379
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 372:
216: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON expr  . RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 380
  1:   On COMMA to state 177


State 373:
215: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON  . RBRACKET stmt 
218: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON  . expr RBRACKET stmt 
  0:   On RBRACKET to state 381
  1:   On expr to state 382
  2:   On assignment_expr to state 96
  3:   On conditional_expr to state 97
  4:   On unary_expr to state 98
  5:   On logical_or_expr to state 99
  6:   On postfix_expr to state 100
  7:   On OPERATOR_INCR to state 101
  8:   On OPERATOR_DECR to state 102
  9:   On unary_operation to state 103
  10:   On KW_SIZEOF to state 104
  11:   On logical_and_expr to state 105
  12:   On primary_expr to state 106
  13:   On OPERATOR_BITAND to state 107
  14:   On OPERATOR_MULT to state 108
  15:   On OPERATOR_PLUS to state 109
  16:   On OPERATOR_MINUS to state 110
  17:   On OPERATOR_BITNEG to state 111
  18:   On OPERATOR_BOOLNEG to state 112
  19:   On or_expr to state 113
  20:   On IDENTIFIER to state 141
  21:   On constant to state 114
  22:   On string_literal to state 115
  23:   On LBRACKET to state 116
  24:   On xor_expr to state 117
  25:   On floating_constant to state 118
  26:   On integer_constant to state 119
  27:   On enumeration_constant to state 120
  28:   On character_constant to state 121
  29:   On STRINGLITERAL to state 122
  30:   On WSTRINGLITERAL to state 123
  31:   On and_expr to state 124
  32:   On FLOATCONSTANT to state 125
  33:   On DECCONSTANT to state 126
  34:   On OCTCONSTANT to state 127
  35:   On HEXCONSTANT to state 128
  36:   On CHARCONSTANT to state 129
  37:   On WCHARCONSTANT to state 130
  38:   On equality_expr to state 131
  39:   On relational_expr to state 132
  40:   On shift_expr to state 133
  41:   On additive_expr to state 134
  42:   On multiplicative_expr to state 135
  43:   On cast_expr to state 136


State 374:
207: select_stmt -> KW_IF LBRACKET expr RBRACKET stmt KW_ELSE stmt  . 
  Reduce by 207: select_stmt -> KW_IF LBRACKET expr RBRACKET stmt KW_ELSE stmt  . 


State 375:
210: iter_stmt -> KW_DO stmt KW_WHILE LBRACKET expr RBRACKET SCOLON  . 
  Reduce by 210: iter_stmt -> KW_DO stmt KW_WHILE LBRACKET expr RBRACKET SCOLON  . 


State 376:
214: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON expr RBRACKET stmt  . 
  Reduce by 214: iter_stmt -> KW_FOR LBRACKET SCOLON SCOLON expr RBRACKET stmt  . 


State 377:
213: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON RBRACKET stmt  . 
  Reduce by 213: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON RBRACKET stmt  . 


State 378:
217: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON expr RBRACKET  . stmt 
  0:   On stmt to state 383
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 379:
212: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON RBRACKET stmt  . 
  Reduce by 212: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON RBRACKET stmt  . 


State 380:
216: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON expr RBRACKET  . stmt 
  0:   On stmt to state 384
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 381:
215: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON RBRACKET  . stmt 
  0:   On stmt to state 385
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 382:
218: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON expr  . RBRACKET stmt 
86: expr -> expr  . COMMA assignment_expr 
  0:   On RBRACKET to state 386
  1:   On COMMA to state 177


State 383:
217: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON expr RBRACKET stmt  . 
  Reduce by 217: iter_stmt -> KW_FOR LBRACKET SCOLON expr SCOLON expr RBRACKET stmt  . 


State 384:
216: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON expr RBRACKET stmt  . 
  Reduce by 216: iter_stmt -> KW_FOR LBRACKET expr SCOLON SCOLON expr RBRACKET stmt  . 


State 385:
215: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON RBRACKET stmt  . 
  Reduce by 215: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON RBRACKET stmt  . 


State 386:
218: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON expr RBRACKET  . stmt 
  0:   On stmt to state 387
  1:   On labeled_stmt to state 76
  2:   On compound_stmt to state 77
  3:   On expr_stmt to state 78
  4:   On select_stmt to state 79
  5:   On iter_stmt to state 80
  6:   On jump_stmt to state 81
  7:   On IDENTIFIER to state 172
  8:   On KW_CASE to state 83
  9:   On KW_DEFAULT to state 84
  10:   On LBRACE to state 47
  11:   On SCOLON to state 85
  12:   On expr to state 86
  13:   On KW_IF to state 87
  14:   On KW_SWITCH to state 88
  15:   On KW_WHILE to state 89
  16:   On KW_DO to state 90
  17:   On KW_FOR to state 91
  18:   On KW_GOTO to state 92
  19:   On KW_CONTINUE to state 93
  20:   On KW_BREAK to state 94
  21:   On KW_RETURN to state 95
  22:   On assignment_expr to state 96
  23:   On conditional_expr to state 97
  24:   On unary_expr to state 98
  25:   On logical_or_expr to state 99
  26:   On postfix_expr to state 100
  27:   On OPERATOR_INCR to state 101
  28:   On OPERATOR_DECR to state 102
  29:   On unary_operation to state 103
  30:   On KW_SIZEOF to state 104
  31:   On logical_and_expr to state 105
  32:   On primary_expr to state 106
  33:   On OPERATOR_BITAND to state 107
  34:   On OPERATOR_MULT to state 108
  35:   On OPERATOR_PLUS to state 109
  36:   On OPERATOR_MINUS to state 110
  37:   On OPERATOR_BITNEG to state 111
  38:   On OPERATOR_BOOLNEG to state 112
  39:   On or_expr to state 113
  40:   On constant to state 114
  41:   On string_literal to state 115
  42:   On LBRACKET to state 116
  43:   On xor_expr to state 117
  44:   On floating_constant to state 118
  45:   On integer_constant to state 119
  46:   On enumeration_constant to state 120
  47:   On character_constant to state 121
  48:   On STRINGLITERAL to state 122
  49:   On WSTRINGLITERAL to state 123
  50:   On and_expr to state 124
  51:   On FLOATCONSTANT to state 125
  52:   On DECCONSTANT to state 126
  53:   On OCTCONSTANT to state 127
  54:   On HEXCONSTANT to state 128
  55:   On CHARCONSTANT to state 129
  56:   On WCHARCONSTANT to state 130
  57:   On equality_expr to state 131
  58:   On relational_expr to state 132
  59:   On shift_expr to state 133
  60:   On additive_expr to state 134
  61:   On multiplicative_expr to state 135
  62:   On cast_expr to state 136


State 387:
218: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON expr RBRACKET stmt  . 
  Reduce by 218: iter_stmt -> KW_FOR LBRACKET expr SCOLON expr SCOLON expr RBRACKET stmt  . 



