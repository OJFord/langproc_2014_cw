// Generated by Flexc++ V0.98.00 on Thu, 05 Mar 2015 16:51:01 +0000

#include <iostream>
#include <fstream>
#include <sstream>
#include <stdexcept>

// $insert class_ih
#include "Scanner.ih"


    // s_ranges__: use (unsigned) characters as index to obtain
    //           that character's range-number.
    //           The range for EOF is defined in a constant in the
    //           class header file
size_t const ScannerBase::s_ranges__[] =
{
     0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
     5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,
    22,22,22,22,22,22,23,23,24,25,26,27,28,29,30,31,31,31,31,32,33,34,34,34,34,
    34,35,36,36,36,36,36,36,36,36,37,38,38,39,40,40,41,42,43,44,45,46,47,48,49,
    50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,
    75,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
    77,77,77,77,77,78,
};

    // s_dfa__ contains the rows of *all* DFAs ordered by start state.
    // The enum class StartCondition__ is defined in the baseclass header
    // INITIAL is always 0.
    // Each entry defines the row to transit to if the column's
    // character range was sensed. Row numbers are relative to the
    // used DFA and d_dfaBase__ is set to the first row of the subset to use.
    // The row's final two values are begin and end indices in
    // s_rfc__[] (rule, flags and count), defining the state's rule details
int const ScannerBase::s_dfa__[][82] =
{
    // INITIAL
    {-1,-1, 1, 1,-1,-1, 1, 2, 3,-1, 4, 5, 6, 7, 8, 9,10,11,12,13,
         14,15,16,16,17,18,19,20,21,22,-1,23,23,23,23,24,23,23,23,23,
         23,25,-1,26,27,23,-1,28,29,30,31,32,33,34,23,35,23,23,36,23,
         23,23,23,23,37,38,39,40,41,42,23,23,23,43,44,45,46,-1,-1,-1,
            0, 0},  // 0
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            0, 1},  // 1
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            1, 2},  // 2
    {-1, 3, 3, 3, 3, 3, 3, 3,48, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3,49, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,-1,-1,
            2, 2},  // 3
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            2, 3},  // 4
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            3, 4},  // 5
    {-1,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-1,-1,
            4, 4},  // 6
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            4, 5},  // 7
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            5, 6},  // 8
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,55,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            6, 7},  // 9
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,56,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            7, 8},  // 10
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            8, 9},  // 11
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,58,-1,
         -1,-1,-1,-1,-1,-1,-1,59,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            9,10},  // 12
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,61,
         -1,62,62,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           10,11},  // 13
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           11,12},  // 14
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,64,
         -1,65,65,66,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1,-1,-1,-1,68,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,68,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           12,12},  // 15
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,64,
         -1,16,16,16,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,69,-1,70,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1,-1,-1,-1,69,-1,
         -1,-1,-1,-1,-1,-1,-1,70,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           12,13},  // 16
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           13,14},  // 17
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           14,15},  // 18
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,71,72,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           15,16},  // 19
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           16,17},  // 20
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,74,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           17,18},  // 21
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           18,19},  // 22
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           19,19},  // 23
    {-1,-1,-1,-1,-1,-1,-1,-1,77,-1,-1,-1,78,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           19,19},  // 24
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           19,20},  // 25
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           20,21},  // 26
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,79,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           21,22},  // 27
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,80,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 28
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,81,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 29
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,82,76,76,76,76,76,76,83,76,76,76,76,76,
         76,84,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 30
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,85,76,76,76,76,76,76,76,76,
         76,86,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 31
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,87,76,
         88,76,76,76,76,76,76,76,76,76,89,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 32
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,90,76,
         76,91,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 33
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,92,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 34
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,93,76,76,76,76,76,76,76,
         94,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 35
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,95,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 36
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,96,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 37
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,97,98,76,76,76,76,
         76,76,76,76,76,76,99,76,76,100,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 38
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,101,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 39
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         102,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 40
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,103,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 41
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,104,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           22,22},  // 42
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           22,23},  // 43
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,105,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,106,-1,-1,-1,-1,-1,
           23,24},  // 44
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           24,25},  // 45
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           25,26},  // 46
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           26,27},  // 47
    {-1, 3, 3, 3, 3, 3, 3, 3,48, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3,49, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,-1,-1,
           27,28},  // 48
    {-1, 3, 3, 3, 3, 3, 3, 3,48, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3,107,107,108, 3, 3, 3, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,
         108, 3,49, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,108,108,108,108,
         108,108,108,108,108,108,108,108,108,108,108,108,108, 3, 3, 3, 3, 3,-1,-1,
           28,28},  // 49
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           28,29},  // 50
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           29,30},  // 51
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           30,31},  // 52
    {-1,53,53,53,53,53,53,53,53,53,53,53,109,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-1,-1,
           31,31},  // 53
    {-1,53,53,53,53,53,53,53,53,53,53,53,109,53,53,53,53,53,53,53,
         53,110,110,111,53,53,53,53,53,53,53,111,111,111,111,111,111,111,111,111,
         111,53,54,53,53,53,53,111,111,111,111,111,111,111,111,111,111,111,111,111,
         111,111,111,111,111,111,111,111,111,111,111,111,111,53,53,53,53,53,-1,-1,
           31,31},  // 54
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           31,32},  // 55
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           32,33},  // 56
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           33,34},  // 57
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           34,35},  // 58
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           35,36},  // 59
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           36,37},  // 60
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,112,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           37,37},  // 61
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,113,
         -1,62,62,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           37,37},  // 62
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           37,38},  // 63
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,62,62,62,-1,-1,-1,-1,-1,-1,-1,-1,114,115,-1,115,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,114,115,-1,-1,-1,-1,-1,115,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           38,39},  // 64
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,64,
         -1,65,65,66,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,116,-1,117,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1,-1,-1,-1,116,-1,
         -1,-1,-1,-1,-1,-1,-1,117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           39,40},  // 65
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,64,
         -1,66,66,66,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           40,40},  // 66
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,118,-1,118,-1,
         -1,119,119,119,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           40,40},  // 67
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,120,120,120,-1,-1,-1,-1,-1,-1,-1,120,120,120,120,120,120,120,120,120,
         120,-1,-1,-1,-1,-1,-1,120,120,120,120,120,120,120,120,120,120,120,120,120,
         120,120,120,120,120,120,120,120,120,120,120,120,120,-1,-1,-1,-1,-1,-1,-1,
           40,40},  // 68
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,121,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,121,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           40,41},  // 69
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,69,-1,121,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,69,-1,
         -1,-1,-1,-1,-1,-1,-1,121,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           41,42},  // 70
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,122,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           42,43},  // 71
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           43,44},  // 72
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           44,45},  // 73
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           45,46},  // 74
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,123,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           46,47},  // 75
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           47,48},  // 76
    {-1,77,77,77,77,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,
         77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
         77,77,126,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
         77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-1,-1,
           48,48},  // 77
    {-1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,128,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-1,-1,
           48,48},  // 78
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           48,49},  // 79
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,129,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           49,50},  // 80
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,130,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           50,51},  // 81
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,131,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           51,52},  // 82
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,132,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           52,53},  // 83
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         133,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           53,54},  // 84
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,134,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           54,55},  // 85
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,135,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           55,56},  // 86
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,136,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           56,57},  // 87
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,137,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           57,58},  // 88
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,138,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           58,59},  // 89
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,139,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           59,60},  // 90
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,140,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           60,61},  // 91
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,141,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           61,62},  // 92
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           62,63},  // 93
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,142,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           63,64},  // 94
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         143,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           64,65},  // 95
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,144,76,76,76,76,76,76,
         76,76,76,76,76,76,145,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           65,66},  // 96
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,146,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           66,67},  // 97
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,147,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,148,-1,-1,-1,-1,-1,-1,-1,
           67,68},  // 98
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,149,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,150,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           68,69},  // 99
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,151,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           69,70},  // 100
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,152,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           70,71},  // 101
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,153,76,76,76,76,
         76,76,76,76,76,154,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           71,72},  // 102
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,155,76,76,156,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           72,73},  // 103
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,157,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           73,74},  // 104
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           74,75},  // 105
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           75,76},  // 106
    {-1, 3, 3, 3, 3, 3, 3, 3,48, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3,158,158,108, 3, 3, 3, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,
         108, 3,49, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,108,108,108,108,
         108,108,108,108,108,108,108,108,108,108,108,108,108, 3, 3, 3, 3, 3,-1,-1,
           76,76},  // 107
    {-1, 3, 3, 3, 3, 3, 3, 3,48, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3,108,108,108, 3, 3, 3, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,
         108, 3,49, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,108,108,108,108,
         108,108,108,108,108,108,108,108,108,108,108,108,108, 3, 3, 3, 3, 3,-1,-1,
           76,76},  // 108
    {-1,53,53,53,53,53,53,53,53,53,53,53,109,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,54,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
         53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-1,-1,
           76,77},  // 109
    {-1,53,53,53,53,53,53,53,53,53,53,53,109,53,53,53,53,53,53,53,
         53,159,159,111,53,53,53,53,53,53,53,111,111,111,111,111,111,111,111,111,
         111,53,54,53,53,53,53,111,111,111,111,111,111,111,111,111,111,111,111,111,
         111,111,111,111,111,111,111,111,111,111,111,111,111,53,53,53,53,53,-1,-1,
           77,77},  // 110
    {-1,53,53,53,53,53,53,53,53,53,53,53,109,53,53,53,53,53,53,53,
         53,111,111,111,53,53,53,53,53,53,53,111,111,111,111,111,111,111,111,111,
         111,53,54,53,53,53,53,111,111,111,111,111,111,111,111,111,111,111,111,111,
         111,111,111,111,111,111,111,111,111,111,111,111,111,53,53,53,53,53,-1,-1,
           77,77},  // 111
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           77,78},  // 112
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,114,115,-1,115,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,114,115,-1,-1,-1,-1,-1,115,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           78,79},  // 113
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,160,-1,160,-1,
         -1,161,161,161,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           79,79},  // 114
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           79,80},  // 115
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,162,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,162,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           80,81},  // 116
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,116,-1,162,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,116,-1,
         -1,-1,-1,-1,-1,-1,-1,162,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           81,82},  // 117
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,119,119,119,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           82,82},  // 118
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,119,119,119,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,-1,163,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,-1,-1,-1,-1,-1,163,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           82,83},  // 119
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,120,120,120,-1,-1,-1,-1,-1,-1,-1,120,120,120,120,120,120,164,120,120,
         120,-1,-1,-1,-1,-1,-1,120,120,120,120,120,120,120,120,120,120,120,120,120,
         120,120,120,120,120,120,120,164,120,120,120,120,120,-1,-1,-1,-1,-1,-1,-1,
           83,84},  // 120
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           84,85},  // 121
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           85,86},  // 122
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           86,87},  // 123
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           87,88},  // 124
    {-1,77,77,77,77,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,
         77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
         77,77,126,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
         77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-1,-1,
           88,89},  // 125
    {-1,77,77,77,77,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,
         77,165,165,166,77,77,77,77,77,77,77,166,166,166,166,166,166,166,166,166,
         166,77,126,77,77,77,77,166,166,166,166,166,166,166,166,166,166,166,166,166,
         166,166,166,166,166,166,166,166,166,166,166,166,166,77,77,77,77,77,-1,-1,
           89,89},  // 126
    {-1,127,127,127,127,127,127,127,127,127,127,127,167,127,127,127,127,127,127,127,
         127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,128,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-1,-1,
           89,89},  // 127
    {-1,127,127,127,127,127,127,127,127,127,127,127,167,127,127,127,127,127,127,127,
         127,168,168,169,127,127,127,127,127,127,127,169,169,169,169,169,169,169,169,169,
         169,127,128,127,127,127,127,169,169,169,169,169,169,169,169,169,169,169,169,169,
         169,169,169,169,169,169,169,169,169,169,169,169,169,127,127,127,127,127,-1,-1,
           89,89},  // 128
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,170,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           89,90},  // 129
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,171,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           90,91},  // 130
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,172,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           91,92},  // 131
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,173,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           92,93},  // 132
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,174,175,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           93,94},  // 133
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,176,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           94,95},  // 134
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,177,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           95,96},  // 135
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,178,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           96,97},  // 136
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,179,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           97,98},  // 137
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,180,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           98,99},  // 138
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,181,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           99,100},  // 139
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           100,101},  // 140
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,182,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           101,102},  // 141
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           102,103},  // 142
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,183,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           103,104},  // 143
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,184,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           104,105},  // 144
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,185,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           105,106},  // 145
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,186,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           106,107},  // 146
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         187,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           107,108},  // 147
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,188,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           108,109},  // 148
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,189,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           109,110},  // 149
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,190,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           110,111},  // 150
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,191,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           111,112},  // 151
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,192,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           112,113},  // 152
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,193,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           113,114},  // 153
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,194,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           114,115},  // 154
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,195,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           115,116},  // 155
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,196,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           116,117},  // 156
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,197,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           117,118},  // 157
    {-1, 3, 3, 3, 3, 3, 3, 3,48, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
          3,108,108,108, 3, 3, 3, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,
         108, 3,49, 3, 3, 3, 3,108,108,108,108,108,108,108,108,108,108,108,108,108,
         108,108,108,108,108,108,108,108,108,108,108,108,108, 3, 3, 3, 3, 3,-1,-1,
           118,118},  // 158
    {-1,53,53,53,53,53,53,53,53,53,53,53,109,53,53,53,53,53,53,53,
         53,111,111,111,53,53,53,53,53,53,53,111,111,111,111,111,111,111,111,111,
         111,53,54,53,53,53,53,111,111,111,111,111,111,111,111,111,111,111,111,111,
         111,111,111,111,111,111,111,111,111,111,111,111,111,53,53,53,53,53,-1,-1,
           118,118},  // 159
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,161,161,161,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           118,118},  // 160
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,161,161,161,-1,-1,-1,-1,-1,-1,-1,-1,-1,115,-1,115,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,115,-1,-1,-1,-1,-1,115,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           118,119},  // 161
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           119,120},  // 162
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
           120,121},  // 163
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,120,120,120,-1,-1,-1,-1,-1,-1,-1,120,120,120,120,120,120,164,120,120,
         120,-1,-1,-1,-1,-1,-1,120,120,120,120,120,120,120,120,120,120,120,120,120,
         120,120,120,120,120,120,120,164,120,120,120,120,120,-1,-1,-1,-1,-1,-1,-1,
           121,122},  // 164
    {-1,77,77,77,77,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,
         77,198,198,166,77,77,77,77,77,77,77,166,166,166,166,166,166,166,166,166,
         166,77,126,77,77,77,77,166,166,166,166,166,166,166,166,166,166,166,166,166,
         166,166,166,166,166,166,166,166,166,166,166,166,166,77,77,77,77,77,-1,-1,
           122,122},  // 165
    {-1,77,77,77,77,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,
         77,166,166,166,77,77,77,77,77,77,77,166,166,166,166,166,166,166,166,166,
         166,77,126,77,77,77,77,166,166,166,166,166,166,166,166,166,166,166,166,166,
         166,166,166,166,166,166,166,166,166,166,166,166,166,77,77,77,77,77,-1,-1,
           122,122},  // 166
    {-1,127,127,127,127,127,127,127,127,127,127,127,167,127,127,127,127,127,127,127,
         127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,128,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
         127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-1,-1,
           122,123},  // 167
    {-1,127,127,127,127,127,127,127,127,127,127,127,167,127,127,127,127,127,127,127,
         127,199,199,169,127,127,127,127,127,127,127,169,169,169,169,169,169,169,169,169,
         169,127,128,127,127,127,127,169,169,169,169,169,169,169,169,169,169,169,169,169,
         169,169,169,169,169,169,169,169,169,169,169,169,169,127,127,127,127,127,-1,-1,
           123,123},  // 168
    {-1,127,127,127,127,127,127,127,127,127,127,127,167,127,127,127,127,127,127,127,
         127,169,169,169,127,127,127,127,127,127,127,169,169,169,169,169,169,169,169,169,
         169,127,128,127,127,127,127,169,169,169,169,169,169,169,169,169,169,169,169,169,
         169,169,169,169,169,169,169,169,169,169,169,169,169,127,127,127,127,127,-1,-1,
           123,123},  // 169
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           123,124},  // 170
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,200,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           124,125},  // 171
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           125,126},  // 172
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           126,127},  // 173
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,201,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           127,128},  // 174
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,202,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           128,129},  // 175
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,203,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           129,130},  // 176
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,204,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           130,131},  // 177
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           131,132},  // 178
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           132,133},  // 179
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,205,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           133,134},  // 180
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,206,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           134,135},  // 181
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           135,136},  // 182
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           136,137},  // 183
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,207,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           137,138},  // 184
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,208,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           138,139},  // 185
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,209,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           139,140},  // 186
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,210,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           140,141},  // 187
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,211,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           141,142},  // 188
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,212,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           142,143},  // 189
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,213,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           143,144},  // 190
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,214,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           144,145},  // 191
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,215,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           145,146},  // 192
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         216,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           146,147},  // 193
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,217,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           147,148},  // 194
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           148,149},  // 195
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,218,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           149,150},  // 196
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,219,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           150,151},  // 197
    {-1,77,77,77,77,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,
         77,166,166,166,77,77,77,77,77,77,77,166,166,166,166,166,166,166,166,166,
         166,77,126,77,77,77,77,166,166,166,166,166,166,166,166,166,166,166,166,166,
         166,166,166,166,166,166,166,166,166,166,166,166,166,77,77,77,77,77,-1,-1,
           151,151},  // 198
    {-1,127,127,127,127,127,127,127,127,127,127,127,167,127,127,127,127,127,127,127,
         127,169,169,169,127,127,127,127,127,127,127,169,169,169,169,169,169,169,169,169,
         169,127,128,127,127,127,127,169,169,169,169,169,169,169,169,169,169,169,169,169,
         169,169,169,169,169,169,169,169,169,169,169,169,169,127,127,127,127,127,-1,-1,
           151,151},  // 199
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           151,152},  // 200
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           152,153},  // 201
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         220,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           153,154},  // 202
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,221,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           154,155},  // 203
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,222,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           155,156},  // 204
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         223,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           156,157},  // 205
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           157,158},  // 206
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,224,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           158,159},  // 207
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         225,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           159,160},  // 208
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           160,161},  // 209
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,226,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           161,162},  // 210
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,227,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           162,163},  // 211
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,228,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           163,164},  // 212
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,229,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           164,165},  // 213
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,230,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           165,166},  // 214
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,231,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           166,167},  // 215
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           167,168},  // 216
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         232,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           168,169},  // 217
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,233,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           169,170},  // 218
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           170,171},  // 219
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,234,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           171,172},  // 220
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,235,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           172,173},  // 221
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           173,174},  // 222
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           174,175},  // 223
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,236,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           175,176},  // 224
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           176,177},  // 225
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           177,178},  // 226
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           178,179},  // 227
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           179,180},  // 228
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           180,181},  // 229
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           181,182},  // 230
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,237,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           182,183},  // 231
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,238,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           183,184},  // 232
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,239,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           184,185},  // 233
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,240,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           185,186},  // 234
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           186,187},  // 235
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,241,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           187,188},  // 236
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           188,189},  // 237
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,242,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           189,190},  // 238
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,243,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           190,191},  // 239
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           191,192},  // 240
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           192,193},  // 241
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           193,194},  // 242
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,124,124,124,-1,-1,-1,-1,-1,-1,-1,76,76,76,76,76,76,76,76,76,
         76,-1,-1,-1,-1,76,-1,76,76,76,76,76,76,76,76,76,76,76,76,76,
         76,76,76,76,76,76,76,76,76,76,76,76,76,-1,-1,-1,-1,-1,-1,-1,
           194,195},  // 243
};

    // The first value is the rule index
    // The second value is the FLAG: see the scannerbase.h file
    // 1: Final     4: Count        11: Final/BOL,Inc     
    // 2: Inc.      5: Final,Count  13: Final/BOL,Count
    // 3: Final,Inc 9: Final/BOL    
    // The third value is the LOP count value (valid for Count flags)
size_t const ScannerBase::s_rfc__[][3] =
{
//     R  F  C
     { 0, 1, 0},  // 0
     {62, 1, 0},  // 1
     {64, 1, 0},  // 2
     {58, 1, 0},  // 3
     {45, 1, 0},  // 4
     {46, 1, 0},  // 5
     {49, 1, 0},  // 6
     {59, 1, 0},  // 7
     {50, 1, 0},  // 8
     {60, 1, 0},  // 9
     {54, 1, 0},  // 10
     {63, 1, 0},  // 11
     {36, 1, 0},  // 12
     {51, 1, 0},  // 13
     {53, 1, 0},  // 14
     {67, 1, 0},  // 15
     {52, 1, 0},  // 16
     {68, 1, 0},  // 17
     {77, 1, 0},  // 18
     {43, 1, 0},  // 19
     {44, 1, 0},  // 20
     {73, 1, 0},  // 21
     {47, 1, 0},  // 22
     {74, 1, 0},  // 23
     {48, 1, 0},  // 24
     {61, 1, 0},  // 25
     {72, 1, 0},  // 26
     {41, 1, 0},  // 27
     {80, 1, 0},  // 28
     {75, 1, 0},  // 29
     {85, 1, 0},  // 30
     {78, 1, 0},  // 31
     {56, 1, 0},  // 32
     {81, 1, 0},  // 33
     {57, 1, 0},  // 34
     {82, 1, 0},  // 35
     {55, 1, 0},  // 36
     {79, 1, 0},  // 37
     {34, 1, 0},  // 38
     {37, 1, 0},  // 39
     {36, 1, 0},  // 40
     {36, 1, 0},  // 41
     {65, 1, 0},  // 42
     {69, 1, 0},  // 43
     {71, 1, 0},  // 44
     {70, 1, 0},  // 45
     {66, 1, 0},  // 46
     {33, 1, 0},  // 47
     {86, 1, 0},  // 48
     {33, 1, 0},  // 49
     {33, 1, 0},  // 50
     {33, 1, 0},  // 51
     {33, 1, 0},  // 52
     {33, 1, 0},  // 53
     {33, 1, 0},  // 54
     {29, 1, 0},  // 55
     {33, 1, 0},  // 56
     {33, 1, 0},  // 57
     {33, 1, 0},  // 58
     {33, 1, 0},  // 59
     {33, 1, 0},  // 60
     {33, 1, 0},  // 61
     {30, 1, 0},  // 62
     {33, 1, 0},  // 63
     {33, 1, 0},  // 64
     {33, 1, 0},  // 65
     {33, 1, 0},  // 66
     {33, 1, 0},  // 67
     {33, 1, 0},  // 68
     {33, 1, 0},  // 69
     {33, 1, 0},  // 70
     {33, 1, 0},  // 71
     {33, 1, 0},  // 72
     {33, 1, 0},  // 73
     {87, 1, 0},  // 74
     {76, 1, 0},  // 75
     {39, 1, 0},  // 76
     {88, 1, 0},  // 77
     {34, 1, 0},  // 78
     {34, 1, 0},  // 79
     {37, 1, 0},  // 80
     {37, 1, 0},  // 81
     {35, 1, 0},  // 82
     {38, 1, 0},  // 83
     {36, 1, 0},  // 84
     {83, 1, 0},  // 85
     {84, 1, 0},  // 86
     {33, 1, 0},  // 87
     {42, 1, 0},  // 88
     {33, 1, 0},  // 89
     {33, 1, 0},  // 90
     {33, 1, 0},  // 91
     {33, 1, 0},  // 92
     {33, 1, 0},  // 93
     {33, 1, 0},  // 94
     {33, 1, 0},  // 95
     {33, 1, 0},  // 96
     {33, 1, 0},  // 97
     {33, 1, 0},  // 98
     {33, 1, 0},  // 99
     {22, 1, 0},  // 100
     {33, 1, 0},  // 101
     { 3, 1, 0},  // 102
     {33, 1, 0},  // 103
     {33, 1, 0},  // 104
     {33, 1, 0},  // 105
     {33, 1, 0},  // 106
     {33, 1, 0},  // 107
     {33, 1, 0},  // 108
     {33, 1, 0},  // 109
     {33, 1, 0},  // 110
     {33, 1, 0},  // 111
     {33, 1, 0},  // 112
     {33, 1, 0},  // 113
     {33, 1, 0},  // 114
     {33, 1, 0},  // 115
     {33, 1, 0},  // 116
     {33, 1, 0},  // 117
     {34, 1, 0},  // 118
     {37, 1, 0},  // 119
     {35, 1, 0},  // 120
     {38, 1, 0},  // 121
     {40, 1, 0},  // 122
     { 1, 1, 0},  // 123
     {33, 1, 0},  // 124
     { 9, 1, 0},  // 125
     {13, 1, 0},  // 126
     {33, 1, 0},  // 127
     {33, 1, 0},  // 128
     {33, 1, 0},  // 129
     {33, 1, 0},  // 130
     { 6, 1, 0},  // 131
     {10, 1, 0},  // 132
     {33, 1, 0},  // 133
     {33, 1, 0},  // 134
     {26, 1, 0},  // 135
     { 7, 1, 0},  // 136
     {33, 1, 0},  // 137
     {33, 1, 0},  // 138
     {33, 1, 0},  // 139
     {33, 1, 0},  // 140
     {33, 1, 0},  // 141
     {33, 1, 0},  // 142
     {33, 1, 0},  // 143
     {33, 1, 0},  // 144
     {33, 1, 0},  // 145
     {33, 1, 0},  // 146
     {33, 1, 0},  // 147
     {24, 1, 0},  // 148
     {33, 1, 0},  // 149
     {33, 1, 0},  // 150
     { 5, 1, 0},  // 151
     {17, 1, 0},  // 152
     {33, 1, 0},  // 153
     {33, 1, 0},  // 154
     {33, 1, 0},  // 155
     {33, 1, 0},  // 156
     {18, 1, 0},  // 157
     {33, 1, 0},  // 158
     {33, 1, 0},  // 159
     {19, 1, 0},  // 160
     {33, 1, 0},  // 161
     {33, 1, 0},  // 162
     {33, 1, 0},  // 163
     {33, 1, 0},  // 164
     {33, 1, 0},  // 165
     {33, 1, 0},  // 166
     {16, 1, 0},  // 167
     {33, 1, 0},  // 168
     {33, 1, 0},  // 169
     {32, 1, 0},  // 170
     {33, 1, 0},  // 171
     {33, 1, 0},  // 172
     { 2, 1, 0},  // 173
     {14, 1, 0},  // 174
     {33, 1, 0},  // 175
     {15, 1, 0},  // 176
     {23, 1, 0},  // 177
     {27, 1, 0},  // 178
     {31, 1, 0},  // 179
     { 4, 1, 0},  // 180
     { 8, 1, 0},  // 181
     {33, 1, 0},  // 182
     {33, 1, 0},  // 183
     {33, 1, 0},  // 184
     {33, 1, 0},  // 185
     {25, 1, 0},  // 186
     {33, 1, 0},  // 187
     {12, 1, 0},  // 188
     {33, 1, 0},  // 189
     {33, 1, 0},  // 190
     {21, 1, 0},  // 191
     {11, 1, 0},  // 192
     {20, 1, 0},  // 193
     {28, 1, 0},  // 194
};

int const (*ScannerBase::s_dfaBase__[])[82] =
{
    s_dfa__ + 0,
};

size_t ScannerBase::s_istreamNr = 0;

// $insert inputImplementation
ScannerBase::Input::Input()
:
    d_in(0),
    d_lineNr(1)
{}

ScannerBase::Input::Input(std::istream *iStream, size_t lineNr)
:
    d_in(iStream),
    d_lineNr(lineNr)
{}

size_t ScannerBase::Input::get()
{
    switch (size_t ch = next())         // get the next input char
    {
        case '\n':
            ++d_lineNr;
        // FALLING THROUGH

        default:
        return ch;
    }
}

size_t ScannerBase::Input::next()
{
    size_t ch;

    if (d_deque.empty())                    // deque empty: next char fm d_in
    {
        if (d_in == 0)
            return AT_EOF;
        ch = d_in->get();
        return *d_in ? ch : AT_EOF;
    }

    ch = d_deque.front();
    d_deque.pop_front();

    return ch;
}

void ScannerBase::Input::reRead(size_t ch)
{
    if (ch < 0x100)
    {
        if (ch == '\n')
            --d_lineNr;
        d_deque.push_front(ch);
    }
}

void ScannerBase::Input::reRead(std::string const &str, size_t fm)
{
    for (size_t idx = str.size(); idx-- > fm; )
        reRead(str[idx]);
}

ScannerBase::ScannerBase(std::istream &in, std::ostream &out)
:
    d_filename("-"),
    d_startCondition(StartCondition__::INITIAL),
    d_state(0),
    d_out(new std::ostream(out.rdbuf())),
    d_sawEOF(false),
    d_atBOL(true),
    d_tailCount(89, std::numeric_limits<size_t>::max()),
// $insert interactiveInit
    d_in(0),
    d_input(new std::istream(in.rdbuf())),
    d_dfaBase__(s_dfa__)
{}

void ScannerBase::switchStream__(std::istream &in, size_t lineNr)
{
    d_input.close();
    d_state = 0;
    d_input = Input(new std::istream(in.rdbuf()), lineNr);
    d_sawEOF = false;
    d_atBOL = true;
}


ScannerBase::ScannerBase(std::string const &infilename, std::string const &outfilename)
:
    d_filename(infilename),
    d_startCondition(StartCondition__::INITIAL),
    d_state(0),
    d_out(outfilename == "-"    ? new std::ostream(std::cout.rdbuf()) :
          outfilename == ""     ? new std::ostream(std::cerr.rdbuf()) :
                                  new std::ofstream(outfilename)),
    d_sawEOF(false),
    d_atBOL(true),
    d_tailCount(89, std::numeric_limits<size_t>::max()),
    d_input(new std::ifstream(infilename)),
    d_dfaBase__(s_dfa__)
{}

inline void ScannerBase::switchStreams(std::istream &in, std::ostream &out)
{
    switchStream__(in, 1);
    switchOstream(out);
}


void ScannerBase::switchOstream(std::ostream &out)
{
    *d_out << std::flush;
    d_out.reset(new std::ostream(out.rdbuf()));
    d_filename = "-";
}

// $insert debugFunctions
void ScannerBase::setDebug(bool onOff)
{}

bool ScannerBase::debug() const
{
    return false;
}

void ScannerBase::redo(size_t nChars)
{
    size_t from = nChars >= length() ? 0 : length() - nChars;
    d_input.reRead(d_matched, from);
    d_matched.resize(from);
}

void ScannerBase::switchOstream(std::string const &outfilename)
{
    *d_out << std::flush;
    d_out.reset(
            outfilename == "-"    ? new std::ostream(std::cout.rdbuf()) :
            outfilename == ""     ? new std::ostream(std::cerr.rdbuf()) :
                                    new std::ofstream(outfilename));
}


void ScannerBase::switchIstream(std::string const &infilename)
{
    d_input.close();
    d_filename = infilename;
    d_input = Input(new std::ifstream(infilename));
    d_sawEOF = false;
    d_atBOL = true;
}

void ScannerBase::switchStreams(std::string const &infilename,
                           std::string const &outfilename)
{
    switchOstream(outfilename);
    switchIstream(infilename);
}

void ScannerBase::pushStream(std::istream  &istr)
{
    std::istream *streamPtr = new std::istream(istr.rdbuf());
    p_pushStream("(istream)", streamPtr);
}

void ScannerBase::pushStream(std::string const &name)
{
    std::istream *streamPtr = new std::ifstream(name);
    if (!*streamPtr)
    {
        delete streamPtr;
        throw std::runtime_error("Cannot read " + name);
    }
    p_pushStream(name, streamPtr);
}


void ScannerBase::p_pushStream(std::string const &name, std::istream *streamPtr)
{
    if (d_streamStack.size() == s_maxSizeofStreamStack__)
    {
        delete streamPtr;
        throw std::length_error("Max stream stack size exceeded");
    }

    d_streamStack.push_back(StreamStruct{d_filename, d_input});
    d_filename = name;
    d_input = Input(streamPtr);
    d_sawEOF = false;
    d_atBOL = true;
}


bool ScannerBase::popStream()
{
    d_input.close();

    if (d_streamStack.empty())
        return false;

    StreamStruct &top = d_streamStack.back();

    d_input =   top.pushedInput;
    d_filename = top.pushedName;
    d_streamStack.pop_back();
    d_sawEOF = false;

    return true;
}

ScannerBase::ActionType__ ScannerBase::actionType__(size_t range)
{
    d_nextState = d_dfaBase__[d_state][range];

    if (d_nextState != -1)                  // transition is possible
        return ActionType__::CONTINUE;

    if (atFinalState())                     // FINAL state reached
        return ActionType__::MATCH;

    if (d_matched.size())
        return ActionType__::ECHO_FIRST;    // no match, echo the 1st char

    return range != s_rangeOfEOF__ ? 
                ActionType__::ECHO_CH 
            : 
                ActionType__::RETURN;
}

void ScannerBase::accept(size_t nChars)          // old name: less
{
    if (nChars < d_matched.size())
    {
        d_input.reRead(d_matched, nChars);
        d_matched.resize(nChars);
    }
}

  // The size of d_matched is determined:
  //    The current state is a known final state (as determined by 
  // inspectRFCs__(), just prior to calling matched__). 
  //    The contents of d_matched are reduced to d_final's size or (if set)
  // to the LOP-rule's tail size.
void ScannerBase::determineMatchedSize(FinData const &final)
{
    size_t length = final.matchLen;
    if (final.tailCount != std::numeric_limits<size_t>::max())
        length -= final.tailCount;

    d_input.reRead(d_matched, length);      // reread the tail section
    d_matched.resize(length);               // return what's left
}

  // At this point a rule has been matched.  The next character is not part of
  // the matched rule and is sent back to the input.  The final match length
  // is determined, the index of the matched rule is determined, and then
  // d_atBOL is updated. Finally the rule index is returned.
size_t ScannerBase::matched__(size_t ch)
{
    d_input.reRead(ch);

    if (!d_atBOL)
        d_final.atBOL.rule = std::numeric_limits<size_t>::max();

    FinData &final = d_final.atBOL.rule == std::numeric_limits<size_t>::max() ? 
                            d_final.notAtBOL
                        :
                            d_final.atBOL;

    determineMatchedSize(final);

    d_atBOL = *d_matched.rbegin() == '\n';


    return final.rule;
}

size_t ScannerBase::getRange__(int ch)       // using int to prevent casts
{
    if (ch != AT_EOF)
        d_sawEOF = false;

    return ch == AT_EOF ? static_cast<size_t>(s_rangeOfEOF__) : s_ranges__[ch];
}

  // At this point d_nextState contains the next state and continuation is
  // possible. The just read char. is appended to d_match, and LOP counts
  // are updated.
void ScannerBase::continue__(int ch)
{
    d_state = d_nextState;

    if (ch != AT_EOF)
        d_matched += ch;
}

void ScannerBase::echoCh__(size_t ch)
{
    *d_out << static_cast<char>(ch);
    d_atBOL = ch == '\n';
}


   // At this point there is no continuation. The last character is
   // pushed back into the input stream as well as all but the first char. in
   // the buffer. The first char. in the buffer is echoed to stderr. 
   // If there isn't any 1st char yet then the current char doesn't fit any
   // rules and that char is then echoed
void ScannerBase::echoFirst__(size_t ch)
{
    d_input.reRead(ch);
    d_input.reRead(d_matched, 1);
    echoCh__(d_matched[0]);
}

    // Inspect all s_rfc__ elements associated with the current state
    //  If the s_rfc__ element has its COUNT flag set then set the 
    // d_tailCount[rule] value to the element's tailCount value, if it has its 
    // INCREMENT flag set then increment d_tailCount[rule]
    //  If neither was set set the d_tailCount[rule] to numeric_limits<size_t>::max()
    // 
    // If the s_rfc__ element has its FINAL flag set then store the rule number
    // in d_final.second. If it has its FINAL + BOL flags set then store the
    // rule number in d_final.first
void ScannerBase::inspectRFCs__()
{
    for 
    (
        size_t begin = d_dfaBase__[d_state][s_finacIdx__], 
                 end = d_dfaBase__[d_state][s_finacIdx__ + 1];
            begin != end;
                ++begin
    )
    {
        size_t const *rfc = s_rfc__[begin];
        size_t flag = rfc[FLAGS];
        size_t rule = rfc[RULE];

        if (flag & INCREMENT)
            ++d_tailCount[rule];
        else 
            d_tailCount[rule] = (flag & COUNT) ? rfc[ACCCOUNT] : std::numeric_limits<size_t>::max();

        if (flag & FINAL)
        {
            FinData &final = (flag & BOL) ? d_final.atBOL : d_final.notAtBOL;
            final = FinData { rule, d_matched.size(), d_tailCount[rule] };
        }
    }
}

void ScannerBase::reset__()
{
    d_final = Final { {std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max() }, 
                      {std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max(), std::numeric_limits<size_t>::max() } };
    d_state = 0;
    d_return = true;

    if (!d_more)
        d_matched.clear();

    d_more = false;
}

int Scanner::executeAction__(size_t ruleIdx)
try
{
    switch (ruleIdx)
    {
        // $insert actions
        case 1:
        {
#line 57 "C89.lex"
            return Parser::KW_AUTO;

        }
        break;
        case 2:
        {
#line 58 "C89.lex"
            return Parser::KW_DOUBLE;

        }
        break;
        case 3:
        {
#line 59 "C89.lex"
            return Parser::KW_INT;

        }
        break;
        case 4:
        {
#line 60 "C89.lex"
            return Parser::KW_STRUCT;

        }
        break;
        case 5:
        {
#line 61 "C89.lex"
            return Parser::KW_BREAK;

        }
        break;
        case 6:
        {
#line 62 "C89.lex"
            return Parser::KW_ELSE;

        }
        break;
        case 7:
        {
#line 63 "C89.lex"
            return Parser::KW_LONG;

        }
        break;
        case 8:
        {
#line 64 "C89.lex"
            return Parser::KW_SWITCH;

        }
        break;
        case 9:
        {
#line 65 "C89.lex"
            return Parser::KW_CASE;

        }
        break;
        case 10:
        {
#line 66 "C89.lex"
            return Parser::KW_ENUM;

        }
        break;
        case 11:
        {
#line 67 "C89.lex"
            return Parser::KW_REGISTER;

        }
        break;
        case 12:
        {
#line 68 "C89.lex"
            return Parser::KW_TYPEDEF;

        }
        break;
        case 13:
        {
#line 69 "C89.lex"
            return Parser::KW_CHAR;

        }
        break;
        case 14:
        {
#line 70 "C89.lex"
            return Parser::KW_EXTERN;

        }
        break;
        case 15:
        {
#line 71 "C89.lex"
            return Parser::KW_RETURN;

        }
        break;
        case 16:
        {
#line 72 "C89.lex"
            return Parser::KW_UNION;

        }
        break;
        case 17:
        {
#line 73 "C89.lex"
            return Parser::KW_CONST;

        }
        break;
        case 18:
        {
#line 74 "C89.lex"
            return Parser::KW_FLOAT;

        }
        break;
        case 19:
        {
#line 75 "C89.lex"
            return Parser::KW_SHORT;

        }
        break;
        case 20:
        {
#line 76 "C89.lex"
            return Parser::KW_UNSIGNED;

        }
        break;
        case 21:
        {
#line 77 "C89.lex"
            return Parser::KW_CONTINUE;

        }
        break;
        case 22:
        {
#line 78 "C89.lex"
            return Parser::KW_FOR;

        }
        break;
        case 23:
        {
#line 79 "C89.lex"
            return Parser::KW_SIGNED;

        }
        break;
        case 24:
        {
#line 80 "C89.lex"
            return Parser::KW_VOID;

        }
        break;
        case 25:
        {
#line 81 "C89.lex"
            return Parser::KW_DEFAULT;

        }
        break;
        case 26:
        {
#line 82 "C89.lex"
            return Parser::KW_GOTO;

        }
        break;
        case 27:
        {
#line 83 "C89.lex"
            return Parser::KW_SIZEOF;

        }
        break;
        case 28:
        {
#line 84 "C89.lex"
            return Parser::KW_VOLATILE;

        }
        break;
        case 29:
        {
#line 85 "C89.lex"
            return Parser::KW_DO;

        }
        break;
        case 30:
        {
#line 86 "C89.lex"
            return Parser::KW_IF;

        }
        break;
        case 31:
        {
#line 87 "C89.lex"
            return Parser::KW_STATIC;

        }
        break;
        case 32:
        {
#line 88 "C89.lex"
            return Parser::KW_WHILE;

        }
        break;
        case 33:
        {
#line 94 "C89.lex"
            return Parser::IDENTIFIER;

        }
        break;
        case 34:
        case 35:
        {
#line 101 "C89.lex"
            return Parser::FLOATCONSTANT;

        }
        break;
        case 36:
        {
#line 102 "C89.lex"
            return Parser::DECCONSTANT;

        }
        break;
        case 37:
        {
#line 103 "C89.lex"
            return Parser::OCTCONSTANT;

        }
        break;
        case 38:
        {
#line 104 "C89.lex"
            return Parser::HEXCONSTANT;

        }
        break;
        case 39:
        {
#line 106 "C89.lex"
            return Parser::CHARCONSTANT;

        }
        break;
        case 40:
        {
#line 107 "C89.lex"
            return Parser::WCHARCONSTANT;

        }
        break;
        case 41:
        {
#line 109 "C89.lex"
            return Parser::STRINGLITERAL;

        }
        break;
        case 42:
        {
#line 110 "C89.lex"
            return Parser::WSTRINGLITERAL;

        }
        break;
        case 43:
        {
#line 116 "C89.lex"
            return Parser::LSQUBRACKET;

        }
        break;
        case 44:
        {
#line 117 "C89.lex"
            return Parser::RSQUBRACKET;

        }
        break;
        case 45:
        {
#line 118 "C89.lex"
            return Parser::LBRACKET;

        }
        break;
        case 46:
        {
#line 119 "C89.lex"
            return Parser::RBRACKET;

        }
        break;
        case 47:
        {
#line 120 "C89.lex"
            return Parser::LBRACE;

        }
        break;
        case 48:
        {
#line 121 "C89.lex"
            return Parser::RBRACE;

        }
        break;
        case 49:
        {
#line 122 "C89.lex"
            return Parser::ASTERISK;

        }
        break;
        case 50:
        {
#line 123 "C89.lex"
            return Parser::COMMA;

        }
        break;
        case 51:
        {
#line 124 "C89.lex"
            return Parser::COLON;

        }
        break;
        case 52:
        {
#line 125 "C89.lex"
            return Parser::EQUALS;

        }
        break;
        case 53:
        {
#line 126 "C89.lex"
            return Parser::SCOLON;

        }
        break;
        case 54:
        {
#line 132 "C89.lex"
            return Parser::OPERATOR_DOT;

        }
        break;
        case 55:
        {
#line 133 "C89.lex"
            return Parser::OPERATOR_PTR;

        }
        break;
        case 56:
        {
#line 134 "C89.lex"
            return Parser::OPERATOR_INCR;

        }
        break;
        case 57:
        {
#line 135 "C89.lex"
            return Parser::OPERATOR_DECR;

        }
        break;
        case 58:
        {
#line 136 "C89.lex"
            return Parser::OPERATOR_BITAND;

        }
        break;
        case 59:
        {
#line 137 "C89.lex"
            return Parser::OPERATOR_PLUS;

        }
        break;
        case 60:
        {
#line 138 "C89.lex"
            return Parser::OPERATOR_MINUS;

        }
        break;
        case 61:
        {
#line 139 "C89.lex"
            return Parser::OPERATOR_BITNEG;

        }
        break;
        case 62:
        {
#line 140 "C89.lex"
            return Parser::OPERATOR_BOOLNEG;

        }
        break;
        case 63:
        {
#line 141 "C89.lex"
            return Parser::OPERATOR_DIV;

        }
        break;
        case 64:
        {
#line 142 "C89.lex"
            return Parser::OPERATOR_MOD;

        }
        break;
        case 65:
        {
#line 143 "C89.lex"
            return Parser::OPERATOR_BSL;

        }
        break;
        case 66:
        {
#line 144 "C89.lex"
            return Parser::OPERATOR_BSR;

        }
        break;
        case 67:
        {
#line 145 "C89.lex"
            return Parser::OPERATOR_LT;

        }
        break;
        case 68:
        {
#line 146 "C89.lex"
            return Parser::OPERATOR_GT;

        }
        break;
        case 69:
        {
#line 147 "C89.lex"
            return Parser::OPERATOR_LTEQU;

        }
        break;
        case 70:
        {
#line 148 "C89.lex"
            return Parser::OPERATOR_GTEQU;

        }
        break;
        case 71:
        {
#line 149 "C89.lex"
            return Parser::OPERATOR_EQUALITY;

        }
        break;
        case 72:
        {
#line 150 "C89.lex"
            return Parser::OPERATOR_NEQU;

        }
        break;
        case 73:
        {
#line 151 "C89.lex"
            return Parser::OPERATOR_BITXOR;

        }
        break;
        case 74:
        {
#line 152 "C89.lex"
            return Parser::OPERATOR_BITOR;

        }
        break;
        case 75:
        {
#line 153 "C89.lex"
            return Parser::OPERATOR_BOOLAND;

        }
        break;
        case 76:
        {
#line 154 "C89.lex"
            return Parser::OPERATOR_BOOLOR;

        }
        break;
        case 77:
        {
#line 155 "C89.lex"
            return Parser::OPERATOR_TERNARY;

        }
        break;
        case 78:
        {
#line 156 "C89.lex"
            return Parser::OPERATOR_MULTEQU;

        }
        break;
        case 79:
        {
#line 157 "C89.lex"
            return Parser::OPERATOR_DIVEQU;

        }
        break;
        case 80:
        {
#line 158 "C89.lex"
            return Parser::OPERATOR_MODEQU;

        }
        break;
        case 81:
        {
#line 159 "C89.lex"
            return Parser::OPERATOR_PLUSEQU;

        }
        break;
        case 82:
        {
#line 160 "C89.lex"
            return Parser::OPERATOR_MINUSEQU;

        }
        break;
        case 83:
        {
#line 161 "C89.lex"
            return Parser::OPERATOR_BSLEQU;

        }
        break;
        case 84:
        {
#line 162 "C89.lex"
            return Parser::OPERATOR_BSREQU;

        }
        break;
        case 85:
        {
#line 163 "C89.lex"
            return Parser::OPERATOR_ANDEQU;

        }
        break;
        case 86:
        {
#line 164 "C89.lex"
            return Parser::OPERATOR_XOREQU;

        }
        break;
        case 87:
        {
#line 165 "C89.lex"
            return Parser::OPERATOR_OREQU;

        }
        break;
        case 88:
        {
#line 171 "C89.lex"
            return Parser::PUNCTUATOR_TRIPLEDOT;

        }
        break;
    }
    noReturn__();
    return 0;
}
catch (Leave__ value)
{
    return static_cast<int>(value);
}

int Scanner::lex__()
{
    reset__();
    preCode();

    while (true)
    {
        size_t ch = get__();                // fetch next char
        size_t range = getRange__(ch);      // determine the range

        inspectRFCs__();                    // update d_tailCount values

        switch (actionType__(range))        // determine the action
        {
            case ActionType__::CONTINUE:
                continue__(ch);
            continue;

            case ActionType__::MATCH:
            {
                d_token__ = executeAction__(matched__(ch));
                if (return__())
                {
                    print();
                    return d_token__;
                }
                break;
            }

            case ActionType__::ECHO_FIRST:
                echoFirst__(ch);
            break;

            case ActionType__::ECHO_CH:
                echoCh__(ch);
            break;

            case ActionType__::RETURN:
                if (!popStream())
                    return 0;
            continue;
        } // switch

        reset__();
        preCode();
    } // while
}

void ScannerBase::print__() const
{
}


